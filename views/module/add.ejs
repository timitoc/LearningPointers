<!doctype html>
<html lang="en-us">
	<head>
		<title>Add module</title>
		<meta charset="utf-8">
		<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.1.1.slim.min.js" integrity="sha384-A7FZj7v+d/sdmMqp/nOQwliLvUsJfDHW+k9Omg/a/EheAdgtzNs3hpfag6Ed950n" crossorigin="anonymous"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js" integrity="sha384-DztdAPBWPRXSA/3eYEEUWrWCy7G5KFbe8fFjk5JAIxUYHKkDx6Qin1DkWx51bBrb" crossorigin="anonymous"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>
		<script
		src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js" ></script>
	<link rel="stylesheet" href="/style_sheets/dashboard.css">
	<link rel="stylesheet" href="/style_sheets/add_module.css">

</head>

<body>
	<form action="/course/<%=course.url%>/modules/add" method="post">
		<nav class="navbar navbar-toggleable-md navbar-light">
			<button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
			</button>
			<a class="navbar-brand" href="/">LearningPointers</a>
			<input type="hidden" name="_csrf" value="<%=csrfToken%>">
			<input type="hidden" id="markdown" name="markdown">
			<div class="collapse navbar-collapse" id="navbarSupportedContent">
				<ul class="navbar-nav ml-auto">
					<button type="submit" class="btn btn-primary" type="submit">Add module</button>
				</ul>
			</div>

		</nav>
		<div class="container">
			<br>
			<div class="row">
				<div class="col-lg-6"> <div id="editor"><%=course.text_md%></div> </div>
				<div class="col-lg-6"> <div id="preview"></div> </div>
			</div>
			<br>
			<div class="row">
				<div class="col-lg-12">
					<input type="text" required name="title" placeholder="Module title" class="form-control"/>
				</div>
			</div>
		</div>
		<script src="/ace-builds/src-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
		<script src="/ace-builds/src-noconflict/ext-language_tools.js" type="text/javascript" charset="utf-8"></script>
		<script src="/scripts/js.cookie.js" type="text/javascript" charset="utf-8"></script>

		<script src="https://cdn.rawgit.com/showdownjs/showdown/1.7.1/dist/showdown.min.js"></script>

		<script>
			var webAsmSupport = true;
var converter;
try{ WebAssembly; }
catch(e) {
	webAsmSupport = false;
	converter = new showdown.Converter();
}
		</script>

		<script>window.define = ace.define;</script>
		<script>
			Array.prototype.last = function() {
				return this[this.length-1];
			}
var editor = ace.edit("editor");
editor.getSession().setMode("ace/mode/markdown");
editor.setAutoScrollEditorIntoView(true);
editor.setOption("maxLines", 30);
editor.setOption("minLines", 30);
editor.getSession().setUseWrapMode(true);

editor.setOptions({
	fontSize: "12pt"
});

var initialized = false;

var old;

function renderMarkdown() {

	if(initialized){
		if(old != editor.getValue()) {

			var rendered = editor.getValue()
				.split('\n\n')
				.map(function(pgf) {
					try{
						if(webAsmSupport)
							return pgf ? Module.ccall('parse', 'string', ['string'], [pgf + '\n\0']) : "<br>";
						return converter.makeHtml(pgf);
					}
					catch(err){
						return "<small>Error at rendering.</small>";
					}
				})
				.reduce(function(result, value) {
					return result + value;
				}, "");

			document.getElementById("preview").innerHTML = rendered;
			document.getElementById("markdown").value = editor.getValue();

			old = editor.getValue();
			Cookies.set('md', editor.getValue());
		}
	}
}

setInterval(renderMarkdown, 100);
		</script>

		<script type='text/javascript'>
			var Module = {
				onRuntimeInitialized: function() {
					initialized = true;
					if(Cookies.get('md')) {
						editor.setValue(Cookies.get('md'), 1);
					}
				}
			}
		</script>
		<script async type="text/javascript" src="/webasm/editor.js"></script>
	</form>
</body>
</html>
