webpackJsonp([0,3],{

/***/ "./node_modules/css-loader/index.js!./src/main/webapp/app/account/password/password-strength-bar.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(7)();
// imports


// module
exports.push([module.i, "/* ==========================================================================\nstart Password strength bar style\n========================================================================== */\nul#strengthBar {\n    display:inline;\n    list-style:none;\n    margin:0;\n    margin-left:15px;\n    padding:0;\n    vertical-align:2px;\n}\n\n.point:last {\n    margin:0 !important;\n}\n.point {\n    background:#DDD;\n    border-radius:2px;\n    display:inline-block;\n    height:5px;\n    margin-right:1px;\n    width:20px;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./src/main/webapp/app/home/home.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(7)();
// imports


// module
exports.push([module.i, "/* ==========================================================================\nMain page styles\n========================================================================== */\n\n.hipster {\n    display: inline-block;\n    width: 347px;\n    height: 497px;\n    background: url(" + __webpack_require__("./src/main/webapp/content/images/hipster.png") + ") no-repeat center top;\n    background-size: contain;\n}\n\n/* wait autoprefixer update to allow simple generation of high pixel density media query */\n@media\nonly screen and (-webkit-min-device-pixel-ratio: 2),\nonly screen and (   min--moz-device-pixel-ratio: 2),\nonly screen and (     -o-min-device-pixel-ratio: 2/1),\nonly screen and (        min-device-pixel-ratio: 2),\nonly screen and (                min-resolution: 192dpi),\nonly screen and (                min-resolution: 2dppx) {\n    .hipster {\n        background: url(" + __webpack_require__("./src/main/webapp/content/images/hipster2x.png") + ") no-repeat center top;\n        background-size: contain;\n    }\n}\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./src/main/webapp/app/layouts/navbar/navbar.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(7)();
// imports


// module
exports.push([module.i, "/* ==========================================================================\nNavbar\n========================================================================== */\n.navbar-version {\n    font-size: 10px;\n    color: #ccc\n}\n\n.jh-navbar {\n    background-color: #353d47;\n    padding: .2em 1em;\n}\n\n.jh-navbar .profile-image {\n    margin: -10px 0px;\n    height: 40px;\n    width: 40px;\n    border-radius: 50%;\n}\n\n.jh-navbar .dropdown-item.active, .jh-navbar .dropdown-item.active:focus, .jh-navbar .dropdown-item.active:hover {\n    background-color: #353d47;\n}\n\n.jh-navbar .dropdown-toggle::after {\n    margin-left: 0.15em;\n}\n\n.jh-navbar ul.navbar-nav {\n    padding: 0.5em;\n}\n\n.jh-navbar .navbar-nav .nav-item {\n    margin-left: 1.5rem;\n}\n\n.jh-navbar a.nav-link {\n    font-weight: 400;\n}\n\n.jh-navbar .jh-navbar-toggler {\n    color: #ccc;\n    font-size: 1.5em;\n    padding: 10px;\n}\n\n.jh-navbar .jh-navbar-toggler:hover {\n    color: #fff;\n}\n\n\n\n@media screen and (max-width: 992px) {\n    .jh-logo-container {\n        width: 100%;\n    }\n}\n\n.navbar-title {\n    display: inline-block;\n    vertical-align: middle;\n}\n\n/* ==========================================================================\nLogo styles\n========================================================================== */\n.navbar-brand.logo {\n    padding: 5px 15px;\n}\n\n.logo .logo-img {\n    height: 45px;\n    display: inline-block;\n    vertical-align: middle;\n    width: 70px;\n}\n\n.logo-img {\n    height: 100%;\n    background: url(" + __webpack_require__("./src/main/webapp/content/images/logo-jhipster.png") + ") no-repeat center center;\n    background-size: contain;\n    width: 100%;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./src/main/webapp/app/layouts/profiles/page-ribbon.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(7)();
// imports


// module
exports.push([module.i, "/* ==========================================================================\nDevelopement Ribbon\n========================================================================== */\n.ribbon {\n    background-color: rgba(170, 0, 0, 0.5);\n    left: -3.5em;\n    moz-transform: rotate(-45deg);\n    ms-transform: rotate(-45deg);\n    o-transform: rotate(-45deg);\n    webkit-transform: rotate(-45deg);\n    transform: rotate(-45deg);\n    overflow: hidden;\n    position: absolute;\n    top: 40px;\n    white-space: nowrap;\n    width: 15em;\n    z-index: 9999;\n    pointer-events: none;\n    opacity: 0.75;\n}\n\n.ribbon a {\n    color: #fff;\n    display: block;\n    font-weight: 400;\n    margin: 1px 0;\n    padding: 10px 50px;\n    text-align: center;\n    text-decoration: none;\n    text-shadow: 0 0 5px #444;\n    pointer-events: none;\n}\n", ""]);

// exports


/***/ }),

/***/ "./src/main/webapp/app/account/account.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/account/index.ts");
var App1AccountModule = (function () {
    function App1AccountModule() {
    }
    return App1AccountModule;
}());
App1AccountModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.App1SharedModule,
            router_1.RouterModule.forRoot(_1.accountState, { useHash: true })
        ],
        declarations: [
            _1.ActivateComponent,
            _1.RegisterComponent,
            _1.PasswordComponent,
            _1.PasswordStrengthBarComponent,
            _1.PasswordResetInitComponent,
            _1.PasswordResetFinishComponent,
            _1.SettingsComponent
        ],
        providers: [
            _1.Register,
            _1.Activate,
            _1.Password,
            _1.PasswordResetInit,
            _1.PasswordResetFinish
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], App1AccountModule);
exports.App1AccountModule = App1AccountModule;


/***/ }),

/***/ "./src/main/webapp/app/account/account.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var _1 = __webpack_require__("./src/main/webapp/app/account/index.ts");
var ACCOUNT_ROUTES = [
    _1.activateRoute,
    _1.passwordRoute,
    _1.passwordResetFinishRoute,
    _1.passwordResetInitRoute,
    _1.registerRoute,
    _1.settingsRoute
];
exports.accountState = [{
        path: '',
        children: ACCOUNT_ROUTES
    }];


/***/ }),

/***/ "./src/main/webapp/app/account/activate/activate.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n            <h1>Activation</h1>\n\n            <div class=\"alert alert-success\" *ngIf=\"success\">\n                <span>\n                    <strong>Your user has been activated.</strong> Please\n                    <a class=\"alert-link\" (click)=\"login()\">sign in</a>.\n                </span>\n            </div>\n\n            <div class=\"alert alert-danger\" *ngIf=\"error\">\n                <strong>Your user could not be activated.</strong> Please use the registration form to sign up.\n            </div>\n\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/account/activate/activate.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var activate_service_1 = __webpack_require__("./src/main/webapp/app/account/activate/activate.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var ActivateComponent = (function () {
    function ActivateComponent(activate, loginModalService, route) {
        this.activate = activate;
        this.loginModalService = loginModalService;
        this.route = route;
    }
    ActivateComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.queryParams.subscribe(function (params) {
            _this.activate.get(params['key']).subscribe(function () {
                _this.error = null;
                _this.success = 'OK';
            }, function () {
                _this.success = null;
                _this.error = 'ERROR';
            });
        });
    };
    ActivateComponent.prototype.login = function () {
        this.modalRef = this.loginModalService.open();
    };
    return ActivateComponent;
}());
ActivateComponent = __decorate([
    core_1.Component({
        selector: 'jhi-activate',
        template: __webpack_require__("./src/main/webapp/app/account/activate/activate.component.html")
    }),
    __metadata("design:paramtypes", [activate_service_1.Activate,
        shared_1.LoginModalService,
        router_1.ActivatedRoute])
], ActivateComponent);
exports.ActivateComponent = ActivateComponent;


/***/ }),

/***/ "./src/main/webapp/app/account/activate/activate.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var activate_component_1 = __webpack_require__("./src/main/webapp/app/account/activate/activate.component.ts");
exports.activateRoute = {
    path: 'activate',
    component: activate_component_1.ActivateComponent,
    data: {
        authorities: [],
        pageTitle: 'Activation'
    },
    canActivate: [shared_1.UserRouteAccessService]
};


/***/ }),

/***/ "./src/main/webapp/app/account/activate/activate.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Activate = (function () {
    function Activate(http) {
        this.http = http;
    }
    Activate.prototype.get = function (key) {
        var params = new http_1.URLSearchParams();
        params.set('key', key);
        return this.http.get('api/activate', {
            search: params
        }).map(function (res) { return res; });
    };
    return Activate;
}());
Activate = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Activate);
exports.Activate = Activate;


/***/ }),

/***/ "./src/main/webapp/app/account/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/account/activate/activate.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/activate/activate.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/activate/activate.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password/password.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password/password-strength-bar.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password/password.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password/password.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password-reset/finish/password-reset-finish.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password-reset/finish/password-reset-finish.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password-reset/init/password-reset-init.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password-reset/init/password-reset-init.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password-reset/init/password-reset-init.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/register/register.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/register/register.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/register/register.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/settings/settings.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/settings/settings.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/account.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <div class=\"row\">\n        <div class=\"col-md-4 col-md-offset-4\">\n            <h1>Reset password</h1>\n\n            <div class=\"alert alert-danger\" *ngIf=\"keyMissing\">\n                <strong>The password reset key is missing.</strong>\n            </div>\n\n            <div class=\"alert alert-warning\" *ngIf=\"!success && !keyMissing\">\n                <p>Choose a new password</p>\n            </div>\n\n            <div class=\"alert alert-danger\" *ngIf=\"error\">\n                <p>Your password couldn't be reset. Remember a password request is only valid for 24 hours.</p>\n            </div>\n\n            <p class=\"alert alert-success\" *ngIf=\"success\">\n                <span><strong>Your password has been reset.</strong> Please </span>\n                <a class=\"alert-link\" (click)=\"login()\">sign in</a>.\n            </p>\n\n            <div class=\"alert alert-danger\" *ngIf=\"doNotMatch\">\n                The password and its confirmation do not match!\n            </div>\n\n            <div *ngIf=\"!keyMissing\">\n                <form *ngIf=\"!success\" name=\"form\" role=\"form\" (ngSubmit)=\"finishReset()\" #passwordForm=\"ngForm\">\n                    <div class=\"form-group\">\n                        <label class=\"form-control-label\" for=\"password\">New password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" #passwordInput=\"ngModel\"\n                               placeholder=\"New password\"\n                               [(ngModel)]=\"resetAccount.password\" minlength=4 maxlength=50 required>\n                        <div *ngIf=\"passwordInput.dirty && passwordInput.invalid\">\n                            <small class=\"form-text text-danger\"\n                               *ngIf=\"passwordInput.errors.required\">\n                                Your password is required.\n                            </small>\n                            <small class=\"form-text text-danger\"\n                               *ngIf=\"passwordInput.errors.minlength\">\n                                Your password is required to be at least 4 characters.\n                            </small>\n                            <small class=\"form-text text-danger\"\n                               *ngIf=\"passwordInput.errors.maxlength\">\n                                Your password cannot be longer than 50 characters.\n                            </small>\n                        </div>\n                        <jhi-password-strength-bar [passwordToCheck]=\"resetAccount.password\"></jhi-password-strength-bar>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"form-control-label\" for=\"confirmPassword\">New password confirmation</label>\n                        <input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" #confirmPasswordInput=\"ngModel\"\n                               placeholder=\"Confirm the new password\"\n                               [(ngModel)]=\"confirmPassword\" minlength=4 maxlength=50 required>\n                        <div *ngIf=\"confirmPasswordInput.dirty && confirmPasswordInput.invalid\">\n                            <small class=\"form-text text-danger\"\n                               *ngIf=\"confirmPasswordInput.errors.required\">\n                                Your password confirmation is required.\n                            </small>\n                            <small class=\"form-text text-danger\"\n                               *ngIf=\"confirmPasswordInput.errors.minlength\">\n                                Your password confirmation is required to be at least 4 characters.\n                            </small>\n                            <small class=\"form-text text-danger\"\n                               *ngIf=\"confirmPasswordInput.errors.maxlength\">\n                                Your password confirmation cannot be longer than 50 characters.\n                            </small>\n                        </div>\n                    </div>\n                    <button type=\"submit\" [disabled]=\"passwordForm.form.invalid\" class=\"btn btn-primary\">Reset Password</button>\n                </form>\n            </div>\n\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var password_reset_finish_service_1 = __webpack_require__("./src/main/webapp/app/account/password-reset/finish/password-reset-finish.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var PasswordResetFinishComponent = (function () {
    function PasswordResetFinishComponent(passwordResetFinish, loginModalService, route, elementRef, renderer) {
        this.passwordResetFinish = passwordResetFinish;
        this.loginModalService = loginModalService;
        this.route = route;
        this.elementRef = elementRef;
        this.renderer = renderer;
    }
    PasswordResetFinishComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.queryParams.subscribe(function (params) {
            _this.key = params['key'];
        });
        this.resetAccount = {};
        this.keyMissing = !this.key;
    };
    PasswordResetFinishComponent.prototype.ngAfterViewInit = function () {
        if (this.elementRef.nativeElement.querySelector('#password') != null) {
            this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#password'), 'focus', []);
        }
    };
    PasswordResetFinishComponent.prototype.finishReset = function () {
        var _this = this;
        this.doNotMatch = null;
        this.error = null;
        if (this.resetAccount.password !== this.confirmPassword) {
            this.doNotMatch = 'ERROR';
        }
        else {
            this.passwordResetFinish.save({ key: this.key, newPassword: this.resetAccount.password }).subscribe(function () {
                _this.success = 'OK';
            }, function () {
                _this.success = null;
                _this.error = 'ERROR';
            });
        }
    };
    PasswordResetFinishComponent.prototype.login = function () {
        this.modalRef = this.loginModalService.open();
    };
    return PasswordResetFinishComponent;
}());
PasswordResetFinishComponent = __decorate([
    core_1.Component({
        selector: 'jhi-password-reset-finish',
        template: __webpack_require__("./src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.html")
    }),
    __metadata("design:paramtypes", [password_reset_finish_service_1.PasswordResetFinish,
        shared_1.LoginModalService,
        router_1.ActivatedRoute,
        core_1.ElementRef, core_1.Renderer])
], PasswordResetFinishComponent);
exports.PasswordResetFinishComponent = PasswordResetFinishComponent;


/***/ }),

/***/ "./src/main/webapp/app/account/password-reset/finish/password-reset-finish.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var password_reset_finish_component_1 = __webpack_require__("./src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts");
exports.passwordResetFinishRoute = {
    path: 'reset/finish',
    component: password_reset_finish_component_1.PasswordResetFinishComponent,
    data: {
        authorities: [],
        pageTitle: 'Password'
    },
    canActivate: [shared_1.UserRouteAccessService]
};


/***/ }),

/***/ "./src/main/webapp/app/account/password-reset/finish/password-reset-finish.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var PasswordResetFinish = (function () {
    function PasswordResetFinish(http) {
        this.http = http;
    }
    PasswordResetFinish.prototype.save = function (keyAndPassword) {
        return this.http.post('api/account/reset_password/finish', keyAndPassword);
    };
    return PasswordResetFinish;
}());
PasswordResetFinish = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], PasswordResetFinish);
exports.PasswordResetFinish = PasswordResetFinish;


/***/ }),

/***/ "./src/main/webapp/app/account/password-reset/init/password-reset-init.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n            <h1>Reset your password</h1>\n\n            <div class=\"alert alert-danger\" *ngIf=\"errorEmailNotExists\">\n                <strong>E-Mail address isn't registered!</strong> Please check and try again.\n            </div>\n\n            <div class=\"alert alert-warning\" *ngIf=\"!success\">\n                <p>Enter the e-mail address you used to register.</p>\n            </div>\n\n            <div class=\"alert alert-success\" *ngIf=\"success == 'OK'\">\n                <p>Check your e-mails for details on how to reset your password.</p>\n            </div>\n\n            <form *ngIf=\"!success\" name=\"form\" role=\"form\" (ngSubmit)=\"requestReset()\" #resetRequestForm=\"ngForm\">\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"email\">E-mail</label>\n                    <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Your e-mail\"\n                           [(ngModel)]=\"resetAccount.email\" minlength=5 maxlength=100 #emailInput=\"ngModel\" required>\n                    <div *ngIf=\"emailInput.dirty && emailInput.invalid\">\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"emailInput.errors.required\">\n                            Your e-mail is required.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"emailInput.errors.email\">\n                            Your e-mail is invalid.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"emailInput.errors.minlength\">\n                            Your e-mail is required to be at least 5 characters.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"emailInput.errors.maxlength\">\n                            Your e-mail cannot be longer than 100 characters.\n                        </small>\n                    </div>\n                </div>\n                <button type=\"submit\" [disabled]=\"resetRequestForm.form.invalid\" class=\"btn btn-primary\">Reset</button>\n            </form>\n\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/account/password-reset/init/password-reset-init.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var password_reset_init_service_1 = __webpack_require__("./src/main/webapp/app/account/password-reset/init/password-reset-init.service.ts");
var PasswordResetInitComponent = (function () {
    function PasswordResetInitComponent(passwordResetInit, elementRef, renderer) {
        this.passwordResetInit = passwordResetInit;
        this.elementRef = elementRef;
        this.renderer = renderer;
    }
    PasswordResetInitComponent.prototype.ngOnInit = function () {
        this.resetAccount = {};
    };
    PasswordResetInitComponent.prototype.ngAfterViewInit = function () {
        this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#email'), 'focus', []);
    };
    PasswordResetInitComponent.prototype.requestReset = function () {
        var _this = this;
        this.error = null;
        this.errorEmailNotExists = null;
        this.passwordResetInit.save(this.resetAccount.email).subscribe(function () {
            _this.success = 'OK';
        }, function (response) {
            _this.success = null;
            if (response.status === 400 && response.data === 'e-mail address not registered') {
                _this.errorEmailNotExists = 'ERROR';
            }
            else {
                _this.error = 'ERROR';
            }
        });
    };
    return PasswordResetInitComponent;
}());
PasswordResetInitComponent = __decorate([
    core_1.Component({
        selector: 'jhi-password-reset-init',
        template: __webpack_require__("./src/main/webapp/app/account/password-reset/init/password-reset-init.component.html")
    }),
    __metadata("design:paramtypes", [password_reset_init_service_1.PasswordResetInit,
        core_1.ElementRef,
        core_1.Renderer])
], PasswordResetInitComponent);
exports.PasswordResetInitComponent = PasswordResetInitComponent;


/***/ }),

/***/ "./src/main/webapp/app/account/password-reset/init/password-reset-init.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var password_reset_init_component_1 = __webpack_require__("./src/main/webapp/app/account/password-reset/init/password-reset-init.component.ts");
exports.passwordResetInitRoute = {
    path: 'reset/request',
    component: password_reset_init_component_1.PasswordResetInitComponent,
    data: {
        authorities: [],
        pageTitle: 'Password'
    },
    canActivate: [shared_1.UserRouteAccessService]
};


/***/ }),

/***/ "./src/main/webapp/app/account/password-reset/init/password-reset-init.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var PasswordResetInit = (function () {
    function PasswordResetInit(http) {
        this.http = http;
    }
    PasswordResetInit.prototype.save = function (mail) {
        return this.http.post('api/account/reset_password/init', mail);
    };
    return PasswordResetInit;
}());
PasswordResetInit = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], PasswordResetInit);
exports.PasswordResetInit = PasswordResetInit;


/***/ }),

/***/ "./src/main/webapp/app/account/password/password-strength-bar.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var PasswordStrengthBarComponent = (function () {
    function PasswordStrengthBarComponent(renderer, elementRef) {
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.colors = ['#F00', '#F90', '#FF0', '#9F0', '#0F0'];
    }
    PasswordStrengthBarComponent.prototype.measureStrength = function (p) {
        var force = 0;
        var regex = /[$-/:-?{-~!"^_`\[\]]/g; // "
        var lowerLetters = /[a-z]+/.test(p);
        var upperLetters = /[A-Z]+/.test(p);
        var numbers = /[0-9]+/.test(p);
        var symbols = regex.test(p);
        var flags = [lowerLetters, upperLetters, numbers, symbols];
        var passedMatches = flags.filter(function (isMatchedFlag) {
            return isMatchedFlag === true;
        }).length;
        force += 2 * p.length + ((p.length >= 10) ? 1 : 0);
        force += passedMatches * 10;
        // penality (short password)
        force = (p.length <= 6) ? Math.min(force, 10) : force;
        // penality (poor variety of characters)
        force = (passedMatches === 1) ? Math.min(force, 10) : force;
        force = (passedMatches === 2) ? Math.min(force, 20) : force;
        force = (passedMatches === 3) ? Math.min(force, 40) : force;
        return force;
    };
    ;
    PasswordStrengthBarComponent.prototype.getColor = function (s) {
        var idx = 0;
        if (s <= 10) {
            idx = 0;
        }
        else if (s <= 20) {
            idx = 1;
        }
        else if (s <= 30) {
            idx = 2;
        }
        else if (s <= 40) {
            idx = 3;
        }
        else {
            idx = 4;
        }
        return { idx: idx + 1, col: this.colors[idx] };
    };
    ;
    Object.defineProperty(PasswordStrengthBarComponent.prototype, "passwordToCheck", {
        set: function (password) {
            if (password) {
                var c = this.getColor(this.measureStrength(password));
                var element = this.elementRef.nativeElement;
                if (element.className) {
                    this.renderer.setElementClass(element, element.className, false);
                }
                var lis = element.getElementsByTagName('li');
                for (var i = 0; i < lis.length; i++) {
                    if (i < c.idx) {
                        this.renderer.setElementStyle(lis[i], 'backgroundColor', c.col);
                    }
                    else {
                        this.renderer.setElementStyle(lis[i], 'backgroundColor', '#DDD');
                    }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    return PasswordStrengthBarComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], PasswordStrengthBarComponent.prototype, "passwordToCheck", null);
PasswordStrengthBarComponent = __decorate([
    core_1.Component({
        selector: 'jhi-password-strength-bar',
        template: "\n        <div id=\"strength\">\n            <small>Password strength:</small>\n            <ul id=\"strengthBar\">\n                <li class=\"point\"></li>\n                <li class=\"point\"></li>\n                <li class=\"point\"></li>\n                <li class=\"point\"></li>\n                <li class=\"point\"></li>\n            </ul>\n        </div>",
        styles: [
            __webpack_require__("./src/main/webapp/app/account/password/password-strength-bar.css")
        ]
    }),
    __metadata("design:paramtypes", [core_1.Renderer, core_1.ElementRef])
], PasswordStrengthBarComponent);
exports.PasswordStrengthBarComponent = PasswordStrengthBarComponent;


/***/ }),

/***/ "./src/main/webapp/app/account/password/password-strength-bar.css":
/***/ (function(module, exports, __webpack_require__) {


        var result = __webpack_require__("./node_modules/css-loader/index.js!./src/main/webapp/app/account/password/password-strength-bar.css");

        if (typeof result === "string") {
            module.exports = result;
        } else {
            module.exports = result.toString();
        }
    

/***/ }),

/***/ "./src/main/webapp/app/account/password/password.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n            <h2 *ngIf=\"account\">Password for [<b>{{account.login}}</b>]</h2>\n\n            <div class=\"alert alert-success\" *ngIf=\"success\">\n                <strong>Password changed!</strong>\n            </div>\n            <div class=\"alert alert-danger\" *ngIf=\"error\" >\n                <strong>An error has occurred!</strong> The password could not be changed.\n            </div>\n\n            <div class=\"alert alert-danger\" *ngIf=\"doNotMatch\">\n                The password and its confirmation do not match!\n            </div>\n\n            <form name=\"form\" role=\"form\" (ngSubmit)=\"changePassword()\" #passwordForm=\"ngForm\">\n\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"password\">New password</label>\n                    <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" #passwordInput=\"ngModel\"\n                    placeholder=\"New password\"\n                           [(ngModel)]=\"password\" minlength=4 maxlength=50 required>\n                    <div *ngIf=\"passwordInput.dirty && passwordInput.invalid\">\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"passwordInput.errors.required\">\n                            Your password is required.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"passwordInput.errors.minlength\">\n                            Your password is required to be at least 4 characters.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"passwordInput.errors.maxlength\">\n                            Your password cannot be longer than 50 characters.\n                        </small>\n                    </div>\n                    <jhi-password-strength-bar [passwordToCheck]=\"password\"></jhi-password-strength-bar>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"confirmPassword\">New password confirmation</label>\n                    <input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" #confirmPasswordInput=\"ngModel\"\n                    placeholder=\"Confirm the new password\"\n                           [(ngModel)]=\"confirmPassword\" minlength=4 maxlength=50 required>\n                    <div *ngIf=\"confirmPasswordInput.dirty && confirmPasswordInput.invalid\">\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"confirmPasswordInput.errors.required\">\n                            Your confirmation password is required.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"confirmPasswordInput.errors.minlength\">\n                            Your confirmation password is required to be at least 4 characters.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"confirmPasswordInput.errors.maxlength\">\n                            Your confirmation password cannot be longer than 50 characters.\n                        </small>\n                    </div>\n                </div>\n\n                <button type=\"submit\" [disabled]=\"passwordForm.form.invalid\" class=\"btn btn-primary\">Save</button>\n            </form>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/account/password/password.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var password_service_1 = __webpack_require__("./src/main/webapp/app/account/password/password.service.ts");
var PasswordComponent = (function () {
    function PasswordComponent(passwordService, principal) {
        this.passwordService = passwordService;
        this.principal = principal;
    }
    PasswordComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.principal.identity().then(function (account) {
            _this.account = account;
        });
    };
    PasswordComponent.prototype.changePassword = function () {
        var _this = this;
        if (this.password !== this.confirmPassword) {
            this.error = null;
            this.success = null;
            this.doNotMatch = 'ERROR';
        }
        else {
            this.doNotMatch = null;
            this.passwordService.save(this.password).subscribe(function () {
                _this.error = null;
                _this.success = 'OK';
            }, function () {
                _this.success = null;
                _this.error = 'ERROR';
            });
        }
    };
    return PasswordComponent;
}());
PasswordComponent = __decorate([
    core_1.Component({
        selector: 'jhi-password',
        template: __webpack_require__("./src/main/webapp/app/account/password/password.component.html")
    }),
    __metadata("design:paramtypes", [password_service_1.Password,
        shared_1.Principal])
], PasswordComponent);
exports.PasswordComponent = PasswordComponent;


/***/ }),

/***/ "./src/main/webapp/app/account/password/password.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var password_component_1 = __webpack_require__("./src/main/webapp/app/account/password/password.component.ts");
exports.passwordRoute = {
    path: 'password',
    component: password_component_1.PasswordComponent,
    data: {
        authorities: ['ROLE_USER'],
        pageTitle: 'Password'
    },
    canActivate: [shared_1.UserRouteAccessService]
};


/***/ }),

/***/ "./src/main/webapp/app/account/password/password.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Password = (function () {
    function Password(http) {
        this.http = http;
    }
    Password.prototype.save = function (newPassword) {
        return this.http.post('api/account/change_password', newPassword);
    };
    return Password;
}());
Password = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Password);
exports.Password = Password;


/***/ }),

/***/ "./src/main/webapp/app/account/register/register.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n            <h1>Registration</h1>\n\n            <div class=\"alert alert-success\" *ngIf=\"success\">\n                <strong>Registration saved!</strong> Please check your email for confirmation.\n            </div>\n\n            <div class=\"alert alert-danger\" *ngIf=\"error\">\n                <strong>Registration failed!</strong> Please try again later.\n            </div>\n\n            <div class=\"alert alert-danger\" *ngIf=\"errorUserExists\">\n                <strong>Login name already registered!</strong> Please choose another one.\n            </div>\n\n            <div class=\"alert alert-danger\" *ngIf=\"errorEmailExists\">\n                <strong>E-mail is already in use!</strong> Please choose another one.\n            </div>\n\n            <div class=\"alert alert-danger\" *ngIf=\"doNotMatch\">\n                The password and its confirmation do not match!\n            </div>\n        </div>\n        <div class=\"col-md-8 offset-md-2\">\n            <form name=\"form\" role=\"form\" (ngSubmit)=\"register()\" #registerForm=\"ngForm\">\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"login\">Username</label>\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"registerAccount.login\" id=\"login\" name=\"login\" #login=\"ngModel\" placeholder=\"Your username\"\n                            required minlength=\"1\" maxlength=\"50\" pattern=\"^[_'.@A-Za-z0-9-]*$\">\n                    <div *ngIf=\"login.dirty && login.invalid\">\n                        <small class=\"form-text text-danger\" *ngIf=\"login.errors.required\">\n                            Your username is required.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"login.errors.minlength\"\n                               >\n                            Your username is required to be at least 1 character.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"login.errors.maxlength\"\n                               >\n                            Your username cannot be longer than 50 characters.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"login.errors.pattern\"\n                              >\n                            Your username can only contain lower-case letters and digits.\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"email\">E-mail</label>\n                    <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" #email=\"ngModel\" placeholder=\"Your e-mail\"\n                            [(ngModel)]=\"registerAccount.email\" minlength=5 maxlength=100 required>\n                    <div *ngIf=\"email.dirty && email.invalid\">\n                        <small class=\"form-text text-danger\" *ngIf=\"email.errors.required\"\n                               >\n                            Your e-mail is required.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"email.errors.invalid\"\n                              >\n                            Your e-mail is invalid.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"email.errors.minlength\"\n                              >\n                            Your e-mail is required to be at least 5 characters.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"email.errors.maxlength\"\n                              >\n                            Your e-mail cannot be longer than 100 characters.\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"password\">New password</label>\n                    <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" #password=\"ngModel\" placeholder=\"New password\"\n                            [(ngModel)]=\"registerAccount.password\" minlength=4 maxlength=50 required>\n                    <div *ngIf=\"password.dirty && password.invalid\">\n                        <small class=\"form-text text-danger\" *ngIf=\"password.errors.required\"\n                               >\n                            Your password is required.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"password.errors.minlength\"\n                               >\n                            Your password is required to be at least 4 characters.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"password.errors.maxlength\"\n                               >\n                            Your password cannot be longer than 50 characters.\n                        </small>\n                    </div>\n                    <jhi-password-strength-bar [passwordToCheck]=\"registerAccount.password\"></jhi-password-strength-bar>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"confirmPassword\">New password confirmation</label>\n                    <input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" #confirmPasswordInput=\"ngModel\" placeholder=\"Confirm the new password\"\n                            [(ngModel)]=\"confirmPassword\" minlength=4 maxlength=50 required>\n                    <div *ngIf=\"confirmPasswordInput.dirty && confirmPasswordInput.invalid\">\n                        <small class=\"form-text text-danger\" *ngIf=\"confirmPasswordInput.errors.required\"\n                              >\n                            Your confirmation password is required.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"confirmPasswordInput.errors.minlength\"\n                             >\n                            Your confirmation password is required to be at least 4 characters.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"confirmPasswordInput.errors.maxlength\"\n                              >\n                            Your confirmation password cannot be longer than 50 characters.\n                        </small>\n                    </div>\n                </div>\n\n                <button type=\"submit\" [disabled]=\"registerForm.form.invalid\" class=\"btn btn-primary\">Register</button>\n            </form>\n            <p></p>\n            <div class=\"alert alert-warning\">\n                <span>If you want to </span>\n                <a class=\"alert-link\" (click)=\"openLogin()\">sign in</a><span>, you can try the default accounts:<br/>- Administrator (login=\"admin\" and password=\"admin\") <br/>- User (login=\"user\" and password=\"user\").</span>\n            </div>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/account/register/register.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var register_service_1 = __webpack_require__("./src/main/webapp/app/account/register/register.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var RegisterComponent = (function () {
    function RegisterComponent(loginModalService, registerService, elementRef, renderer) {
        this.loginModalService = loginModalService;
        this.registerService = registerService;
        this.elementRef = elementRef;
        this.renderer = renderer;
    }
    RegisterComponent.prototype.ngOnInit = function () {
        this.success = false;
        this.registerAccount = {};
    };
    RegisterComponent.prototype.ngAfterViewInit = function () {
        this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#login'), 'focus', []);
    };
    RegisterComponent.prototype.register = function () {
        var _this = this;
        if (this.registerAccount.password !== this.confirmPassword) {
            this.doNotMatch = 'ERROR';
        }
        else {
            this.doNotMatch = null;
            this.error = null;
            this.errorUserExists = null;
            this.errorEmailExists = null;
            this.registerAccount.langKey = 'en';
            this.registerService.save(this.registerAccount).subscribe(function () {
                _this.success = true;
            }, function (response) { return _this.processError(response); });
        }
    };
    RegisterComponent.prototype.openLogin = function () {
        this.modalRef = this.loginModalService.open();
    };
    RegisterComponent.prototype.processError = function (response) {
        this.success = null;
        if (response.status === 400 && response._body === 'login already in use') {
            this.errorUserExists = 'ERROR';
        }
        else if (response.status === 400 && response._body === 'e-mail address already in use') {
            this.errorEmailExists = 'ERROR';
        }
        else {
            this.error = 'ERROR';
        }
    };
    return RegisterComponent;
}());
RegisterComponent = __decorate([
    core_1.Component({
        selector: 'jhi-register',
        template: __webpack_require__("./src/main/webapp/app/account/register/register.component.html")
    }),
    __metadata("design:paramtypes", [shared_1.LoginModalService,
        register_service_1.Register,
        core_1.ElementRef,
        core_1.Renderer])
], RegisterComponent);
exports.RegisterComponent = RegisterComponent;


/***/ }),

/***/ "./src/main/webapp/app/account/register/register.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var register_component_1 = __webpack_require__("./src/main/webapp/app/account/register/register.component.ts");
exports.registerRoute = {
    path: 'register',
    component: register_component_1.RegisterComponent,
    data: {
        authorities: [],
        pageTitle: 'Registration'
    },
    canActivate: [shared_1.UserRouteAccessService]
};


/***/ }),

/***/ "./src/main/webapp/app/account/register/register.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Register = (function () {
    function Register(http) {
        this.http = http;
    }
    Register.prototype.save = function (account) {
        return this.http.post('api/register', account);
    };
    return Register;
}());
Register = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Register);
exports.Register = Register;


/***/ }),

/***/ "./src/main/webapp/app/account/settings/settings.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n            <h2 *ngIf=\"settingsAccount\">User settings for [<b>{{settingsAccount.login}}</b>]</h2>\n\n            <div class=\"alert alert-success\" *ngIf=\"success\">\n                <strong>Settings saved!</strong>\n            </div>\n\n            <jhi-alert-error></jhi-alert-error>\n\n            <form name=\"form\" role=\"form\" (ngSubmit)=\"save()\" #settingsForm=\"ngForm\" *ngIf=\"settingsAccount\" novalidate>\n\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"firstName\">First Name</label>\n                    <input type=\"text\" class=\"form-control\" id=\"firstName\" name=\"firstName\" placeholder=\"Your first name\"\n                           [(ngModel)]=\"settingsAccount.firstName\" minlength=1 maxlength=50 #firstNameInput=\"ngModel\" required>\n                    <div *ngIf=\"firstNameInput.dirty && firstNameInput.invalid\">\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"firstNameInput.errors.required\">\n                            Your first name is required.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"firstNameInput.errors.minlength\">\n                            Your first name is required to be at least 1 character.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"firstNameInput.errors.maxlength\">\n                            Your first name cannot be longer than 50 characters.\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"lastName\">Last Name</label>\n                    <input type=\"text\" class=\"form-control\" id=\"lastName\" name=\"lastName\" placeholder=\"Your last name\"\n                           [(ngModel)]=\"settingsAccount.lastName\" minlength=1 maxlength=50 #lastNameInput=\"ngModel\" required>\n                    <div *ngIf=\"lastNameInput.dirty && lastNameInput.invalid\">\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"lastNameInput.errors.required\">\n                            Your last name is required.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"lastNameInput.errors.minlength\">\n                            Your last name is required to be at least 1 character.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"lastNameInput.errors.maxlength\">\n                            Your last name cannot be longer than 50 characters.\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"email\">E-mail</label>\n                    <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Your e-mail\"\n                           [(ngModel)]=\"settingsAccount.email\" minlength=5 maxlength=100 #emailInput=\"ngModel\" required>\n                    <div *ngIf=\"emailInput.dirty && emailInput.invalid\">\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"emailInput.errors.required\">\n                            Your e-mail is required.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"emailInput.errors.email\">\n                            Your e-mail is invalid.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"emailInput.errors.minlength\">\n                            Your e-mail is required to be at least 5 characters.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"emailInput.errors.maxlength\">\n                            Your e-mail cannot be longer than 100 characters.\n                        </small>\n                    </div>\n                </div>\n                <button type=\"submit\" [disabled]=\"settingsForm.form.invalid\" class=\"btn btn-primary\">Save</button>\n            </form>\n        </div>\n    </div>\n\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/account/settings/settings.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var SettingsComponent = (function () {
    function SettingsComponent(account, principal) {
        this.account = account;
        this.principal = principal;
    }
    SettingsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.principal.identity().then(function (account) {
            _this.settingsAccount = _this.copyAccount(account);
        });
    };
    SettingsComponent.prototype.save = function () {
        var _this = this;
        this.account.save(this.settingsAccount).subscribe(function () {
            _this.error = null;
            _this.success = 'OK';
            _this.principal.identity(true).then(function (account) {
                _this.settingsAccount = _this.copyAccount(account);
            });
        }, function () {
            _this.success = null;
            _this.error = 'ERROR';
        });
    };
    SettingsComponent.prototype.copyAccount = function (account) {
        return {
            activated: account.activated,
            email: account.email,
            firstName: account.firstName,
            langKey: account.langKey,
            lastName: account.lastName,
            login: account.login,
            imageUrl: account.imageUrl
        };
    };
    return SettingsComponent;
}());
SettingsComponent = __decorate([
    core_1.Component({
        selector: 'jhi-settings',
        template: __webpack_require__("./src/main/webapp/app/account/settings/settings.component.html")
    }),
    __metadata("design:paramtypes", [shared_1.AccountService,
        shared_1.Principal])
], SettingsComponent);
exports.SettingsComponent = SettingsComponent;


/***/ }),

/***/ "./src/main/webapp/app/account/settings/settings.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var settings_component_1 = __webpack_require__("./src/main/webapp/app/account/settings/settings.component.ts");
exports.settingsRoute = {
    path: 'settings',
    component: settings_component_1.SettingsComponent,
    data: {
        authorities: ['ROLE_USER'],
        pageTitle: 'Settings'
    },
    canActivate: [shared_1.UserRouteAccessService]
};


/***/ }),

/***/ "./src/main/webapp/app/admin/admin.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/admin/index.ts");
var App1AdminModule = (function () {
    function App1AdminModule() {
    }
    return App1AdminModule;
}());
App1AdminModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.App1SharedModule,
            router_1.RouterModule.forRoot(_1.adminState, { useHash: true })
        ],
        declarations: [
            _1.AuditsComponent,
            _1.UserMgmtComponent,
            _1.UserDialogComponent,
            _1.UserDeleteDialogComponent,
            _1.UserMgmtDetailComponent,
            _1.UserMgmtDialogComponent,
            _1.UserMgmtDeleteDialogComponent,
            _1.LogsComponent,
            _1.JhiConfigurationComponent,
            _1.JhiHealthCheckComponent,
            _1.JhiHealthModalComponent,
            _1.JhiDocsComponent,
            _1.JhiMetricsMonitoringComponent,
            _1.JhiMetricsMonitoringModalComponent
        ],
        entryComponents: [
            _1.UserMgmtDialogComponent,
            _1.UserMgmtDeleteDialogComponent,
            _1.JhiHealthModalComponent,
            _1.JhiMetricsMonitoringModalComponent,
        ],
        providers: [
            _1.AuditsService,
            _1.JhiConfigurationService,
            _1.JhiHealthService,
            _1.JhiMetricsService,
            _1.LogsService,
            _1.UserResolvePagingParams,
            _1.UserResolve,
            _1.UserModalService
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], App1AdminModule);
exports.App1AdminModule = App1AdminModule;


/***/ }),

/***/ "./src/main/webapp/app/admin/admin.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var _1 = __webpack_require__("./src/main/webapp/app/admin/index.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var ADMIN_ROUTES = [
    _1.auditsRoute,
    _1.configurationRoute,
    _1.docsRoute,
    _1.healthRoute,
    _1.logsRoute
].concat(_1.userMgmtRoute, [
    _1.metricsRoute
]);
exports.adminState = [{
        path: '',
        data: {
            authorities: ['ROLE_ADMIN']
        },
        canActivate: [shared_1.UserRouteAccessService],
        children: ADMIN_ROUTES
    }].concat(_1.userDialogRoute);


/***/ }),

/***/ "./src/main/webapp/app/admin/audits/audit-data.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var AuditData = (function () {
    function AuditData(remoteAddress, sessionId) {
        this.remoteAddress = remoteAddress;
        this.sessionId = sessionId;
    }
    return AuditData;
}());
exports.AuditData = AuditData;


/***/ }),

/***/ "./src/main/webapp/app/admin/audits/audit.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Audit = (function () {
    function Audit(data, principal, timestamp, type) {
        this.data = data;
        this.principal = principal;
        this.timestamp = timestamp;
        this.type = type;
    }
    return Audit;
}());
exports.Audit = Audit;


/***/ }),

/***/ "./src/main/webapp/app/admin/audits/audits.component.html":
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"audits\">\n    <h2>Audits</h2>\n\n    <div class=\"row\">\n        <div class=\"col-md-5\">\n            <h4>Filter by date</h4>\n            <p class=\"d-flex\">\n                <span class=\"input-group-addon\">from</span>\n                <input type=\"date\" class=\"form-control\" name=\"start\" [(ngModel)]=\"fromDate\" (ngModelChange)=\"onChangeDate($event)\" required/>\n                <span class=\"input-group-addon\">to</span>\n                <input type=\"date\" class=\"form-control\" name=\"end\" [(ngModel)]=\"toDate\" (ngModelChange)=\"onChangeDate($event)\" required/>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"table-responsive\">\n        <table class=\"table table-condensed table-striped table-bordered\">\n            <thead>\n            <tr>\n                <th (click)=\"orderProp = 'timestamp'; reverse=!reverse\"><span>Date</span></th>\n                <th (click)=\"orderProp = 'principal'; reverse=!reverse\"><span>User</span></th>\n                <th (click)=\"orderProp = 'type'; reverse=!reverse\"><span>State</span></th>\n                <th (click)=\"orderProp = 'data.message'; reverse=!reverse\"><span>Extra data</span></th>\n            </tr>\n            </thead>\n            <tr *ngFor=\"let audit of getAudits()\">\n                <td><span>{{audit.timestamp| date:'medium'}}</span></td>\n                <td><small>{{audit.principal}}</small></td>\n                <td>{{audit.type}}</td>\n                <td>\n                    <span *ngIf=\"audit.data\" ng-show=\"audit.data.message\">{{audit.data.message}}</span>\n                    <span *ngIf=\"audit.data\" ng-show=\"audit.data.remoteAddress\"><span>Remote Address</span> {{audit.data.remoteAddress}}</span>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div *ngIf=\"audits\">\n        <div class=\"row justify-content-center\">\n            <jhi-item-count [page]=\"page\" [total]=\"totalItems\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n        </div>\n        <div class=\"row justify-content-center\">\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\" (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/audits/audits.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var common_1 = __webpack_require__(6);
var ng_jhipster_1 = __webpack_require__(2);
var audits_service_1 = __webpack_require__("./src/main/webapp/app/admin/audits/audits.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var AuditsComponent = (function () {
    function AuditsComponent(auditsService, parseLinks, paginationConfig, datePipe) {
        this.auditsService = auditsService;
        this.parseLinks = parseLinks;
        this.paginationConfig = paginationConfig;
        this.datePipe = datePipe;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.page = 1;
        this.reverse = false;
        this.orderProp = 'timestamp';
    }
    AuditsComponent.prototype.getAudits = function () {
        return this.sortAudits(this.audits);
    };
    AuditsComponent.prototype.loadPage = function (page) {
        this.page = page;
        this.onChangeDate();
    };
    AuditsComponent.prototype.ngOnInit = function () {
        this.today();
        this.previousMonth();
        this.onChangeDate();
    };
    AuditsComponent.prototype.onChangeDate = function () {
        var _this = this;
        this.auditsService.query({ page: this.page - 1, size: this.itemsPerPage,
            fromDate: this.fromDate, toDate: this.toDate }).subscribe(function (res) {
            _this.audits = res.json();
            _this.links = _this.parseLinks.parse(res.headers.get('link'));
            _this.totalItems = +res.headers.get('X-Total-Count');
        });
    };
    AuditsComponent.prototype.previousMonth = function () {
        var dateFormat = 'yyyy-MM-dd';
        var fromDate = new Date();
        if (fromDate.getMonth() === 0) {
            fromDate = new Date(fromDate.getFullYear() - 1, 11, fromDate.getDate());
        }
        else {
            fromDate = new Date(fromDate.getFullYear(), fromDate.getMonth() - 1, fromDate.getDate());
        }
        this.fromDate = this.datePipe.transform(fromDate, dateFormat);
    };
    AuditsComponent.prototype.today = function () {
        var dateFormat = 'yyyy-MM-dd';
        // Today + 1 day - needed if the current day must be included
        var today = new Date();
        var date = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1);
        this.toDate = this.datePipe.transform(date, dateFormat);
    };
    AuditsComponent.prototype.sortAudits = function (audits) {
        var _this = this;
        audits = audits.slice(0).sort(function (a, b) {
            if (a[_this.orderProp] < b[_this.orderProp]) {
                return -1;
            }
            else if (true) {
                return 1;
            }
            else {
                return 0;
            }
        });
        return this.reverse ? audits.reverse() : audits;
    };
    return AuditsComponent;
}());
AuditsComponent = __decorate([
    core_1.Component({
        selector: 'jhi-audit',
        template: __webpack_require__("./src/main/webapp/app/admin/audits/audits.component.html")
    }),
    __metadata("design:paramtypes", [audits_service_1.AuditsService,
        ng_jhipster_1.ParseLinks,
        uib_pagination_config_1.PaginationConfig,
        common_1.DatePipe])
], AuditsComponent);
exports.AuditsComponent = AuditsComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/audits/audits.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var audits_component_1 = __webpack_require__("./src/main/webapp/app/admin/audits/audits.component.ts");
exports.auditsRoute = {
    path: 'audits',
    component: audits_component_1.AuditsComponent,
    data: {
        pageTitle: 'Audits'
    }
};


/***/ }),

/***/ "./src/main/webapp/app/admin/audits/audits.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var AuditsService = (function () {
    function AuditsService(http) {
        this.http = http;
    }
    AuditsService.prototype.query = function (req) {
        var params = new http_1.URLSearchParams();
        params.set('fromDate', req.fromDate);
        params.set('toDate', req.toDate);
        params.set('page', req.page);
        params.set('size', req.size);
        params.set('sort', req.sort);
        var options = {
            search: params
        };
        return this.http.get('management/audits', options);
    };
    return AuditsService;
}());
AuditsService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], AuditsService);
exports.AuditsService = AuditsService;


/***/ }),

/***/ "./src/main/webapp/app/admin/configuration/configuration.component.html":
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"allConfiguration && configuration\">\n    <h2>Configuration</h2>\n\n    <span>Filter (by prefix)</span> <input type=\"text\" [(ngModel)]=\"filter\" class=\"form-control\">\n    <label>Spring configuration</label>\n    <table class=\"table table-striped table-bordered table-responsive d-table\">\n        <thead>\n        <tr>\n            <th class=\"w-40\" (click)=\"orderProp = 'prefix'; reverse=!reverse\"><span>Prefix</span></th>\n            <th class=\"w-60\" (click)=\"orderProp = 'properties'; reverse=!reverse\"><span>Properties</span></th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let entry of (configuration | pureFilter:filter:'prefix' | orderBy:orderProp:reverse)\">\n            <td><span>{{entry.prefix}}</span></td>\n            <td>\n                <div class=\"row\" *ngFor=\"let key of keys(entry.properties)\">\n                    <div class=\"col-md-4\">{{key}}</div>\n                    <div class=\"col-md-8\">\n                        <span class=\"float-right badge badge-default break\">{{entry.properties[key]}}</span>\n                    </div>\n                </div>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n    <div *ngFor=\"let key of keys(allConfiguration)\">\n        <label><span>{{key}}</span></label>\n        <table class=\"table table-sm table-striped table-bordered table-responsive d-table\">\n            <thead>\n            <tr>\n                <th class=\"w-40\">Property</th>\n                <th class=\"w-60\">Value</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let item of allConfiguration[key]\">\n                <td class=\"break\">{{item.key}}</td>\n                <td class=\"break\">\n                    <span class=\"float-right badge badge-default break\">{{item.val}}</span>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/configuration/configuration.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var configuration_service_1 = __webpack_require__("./src/main/webapp/app/admin/configuration/configuration.service.ts");
var JhiConfigurationComponent = (function () {
    function JhiConfigurationComponent(configurationService) {
        this.configurationService = configurationService;
        this.allConfiguration = null;
        this.configuration = null;
        this.configKeys = [];
        this.filter = '';
        this.orderProp = 'prefix';
        this.reverse = false;
    }
    JhiConfigurationComponent.prototype.keys = function (dict) {
        return (dict === undefined) ? [] : Object.keys(dict);
    };
    JhiConfigurationComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.configurationService.get().subscribe(function (configuration) {
            _this.configuration = configuration;
            for (var _i = 0, configuration_1 = configuration; _i < configuration_1.length; _i++) {
                var config = configuration_1[_i];
                if (config.properties !== undefined) {
                    _this.configKeys.push(Object.keys(config.properties));
                }
            }
        });
        this.configurationService.getEnv().subscribe(function (configuration) {
            _this.allConfiguration = configuration;
        });
    };
    return JhiConfigurationComponent;
}());
JhiConfigurationComponent = __decorate([
    core_1.Component({
        selector: 'jhi-configuration',
        template: __webpack_require__("./src/main/webapp/app/admin/configuration/configuration.component.html")
    }),
    __metadata("design:paramtypes", [configuration_service_1.JhiConfigurationService])
], JhiConfigurationComponent);
exports.JhiConfigurationComponent = JhiConfigurationComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/configuration/configuration.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var configuration_component_1 = __webpack_require__("./src/main/webapp/app/admin/configuration/configuration.component.ts");
exports.configurationRoute = {
    path: 'jhi-configuration',
    component: configuration_component_1.JhiConfigurationComponent,
    data: {
        pageTitle: 'Configuration'
    }
};


/***/ }),

/***/ "./src/main/webapp/app/admin/configuration/configuration.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var JhiConfigurationService = (function () {
    function JhiConfigurationService(http) {
        this.http = http;
    }
    JhiConfigurationService.prototype.get = function () {
        return this.http.get('management/configprops').map(function (res) {
            var properties = [];
            var propertiesObject = res.json();
            for (var key in propertiesObject) {
                if (propertiesObject.hasOwnProperty(key)) {
                    properties.push(propertiesObject[key]);
                }
            }
            return properties.sort(function (propertyA, propertyB) {
                return (propertyA.prefix === propertyB.prefix) ? 0 :
                    (propertyA.prefix < propertyB.prefix) ? -1 : 1;
            });
        });
    };
    JhiConfigurationService.prototype.getEnv = function () {
        return this.http.get('management/env').map(function (res) {
            var properties = {};
            var propertiesObject = res.json();
            for (var key in propertiesObject) {
                if (propertiesObject.hasOwnProperty(key)) {
                    var valsObject = propertiesObject[key];
                    var vals = [];
                    for (var valKey in valsObject) {
                        if (valsObject.hasOwnProperty(valKey)) {
                            vals.push({ key: valKey, val: valsObject[valKey] });
                        }
                    }
                    properties[key] = vals;
                }
            }
            return properties;
        });
    };
    return JhiConfigurationService;
}());
JhiConfigurationService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], JhiConfigurationService);
exports.JhiConfigurationService = JhiConfigurationService;


/***/ }),

/***/ "./src/main/webapp/app/admin/docs/docs.component.html":
/***/ (function(module, exports) {

module.exports = "<iframe src=\"swagger-ui/index.html\" width=\"100%\" height=\"900\" seamless\n    target=\"_top\" title=\"Swagger UI\" class=\"border-0\"></iframe>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/docs/docs.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var JhiDocsComponent = (function () {
    function JhiDocsComponent() {
    }
    return JhiDocsComponent;
}());
JhiDocsComponent = __decorate([
    core_1.Component({
        selector: 'jhi-docs',
        template: __webpack_require__("./src/main/webapp/app/admin/docs/docs.component.html")
    }),
    __metadata("design:paramtypes", [])
], JhiDocsComponent);
exports.JhiDocsComponent = JhiDocsComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/docs/docs.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var docs_component_1 = __webpack_require__("./src/main/webapp/app/admin/docs/docs.component.ts");
exports.docsRoute = {
    path: 'docs',
    component: docs_component_1.JhiDocsComponent,
    data: {
        pageTitle: 'API'
    }
};


/***/ }),

/***/ "./src/main/webapp/app/admin/health/health-modal.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"showHealthLabel\"><span class=\"text-capitalize\">{{ baseName(currentHealth.name) }}</span>\n        {{subSystemName(currentHealth.name)}}\n    </h4>\n    <button aria-label=\"Close\" data-dismiss=\"modal\" class=\"close\" type=\"button\" (click)=\"activeModal.dismiss('closed')\"><span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n<div class=\"modal-body pad\">\n    <div *ngIf=\"currentHealth.details\">\n        <h5>Properties</h5>\n        <div class=\"table-responsive\">\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th class=\"text-left\">Name</th>\n                        <th class=\"text-left\">Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let entry of currentHealth.details | keys\">\n                        <td class=\"text-left\">{{entry.key}}</td>\n                        <td class=\"text-left\">{{readableValue(entry.value)}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div *ngIf=\"currentHealth.error\">\n        <h4>Error</h4>\n            <pre>{{currentHealth.error}}</pre>\n    </div>\n</div>\n<div class=\"modal-footer\">\n    <button data-dismiss=\"modal\" class=\"btn btn-secondary float-left\" type=\"button\" (click)=\"activeModal.dismiss('closed')\">Done</button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/health/health-modal.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_bootstrap_1 = __webpack_require__(3);
var health_service_1 = __webpack_require__("./src/main/webapp/app/admin/health/health.service.ts");
var JhiHealthModalComponent = (function () {
    function JhiHealthModalComponent(healthService, activeModal) {
        this.healthService = healthService;
        this.activeModal = activeModal;
    }
    JhiHealthModalComponent.prototype.baseName = function (name) {
        return this.healthService.getBaseName(name);
    };
    JhiHealthModalComponent.prototype.subSystemName = function (name) {
        return this.healthService.getSubSystemName(name);
    };
    JhiHealthModalComponent.prototype.readableValue = function (value) {
        if (this.currentHealth.name !== 'diskSpace') {
            return value.toString();
        }
        // Should display storage space in an human readable unit
        var val = value / 1073741824;
        if (val > 1) {
            return val.toFixed(2) + ' GB';
        }
        else {
            return (value / 1048576).toFixed(2) + ' MB';
        }
    };
    return JhiHealthModalComponent;
}());
JhiHealthModalComponent = __decorate([
    core_1.Component({
        selector: 'jhi-health-modal',
        template: __webpack_require__("./src/main/webapp/app/admin/health/health-modal.component.html")
    }),
    __metadata("design:paramtypes", [health_service_1.JhiHealthService, ng_bootstrap_1.NgbActiveModal])
], JhiHealthModalComponent);
exports.JhiHealthModalComponent = JhiHealthModalComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/health/health.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2>\n        <span>Health Checks</span>\n        <button class=\"btn btn-primary float-right\" (click)=\"refresh()\">\n            <span class=\"fa fa-refresh\"></span> <span>Refresh</span>\n        </button>\n    </h2>\n    <div class=\"table-responsive\">\n        <table id=\"healthCheck\" class=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th>Service Name</th>\n                    <th class=\"text-center\">Status</th>\n                    <th class=\"text-center\">Details</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let health of healthData\">\n                    <td><span class=\"text-capitalize\">{{ baseName(health.name) }}</span> {{subSystemName(health.name)}}</td>\n                    <td class=\"text-center\">\n                        <span class=\"badge\" [ngClass]=\"getBadgeClass(health.status)\">\n                            {{health.status}}\n                        </span>\n                    </td>\n                    <td class=\"text-center\">\n                        <a class=\"hand\" (click)=\"showHealth(health)\" *ngIf=\"health.details || health.error\">\n                            <i class=\"fa fa-eye\"></i>\n                        </a>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/health/health.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_bootstrap_1 = __webpack_require__(3);
var health_service_1 = __webpack_require__("./src/main/webapp/app/admin/health/health.service.ts");
var health_modal_component_1 = __webpack_require__("./src/main/webapp/app/admin/health/health-modal.component.ts");
var JhiHealthCheckComponent = (function () {
    function JhiHealthCheckComponent(modalService, healthService) {
        this.modalService = modalService;
        this.healthService = healthService;
    }
    JhiHealthCheckComponent.prototype.ngOnInit = function () {
        this.refresh();
    };
    JhiHealthCheckComponent.prototype.baseName = function (name) {
        return this.healthService.getBaseName(name);
    };
    JhiHealthCheckComponent.prototype.getBadgeClass = function (statusState) {
        if (statusState === 'UP') {
            return 'badge-success';
        }
        else {
            return 'badge-danger';
        }
    };
    JhiHealthCheckComponent.prototype.refresh = function () {
        var _this = this;
        this.updatingHealth = true;
        this.healthService.checkHealth().subscribe(function (health) {
            _this.healthData = _this.healthService.transformHealthData(health);
            _this.updatingHealth = false;
        }, function (error) {
            if (error.status === 503) {
                _this.healthData = _this.healthService.transformHealthData(error.json());
                _this.updatingHealth = false;
            }
        });
    };
    JhiHealthCheckComponent.prototype.showHealth = function (health) {
        var modalRef = this.modalService.open(health_modal_component_1.JhiHealthModalComponent);
        modalRef.componentInstance.currentHealth = health;
        modalRef.result.then(function (result) {
            // Left blank intentionally, nothing to do here
        }, function (reason) {
            // Left blank intentionally, nothing to do here
        });
    };
    JhiHealthCheckComponent.prototype.subSystemName = function (name) {
        return this.healthService.getSubSystemName(name);
    };
    return JhiHealthCheckComponent;
}());
JhiHealthCheckComponent = __decorate([
    core_1.Component({
        selector: 'jhi-health',
        template: __webpack_require__("./src/main/webapp/app/admin/health/health.component.html"),
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        health_service_1.JhiHealthService])
], JhiHealthCheckComponent);
exports.JhiHealthCheckComponent = JhiHealthCheckComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/health/health.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var health_component_1 = __webpack_require__("./src/main/webapp/app/admin/health/health.component.ts");
exports.healthRoute = {
    path: 'jhi-health',
    component: health_component_1.JhiHealthCheckComponent,
    data: {
        pageTitle: 'Health Checks'
    }
};


/***/ }),

/***/ "./src/main/webapp/app/admin/health/health.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var JhiHealthService = (function () {
    function JhiHealthService(http) {
        this.http = http;
        this.separator = '.';
    }
    JhiHealthService.prototype.checkHealth = function () {
        return this.http.get('management/health').map(function (res) { return res.json(); });
    };
    JhiHealthService.prototype.transformHealthData = function (data) {
        var response = [];
        this.flattenHealthData(response, null, data);
        return response;
    };
    JhiHealthService.prototype.getBaseName = function (name) {
        if (name) {
            var split = name.split('.');
            return split[0];
        }
    };
    JhiHealthService.prototype.getSubSystemName = function (name) {
        if (name) {
            var split = name.split('.');
            split.splice(0, 1);
            var remainder = split.join('.');
            return remainder ? ' - ' + remainder : '';
        }
    };
    /* private methods */
    JhiHealthService.prototype.addHealthObject = function (result, isLeaf, healthObject, name) {
        var status;
        var error;
        var healthData = {
            'name': name,
            'error': error,
            'status': status
        };
        var details = {};
        var hasDetails = false;
        for (var key in healthObject) {
            if (healthObject.hasOwnProperty(key)) {
                var value = healthObject[key];
                if (key === 'status' || key === 'error') {
                    healthData[key] = value;
                }
                else {
                    if (!this.isHealthObject(value)) {
                        details[key] = value;
                        hasDetails = true;
                    }
                }
            }
        }
        // Add the details
        if (hasDetails) {
            healthData.details = details;
        }
        // Only add nodes if they provide additional information
        if (isLeaf || hasDetails || healthData.error) {
            result.push(healthData);
        }
        return healthData;
    };
    JhiHealthService.prototype.flattenHealthData = function (result, path, data) {
        for (var key in data) {
            if (data.hasOwnProperty(key)) {
                var value = data[key];
                if (this.isHealthObject(value)) {
                    if (this.hasSubSystem(value)) {
                        this.addHealthObject(result, false, value, this.getModuleName(path, key));
                        this.flattenHealthData(result, this.getModuleName(path, key), value);
                    }
                    else {
                        this.addHealthObject(result, true, value, this.getModuleName(path, key));
                    }
                }
            }
        }
        return result;
    };
    JhiHealthService.prototype.getModuleName = function (path, name) {
        var result;
        if (path && name) {
            result = path + this.separator + name;
        }
        else if (path) {
            result = path;
        }
        else if (name) {
            result = name;
        }
        else {
            result = '';
        }
        return result;
    };
    JhiHealthService.prototype.hasSubSystem = function (healthObject) {
        var result = false;
        for (var key in healthObject) {
            if (healthObject.hasOwnProperty(key)) {
                var value = healthObject[key];
                if (value && value.status) {
                    result = true;
                }
            }
        }
        return result;
    };
    JhiHealthService.prototype.isHealthObject = function (healthObject) {
        var result = false;
        for (var key in healthObject) {
            if (healthObject.hasOwnProperty(key)) {
                if (key === 'status') {
                    result = true;
                }
            }
        }
        return result;
    };
    return JhiHealthService;
}());
JhiHealthService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], JhiHealthService);
exports.JhiHealthService = JhiHealthService;


/***/ }),

/***/ "./src/main/webapp/app/admin/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/admin/audits/audits.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/audits/audits.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/audits/audits.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/audits/audit.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/audits/audit-data.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/configuration/configuration.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/configuration/configuration.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/configuration/configuration.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/docs/docs.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/docs/docs.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/health/health.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/health/health-modal.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/health/health.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/health/health.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/logs/logs.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/logs/logs.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/logs/logs.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/logs/log.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/metrics/metrics.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/metrics/metrics-modal.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/metrics/metrics.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/metrics/metrics.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/user-management/user-management-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/user-management/user-management-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/user-management/user-management-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/user-management/user-management.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/user-management/user-management.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/user-management/user-modal.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/admin.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/admin/logs/log.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Log = (function () {
    function Log(name, level) {
        this.name = name;
        this.level = level;
    }
    return Log;
}());
exports.Log = Log;


/***/ }),

/***/ "./src/main/webapp/app/admin/logs/logs.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"table-responsive\" *ngIf=\"loggers\">\n    <h2>Logs</h2>\n\n    <p>There are {{ loggers.length }} loggers.</p>\n\n    <span>Filter</span> <input type=\"text\" [(ngModel)]=\"filter\" class=\"form-control\">\n\n    <table class=\"table table-condensed table-striped table-bordered\">\n        <thead>\n        <tr title=\"click to order\">\n            <th (click)=\"orderProp = 'name'; reverse=!reverse\"><span>Name</span></th>\n            <th (click)=\"orderProp = 'level'; reverse=!reverse\"><span>Level</span></th>\n        </tr>\n        </thead>\n\n        <tr *ngFor=\"let logger of (loggers | pureFilter:filter:'name' | orderBy:orderProp:reverse)\">\n            <td><small>{{logger.name | slice:0:140}}</small></td>\n            <td>\n                <button (click)=\"changeLevel(logger.name, 'TRACE')\" [ngClass]=\"(logger.level=='TRACE') ? 'btn-danger' : 'btn-secondary'\" class=\"btn btn-sm\">TRACE</button>\n                <button (click)=\"changeLevel(logger.name, 'DEBUG')\" [ngClass]=\"(logger.level=='DEBUG') ? 'btn-warning' : 'btn-secondary'\" class=\"btn btn-sm\">DEBUG</button>\n                <button (click)=\"changeLevel(logger.name, 'INFO')\" [ngClass]=\"(logger.level=='INFO') ? 'btn-info' : 'btn-secondary'\" class=\"btn btn-sm\">INFO</button>\n                <button (click)=\"changeLevel(logger.name, 'WARN')\" [ngClass]=\"(logger.level=='WARN') ? 'btn-success' : 'btn-secondary'\" class=\"btn btn-sm\">WARN</button>\n                <button (click)=\"changeLevel(logger.name, 'ERROR')\" [ngClass]=\"(logger.level=='ERROR') ? 'btn-primary' : 'btn-secondary'\" class=\"btn btn-sm\">ERROR</button>\n            </td>\n        </tr>\n    </table>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/logs/logs.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var log_model_1 = __webpack_require__("./src/main/webapp/app/admin/logs/log.model.ts");
var logs_service_1 = __webpack_require__("./src/main/webapp/app/admin/logs/logs.service.ts");
var LogsComponent = (function () {
    function LogsComponent(logsService) {
        this.logsService = logsService;
        this.filter = '';
        this.orderProp = 'name';
        this.reverse = false;
    }
    LogsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.logsService.findAll().subscribe(function (loggers) { return _this.loggers = loggers; });
    };
    LogsComponent.prototype.changeLevel = function (name, level) {
        var _this = this;
        var log = new log_model_1.Log(name, level);
        this.logsService.changeLevel(log).subscribe(function () {
            _this.logsService.findAll().subscribe(function (loggers) { return _this.loggers = loggers; });
        });
    };
    return LogsComponent;
}());
LogsComponent = __decorate([
    core_1.Component({
        selector: 'jhi-logs',
        template: __webpack_require__("./src/main/webapp/app/admin/logs/logs.component.html"),
    }),
    __metadata("design:paramtypes", [logs_service_1.LogsService])
], LogsComponent);
exports.LogsComponent = LogsComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/logs/logs.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var logs_component_1 = __webpack_require__("./src/main/webapp/app/admin/logs/logs.component.ts");
exports.logsRoute = {
    path: 'logs',
    component: logs_component_1.LogsComponent,
    data: {
        pageTitle: 'Logs'
    }
};


/***/ }),

/***/ "./src/main/webapp/app/admin/logs/logs.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var LogsService = (function () {
    function LogsService(http) {
        this.http = http;
    }
    LogsService.prototype.changeLevel = function (log) {
        return this.http.put('management/logs', log);
    };
    LogsService.prototype.findAll = function () {
        return this.http.get('management/logs').map(function (res) { return res.json(); });
    };
    return LogsService;
}());
LogsService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], LogsService);
exports.LogsService = LogsService;


/***/ }),

/***/ "./src/main/webapp/app/admin/metrics/metrics-modal.component.html":
/***/ (function(module, exports) {

module.exports = "<!-- Modal used to display the threads dump -->\n<div class=\"modal-header\">\n    <h4 class=\"modal-title\">Threads dump</h4>\n    <button type=\"button\" class=\"close\" (click)=\"activeModal.dismiss('closed')\">&times;</button>\n</div>\n<div class=\"modal-body\">\n    <span class=\"badge badge-primary\" (click)=\"threadDumpFilter = {}\">All&nbsp;<span class=\"badge badge-pill badge-default\">{{threadDumpAll}}</span></span>&nbsp;\n    <span class=\"badge badge-success\" (click)=\"threadDumpFilter = {threadState: 'RUNNABLE'}\">Runnable&nbsp;<span class=\"badge badge-pill badge-default\">{{threadDumpRunnable}}</span></span>&nbsp;\n    <span class=\"badge badge-info\" (click)=\"threadDumpFilter = {threadState: 'WAITING'}\">Waiting&nbsp;<span class=\"badge badge-pill badge-default\">{{threadDumpWaiting}}</span></span>&nbsp;\n    <span class=\"badge badge-warning\" (click)=\"threadDumpFilter = {threadState: 'TIMED_WAITING'}\">Timed Waiting&nbsp;<span class=\"badge badge-pill badge-default\">{{threadDumpTimedWaiting}}</span></span>&nbsp;\n    <span class=\"badge badge-danger\" (click)=\"threadDumpFilter = {threadState: 'BLOCKED'}\">Blocked&nbsp;<span class=\"badge badge-pill badge-default\">{{threadDumpBlocked}}</span></span>&nbsp;\n    <div class=\"mt-2\">&nbsp;</div>\n    Filter\n    <input type=\"text\" [(ngModel)]=\"threadDumpFilter\" class=\"form-control\">\n    <div class=\"pad\" *ngFor=\"let entry of threadDump | pureFilter:threadDumpFilter:'lockName' | keys\">\n        <h6>\n            <span class=\"badge\" [ngClass]=\"getBadgeClass(entry.value.threadState)\">{{entry.value.threadState}}</span>&nbsp;{{entry.value.threadName}} (ID {{entry.value.threadId}})\n            <a (click)=\"entry.show = !entry.show\" href=\"javascript:void(0);\">\n               <span [hidden]=\"entry.show\">Show StackTrace</span>\n               <span [hidden]=\"!entry.show\">Hide StackTrace</span>\n            </a>\n        </h6>\n        <div class=\"card\" [hidden]=\"!entry.show\">\n            <div class=\"card-block\">\n                <div *ngFor=\"let st of entry.value.stackTrace | keys\" class=\"break\">\n                    <samp>{{st.value.className}}.{{st.value.methodName}}(<code>{{st.value.fileName}}:{{st.value.lineNumber}}</code>)</samp>\n                    <span class=\"mt-1\"></span>\n                </div>\n            </div>\n        </div>\n        <table class=\"table table-sm table-responsive\">\n            <thead>\n                <tr>\n                    <th class=\"text-right\">Blocked Time</th>\n                    <th class=\"text-right\">Blocked Count</th>\n                    <th class=\"text-right\">Waited Time</th>\n                    <th class=\"text-right\">Waited Count</th>\n                    <th>Lock Name</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>{{entry.value.blockedTime}}</td>\n                    <td>{{entry.value.blockedCount}}</td>\n                    <td>{{entry.value.waitedTime}}</td>\n                    <td>{{entry.value.waitedCount}}</td>\n                    <td><code>{{entry.value.lockName}}</code></td>\n                </tr>\n            </tbody>\n        </table>\n\n    </div>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary pull-left\" data-dismiss=\"modal\" (click)=\"activeModal.dismiss('closed')\">Done</button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/metrics/metrics-modal.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_bootstrap_1 = __webpack_require__(3);
var JhiMetricsMonitoringModalComponent = (function () {
    function JhiMetricsMonitoringModalComponent(activeModal) {
        this.activeModal = activeModal;
        this.threadDumpAll = 0;
        this.threadDumpBlocked = 0;
        this.threadDumpRunnable = 0;
        this.threadDumpTimedWaiting = 0;
        this.threadDumpWaiting = 0;
    }
    JhiMetricsMonitoringModalComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.threadDump.forEach(function (value) {
            if (value.threadState === 'RUNNABLE') {
                _this.threadDumpRunnable += 1;
            }
            else if (value.threadState === 'WAITING') {
                _this.threadDumpWaiting += 1;
            }
            else if (value.threadState === 'TIMED_WAITING') {
                _this.threadDumpTimedWaiting += 1;
            }
            else if (value.threadState === 'BLOCKED') {
                _this.threadDumpBlocked += 1;
            }
        });
        this.threadDumpAll = this.threadDumpRunnable + this.threadDumpWaiting +
            this.threadDumpTimedWaiting + this.threadDumpBlocked;
    };
    JhiMetricsMonitoringModalComponent.prototype.getBadgeClass = function (threadState) {
        if (threadState === 'RUNNABLE') {
            return 'badge-success';
        }
        else if (threadState === 'WAITING') {
            return 'badge-info';
        }
        else if (threadState === 'TIMED_WAITING') {
            return 'badge-warning';
        }
        else if (threadState === 'BLOCKED') {
            return 'badge-danger';
        }
    };
    return JhiMetricsMonitoringModalComponent;
}());
JhiMetricsMonitoringModalComponent = __decorate([
    core_1.Component({
        selector: 'jhi-metrics-modal',
        template: __webpack_require__("./src/main/webapp/app/admin/metrics/metrics-modal.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal])
], JhiMetricsMonitoringModalComponent);
exports.JhiMetricsMonitoringModalComponent = JhiMetricsMonitoringModalComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/metrics/metrics.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2>\n        <span>Application Metrics</span>\n        <button class=\"btn btn-primary float-right\" (click)=\"refresh()\">\n            <span class=\"fa fa-refresh\"></span> <span>Refresh</span>\n        </button>\n    </h2>\n\n    <h3>JVM Metrics</h3>\n    <div class=\"row\" *ngIf=\"!updatingMetrics\">\n        <div class=\"col-md-4\">\n            <b>Memory</b>\n            <p><span>Total Memory</span> ({{metrics.gauges['jvm.memory.total.used'].value / 1000000 | number:'1.0-0'}}M / {{metrics.gauges['jvm.memory.total.max'].value / 1000000 | number:'1.0-0'}}M)</p>\n            <ngb-progressbar type=\"success\" [max]=\"metrics.gauges['jvm.memory.total.max'].value\" [value]=\"metrics.gauges['jvm.memory.total.used'].value\" [striped]=\"true\" [animated]=\"true\">\n                <span>{{metrics.gauges['jvm.memory.total.used'].value * 100 / metrics.gauges['jvm.memory.total.max'].value  | number:'1.0-0'}}%</span>\n            </ngb-progressbar>\n            <p><span>Heap Memory</span> ({{metrics.gauges['jvm.memory.heap.used'].value / 1000000 | number:'1.0-0'}}M / {{metrics.gauges['jvm.memory.heap.max'].value / 1000000 | number:'1.0-0'}}M)</p>\n            <ngb-progressbar [max]=\"metrics.gauges['jvm.memory.heap.max'].value\" [value]=\"metrics.gauges['jvm.memory.heap.used'].value\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                <span>{{metrics.gauges['jvm.memory.heap.used'].value * 100 / metrics.gauges['jvm.memory.heap.max'].value  | number:'1.0-0'}}%</span>\n            </ngb-progressbar>\n            <p><span>Non-Heap Memory</span> ({{metrics.gauges['jvm.memory.non-heap.used'].value / 1000000 | number:'1.0-0'}}M / {{metrics.gauges['jvm.memory.non-heap.committed'].value / 1000000 | number:'1.0-0'}}M)</p>\n            <ngb-progressbar [max]=\"metrics.gauges['jvm.memory.non-heap.committed'].value\" [value]=\"metrics.gauges['jvm.memory.non-heap.used'].value\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                <span>{{metrics.gauges['jvm.memory.non-heap.used'].value * 100 / metrics.gauges['jvm.memory.non-heap.committed'].value  | number:'1.0-0'}}%</span>\n            </ngb-progressbar>\n        </div>\n        <div class=\"col-md-4\">\n            <b>Threads</b> (Total: {{metrics.gauges['jvm.threads.count'].value}}) <a class=\"hand\" (click)=\"refreshThreadDumpData()\" data-toggle=\"modal\" data-target=\"#threadDump\"><i class=\"fa fa-eye\"></i></a>\n            <p><span>Runnable</span> {{metrics.gauges['jvm.threads.runnable.count'].value}}</p>\n            <ngb-progressbar [value]=\"metrics.gauges['jvm.threads.runnable.count'].value\" [max]=\"metrics.gauges['jvm.threads.count'].value\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                <span>{{metrics.gauges['jvm.threads.runnable.count'].value * 100 / metrics.gauges['jvm.threads.count'].value  | number:'1.0-0'}}%</span>\n            </ngb-progressbar>\n            <p><span>Timed Waiting</span> ({{metrics.gauges['jvm.threads.timed_waiting.count'].value}})</p>\n            <ngb-progressbar [value]=\"metrics.gauges['jvm.threads.timed_waiting.count'].value\" [max]=\"metrics.gauges['jvm.threads.count'].value\" [striped]=\"true\" [animated]=\"true\" type=\"warning\">\n                <span>{{metrics.gauges['jvm.threads.timed_waiting.count'].value * 100 / metrics.gauges['jvm.threads.count'].value  | number:'1.0-0'}}%</span>\n            </ngb-progressbar>\n            <p><span>Waiting</span> ({{metrics.gauges['jvm.threads.waiting.count'].value}})</p>\n            <ngb-progressbar [value]=\"metrics.gauges['jvm.threads.waiting.count'].value\" [max]=\"metrics.gauges['jvm.threads.count'].value\" [striped]=\"true\" [animated]=\"true\" type=\"warning\">\n                <span>{{metrics.gauges['jvm.threads.waiting.count'].value * 100 / metrics.gauges['jvm.threads.count'].value  | number:'1.0-0'}}%</span>\n            </ngb-progressbar>\n            <p><span>Blocked</span> ({{metrics.gauges['jvm.threads.blocked.count'].value}})</p>\n            <ngb-progressbar [value]=\"metrics.gauges['jvm.threads.blocked.count'].value\" [max]=\"metrics.gauges['jvm.threads.count'].value\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                <span>{{metrics.gauges['jvm.threads.blocked.count'].value * 100 / metrics.gauges['jvm.threads.count'].value  | number:'1.0-0'}}%</span>\n            </ngb-progressbar>\n        </div>\n        <div class=\"col-md-4\">\n            <b>Garbage collections</b>\n            <div class=\"row\">\n                <div class=\"col-md-9\">Mark Sweep count</div>\n                <div class=\"col-md-3 text-right\">{{metrics.gauges['jvm.garbage.PS-MarkSweep.count'].value}}</div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-9\">Mark Sweep time</div>\n                <div class=\"col-md-3 text-right\">{{metrics.gauges['jvm.garbage.PS-MarkSweep.time'].value}}ms</div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-9\">Scavenge count</div>\n                <div class=\"col-md-3 text-right\">{{metrics.gauges['jvm.garbage.PS-Scavenge.count'].value}}</div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-9\">Scavenge time</div>\n                <div class=\"col-md-3 text-right\">{{metrics.gauges['jvm.garbage.PS-Scavenge.time'].value}}ms</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"well well-lg\" *ngIf=\"updatingMetrics\">Updating...</div>\n\n    <h3>HTTP requests (events per second)</h3>\n    <p *ngIf=\"metrics.counters\">\n        <span>Active requests</span> <b>{{metrics.counters['com.codahale.metrics.servlet.InstrumentedFilter.activeRequests'].count | number:'1.0-0'}}</b> - <span>Total requests</span> <b>{{metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count | number:'1.0-0'}}</b>\n    </p>\n    <div class=\"table-responsive\" *ngIf=\"!updatingMetrics\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr>\n                <th>Code</th>\n                <th>Count</th>\n                <th class=\"text-right\">Mean</th>\n                <th class=\"text-right\"><span>Average</span> (1 min)</th>\n                <th class=\"text-right\"><span>Average</span> (5 min)</th>\n                <th class=\"text-right\"><span>Average</span> (15 min)</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n                <td>OK</td>\n                <td>\n                    <ngb-progressbar [max]=\"metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count\" [value]=\"metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].count\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                        <span>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].count}}</span>\n                    </ngb-progressbar>\n                </td>\n                <td class=\"text-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].mean_rate | number:'1.0-2'}}\n                </td>\n                <td class=\"text-right\">{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].m1_rate | number:'1.0-2'}}\n                </td>\n                <td class=\"text-right\">{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].m5_rate | number:'1.0-2'}}\n                </td>\n                <td class=\"text-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].m15_rate | number:'1.0-2'}}\n                </td>\n            </tr>\n            <tr>\n                <td>Not Found</td>\n                <td>\n                    <ngb-progressbar [max]=\"metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count\" [value]=\"metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].count\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                        <span>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].count}}</span>\n                    </ngb-progressbar>\n                </td>\n                <td class=\"text-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].mean_rate | number:'1.0-2'}}\n                </td>\n                <td class=\"text-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].m1_rate | number:'1.0-2'}}\n                </td>\n                <td class=\"text-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].m5_rate | number:'1.0-2'}}\n                </td>\n                <td class=\"text-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].m15_rate | number:'1.0-2'}}\n                </td>\n            </tr>\n            <tr>\n                <td>Server error</td>\n                <td>\n                    <ngb-progressbar [max]=\"metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count\" [value]=\"metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].count\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                        <span>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].count}}</span>\n                    </ngb-progressbar>\n                </td>\n                <td class=\"text-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].mean_rate | number:'1.0-2'}}\n                </td>\n                <td class=\"text-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].m1_rate | number:'1.0-2'}}\n                </td>\n                <td class=\"text-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].m5_rate | number:'1.0-2'}}\n                </td>\n                <td class=\"text-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].m15_rate | number:'1.0-2'}}\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <h3>Services statistics (time in millisecond)</h3>\n    <div class=\"table-responsive\" *ngIf=\"!updatingMetrics\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr>\n                <th>Service name</th>\n                <th class=\"text-right\">Count</th>\n                <th class=\"text-right\">Mean</th>\n                <th class=\"text-right\">Min</th>\n                <th class=\"text-right\">p50</th>\n                <th class=\"text-right\">p75</th>\n                <th class=\"text-right\">p95</th>\n                <th class=\"text-right\">p99</th>\n                <th class=\"text-right\">Max</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let entry of servicesStats | keys\">\n                <td>{{entry.key}}</td>\n                <td class=\"text-right\">{{entry.value.count}}</td>\n                <td class=\"text-right\">{{entry.value.mean * 1000 | number:'1.0-0'}}</td>\n                <td class=\"text-right\">{{entry.value.min * 1000 | number:'1.0-0'}}</td>\n                <td class=\"text-right\">{{entry.value.p50 * 1000 | number:'1.0-0'}}</td>\n                <td class=\"text-right\">{{entry.value.p75 * 1000 | number:'1.0-0'}}</td>\n                <td class=\"text-right\">{{entry.value.p95 * 1000 | number:'1.0-0'}}</td>\n                <td class=\"text-right\">{{entry.value.p99 * 1000 | number:'1.0-0'}}</td>\n                <td class=\"text-right\">{{entry.value.max * 1000 | number:'1.0-0'}}</td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n    \n    <h3>Cache statistics</h3>\n    <div class=\"table-responsive\" *ngIf=\"!updatingMetrics\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr>\n                <th>Cache name</th>\n                <th class=\"text-right\">Cache Hits</th>\n                <th class=\"text-right\">Cache Misses</th>\n                <th class=\"text-right\">Cache Gets</th>\n                <th class=\"text-right\">Cache Puts</th>\n                <th class=\"text-right\">Cache Removals</th>\n                <th class=\"text-right\">Cache Evictions</th>\n                <th class=\"text-right\">Cache Hit %</th>\n                <th class=\"text-right\">Cache Miss %</th>\n                <th class=\"text-right\">Average get time (µs)</th>\n                <th class=\"text-right\">Average put time (µs)</th>\n                <th class=\"text-right\">Average remove time (µs)</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let entry of cachesStats | keys\">\n                <td>{{entry.key}}</td>\n                <td class=\"text-right\">{{metrics.gauges[entry.key + '.cache-hits'].value}}</td>\n                <td class=\"text-right\">{{metrics.gauges[entry.key + '.cache-misses'].value}}</td>\n                <td class=\"text-right\">{{metrics.gauges[entry.key + '.cache-gets'].value}}</td>\n                <td class=\"text-right\">{{metrics.gauges[entry.key + '.cache-puts'].value}}</td>\n                <td class=\"text-right\">{{metrics.gauges[entry.key + '.cache-removals'].value}}</td>\n                <td class=\"text-right\">{{metrics.gauges[entry.key + '.cache-evictions'].value}}</td>\n                <td class=\"text-right\">{{metrics.gauges[entry.key + '.cache-hit-percentage'].value}}</td>\n                <td class=\"text-right\">{{metrics.gauges[entry.key + '.cache-miss-percentage'].value }}</td>\n                <td class=\"text-right\">{{metrics.gauges[entry.key + '.average-get-time'].value  | number : '1.2-2' }}</td>\n                <td class=\"text-right\">{{metrics.gauges[entry.key + '.average-put-time'].value  | number : '1.2-2'}}</td>\n                <td class=\"text-right\">{{metrics.gauges[entry.key + '.average-remove-time'].value | number : '1.2-2' }}</td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n    \n    <h3 *ngIf=\"metrics.gauges && metrics.gauges['HikariPool-1.pool.TotalConnections'] && metrics.gauges['HikariPool-1.pool.TotalConnections'].value > 0\">DataSource statistics (time in millisecond)</h3>\n    <div class=\"table-responsive\" *ngIf=\"!updatingMetrics && metrics.gauges && metrics.gauges['HikariPool-1.pool.TotalConnections'] && metrics.gauges['HikariPool-1.pool.TotalConnections'].value > 0\">\n        <table class=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th><span>Usage</span> ({{metrics.gauges['HikariPool-1.pool.ActiveConnections'].value}} / {{metrics.gauges['HikariPool-1.pool.TotalConnections'].value}})</th>\n                    <th class=\"text-right\">Count</th>\n                    <th class=\"text-right\">Mean</th>\n                    <th class=\"text-right\">Min</th>\n                    <th class=\"text-right\">p50</th>\n                    <th class=\"text-right\">p75</th>\n                    <th class=\"text-right\">p95</th>\n                    <th class=\"text-right\">p99</th>\n                    <th class=\"text-right\">Max</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>\n                        <div class=\"progress progress-striped\">\n                            <ngb-progressbar [max]=\"metrics.gauges['HikariPool-1.pool.TotalConnections'].value\" [value]=\"metrics.gauges['HikariPool-1.pool.ActiveConnections'].value\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                                <span>{{metrics.gauges['HikariPool-1.pool.ActiveConnections'].value * 100 / metrics.gauges['HikariPool-1.pool.TotalConnections'].value  | number:'1.0-0'}}%</span>\n                            </ngb-progressbar>\n                        </div>\n                    </td>\n                    <td class=\"text-right\">{{metrics.histograms['HikariPool-1.pool.Usage'].count}}</td>\n                    <td class=\"text-right\">{{metrics.histograms['HikariPool-1.pool.Usage'].mean | number:'1.0-2'}}</td>\n                    <td class=\"text-right\">{{metrics.histograms['HikariPool-1.pool.Usage'].min | number:'1.0-2'}}</td>\n                    <td class=\"text-right\">{{metrics.histograms['HikariPool-1.pool.Usage'].p50 | number:'1.0-2'}}</td>\n                    <td class=\"text-right\">{{metrics.histograms['HikariPool-1.pool.Usage'].p75 | number:'1.0-2'}}</td>\n                    <td class=\"text-right\">{{metrics.histograms['HikariPool-1.pool.Usage'].p95 | number:'1.0-2'}}</td>\n                    <td class=\"text-right\">{{metrics.histograms['HikariPool-1.pool.Usage'].p99 | number:'1.0-2'}}</td>\n                    <td class=\"text-right\">{{metrics.histograms['HikariPool-1.pool.Usage'].max | number:'1.0-2'}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/metrics/metrics.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_bootstrap_1 = __webpack_require__(3);
var metrics_modal_component_1 = __webpack_require__("./src/main/webapp/app/admin/metrics/metrics-modal.component.ts");
var metrics_service_1 = __webpack_require__("./src/main/webapp/app/admin/metrics/metrics.service.ts");
var JhiMetricsMonitoringComponent = (function () {
    function JhiMetricsMonitoringComponent(modalService, metricsService) {
        this.modalService = modalService;
        this.metricsService = metricsService;
        this.metrics = {};
        this.cachesStats = {};
        this.servicesStats = {};
        this.updatingMetrics = true;
        this.JCACHE_KEY = 'jcache.statistics';
    }
    JhiMetricsMonitoringComponent.prototype.ngOnInit = function () {
        this.refresh();
    };
    JhiMetricsMonitoringComponent.prototype.refresh = function () {
        var _this = this;
        this.updatingMetrics = true;
        this.metricsService.getMetrics().subscribe(function (metrics) {
            _this.metrics = metrics;
            _this.updatingMetrics = false;
            _this.servicesStats = {};
            _this.cachesStats = {};
            Object.keys(metrics.timers).forEach(function (key) {
                var value = metrics.timers[key];
                if (key.indexOf('web.rest') !== -1 || key.indexOf('service') !== -1) {
                    _this.servicesStats[key] = value;
                }
            });
            Object.keys(metrics.gauges).forEach(function (key) {
                if (key.indexOf('jcache.statistics') !== -1) {
                    var value = metrics.gauges[key].value;
                    // remove gets or puts
                    var index = key.lastIndexOf('.');
                    var newKey = key.substr(0, index);
                    // Keep the name of the domain
                    _this.cachesStats[newKey] = {
                        'name': _this.JCACHE_KEY.length,
                        'value': value
                    };
                }
            });
        });
    };
    JhiMetricsMonitoringComponent.prototype.refreshThreadDumpData = function () {
        var _this = this;
        this.metricsService.threadDump().subscribe(function (data) {
            var modalRef = _this.modalService.open(metrics_modal_component_1.JhiMetricsMonitoringModalComponent, { size: 'lg' });
            modalRef.componentInstance.threadDump = data;
            modalRef.result.then(function (result) {
                // Left blank intentionally, nothing to do here
            }, function (reason) {
                // Left blank intentionally, nothing to do here
            });
        });
    };
    return JhiMetricsMonitoringComponent;
}());
JhiMetricsMonitoringComponent = __decorate([
    core_1.Component({
        selector: 'jhi-metrics',
        template: __webpack_require__("./src/main/webapp/app/admin/metrics/metrics.component.html"),
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        metrics_service_1.JhiMetricsService])
], JhiMetricsMonitoringComponent);
exports.JhiMetricsMonitoringComponent = JhiMetricsMonitoringComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/metrics/metrics.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var metrics_component_1 = __webpack_require__("./src/main/webapp/app/admin/metrics/metrics.component.ts");
exports.metricsRoute = {
    path: 'jhi-metrics',
    component: metrics_component_1.JhiMetricsMonitoringComponent,
    data: {
        pageTitle: 'Application Metrics'
    }
};


/***/ }),

/***/ "./src/main/webapp/app/admin/metrics/metrics.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var JhiMetricsService = (function () {
    function JhiMetricsService(http) {
        this.http = http;
    }
    JhiMetricsService.prototype.getMetrics = function () {
        return this.http.get('management/metrics').map(function (res) { return res.json(); });
    };
    JhiMetricsService.prototype.threadDump = function () {
        return this.http.get('management/dump').map(function (res) { return res.json(); });
    };
    return JhiMetricsService;
}());
JhiMetricsService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], JhiMetricsService);
exports.JhiMetricsService = JhiMetricsService;


/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-management-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(user.login)\">\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Confirm delete operation</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n            (click)=\"clear()\">&times;</button>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p>Are you sure you want to delete this User?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span>Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span>Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-management-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var user_modal_service_1 = __webpack_require__("./src/main/webapp/app/admin/user-management/user-modal.service.ts");
var UserMgmtDeleteDialogComponent = (function () {
    function UserMgmtDeleteDialogComponent(userService, activeModal, eventManager) {
        this.userService = userService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
    }
    UserMgmtDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    UserMgmtDeleteDialogComponent.prototype.confirmDelete = function (login) {
        var _this = this;
        this.userService.delete(login).subscribe(function (response) {
            _this.eventManager.broadcast({ name: 'userListModification',
                content: 'Deleted a user' });
            _this.activeModal.dismiss(true);
        });
    };
    return UserMgmtDeleteDialogComponent;
}());
UserMgmtDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-user-mgmt-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/admin/user-management/user-management-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [shared_1.UserService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], UserMgmtDeleteDialogComponent);
exports.UserMgmtDeleteDialogComponent = UserMgmtDeleteDialogComponent;
var UserDeleteDialogComponent = (function () {
    function UserDeleteDialogComponent(route, userModalService) {
        this.route = route;
        this.userModalService = userModalService;
    }
    UserDeleteDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.userModalService.open(UserMgmtDeleteDialogComponent, params['login']);
        });
    };
    UserDeleteDialogComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return UserDeleteDialogComponent;
}());
UserDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-user-delete-dialog',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        user_modal_service_1.UserModalService])
], UserDeleteDialogComponent);
exports.UserDeleteDialogComponent = UserDeleteDialogComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-management-detail.component.html":
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"user\">\n    <h2>\n        <span>User</span> [<b>{{user.login}}</b>]\n    </h2>\n    <dl class=\"row-md jh-entity-details\">\n        <dt><span>Login</span></dt>\n        <dd>\n            <span>{{user.login}}</span>\n            <span class=\"badge badge-danger\" *ngIf=\"!user.activated\"\n                 >Deactivated</span>\n            <span class=\"badge badge-success\" *ngIf=\"user.activated\"\n                 >Activated</span>\n        </dd>\n        <dt><span>First Name</span></dt>\n        <dd>{{user.firstName}}</dd>\n        <dt><span>Last Name</span></dt>\n        <dd>{{user.lastName}}</dd>\n        <dt><span>Email</span></dt>\n        <dd>{{user.email}}</dd>\n        <dt><span>Created By</span></dt>\n        <dd>{{user.createdBy}}</dd>\n        <dt><span>Created Date</span></dt>\n        <dd>{{user.createdDate | date:'dd/MM/yy HH:mm' }}</dd>\n        <dt><span>Last Modified By</span></dt>\n        <dd>{{user.lastModifiedBy}}</dd>\n        <dt><span>Last Modified Date</span></dt>\n        <dd>{{user.lastModifiedDate | date:'dd/MM/yy HH:mm'}}</dd>\n        <dt><span>Profiles</span></dt>\n        <dd>\n            <ul class=\"list-unstyled\">\n                <li *ngFor=\"let authority of user.authorities\">\n                    <span class=\"badge badge-info\">{{authority}}</span>\n                </li>\n            </ul>\n        </dd>\n    </dl>\n    <button type=\"submit\"\n            routerLink=\"/user-management\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span> Back</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-management-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var UserMgmtDetailComponent = (function () {
    function UserMgmtDetailComponent(userService, route) {
        this.userService = userService;
        this.route = route;
    }
    UserMgmtDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['login']);
        });
    };
    UserMgmtDetailComponent.prototype.load = function (login) {
        var _this = this;
        this.userService.find(login).subscribe(function (user) {
            _this.user = user;
        });
    };
    UserMgmtDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return UserMgmtDetailComponent;
}());
UserMgmtDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-user-mgmt-detail',
        template: __webpack_require__("./src/main/webapp/app/admin/user-management/user-management-detail.component.html")
    }),
    __metadata("design:paramtypes", [shared_1.UserService,
        router_1.ActivatedRoute])
], UserMgmtDetailComponent);
exports.UserMgmtDetailComponent = UserMgmtDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-management-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"myUserLabel\">\n            Create or edit a User</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n            (click)=\"clear()\">&times;</button>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\">\n            <label>ID</label>\n            <input type=\"text\" class=\"form-control\" name=\"id\"\n                   [(ngModel)]=\"user.id\" readonly>\n        </div>\n\n        <div class=\"form-group\">\n            <label class=\"form-control-label\">Login</label>\n            <input type=\"text\" class=\"form-control\" name=\"login\" #loginInput=\"ngModel\"\n                   [(ngModel)]=\"user.login\" required minlength=1 maxlength=50 pattern=\"^[_'.@A-Za-z0-9-]*$\">\n\n            <div *ngIf=\"loginInput.dirty && loginInput.invalid\">\n                <small class=\"form-text text-danger\"\n                   *ngIf=\"loginInput.errors.required\">\n                    This field is required.\n                </small>\n\n                <small class=\"form-text text-danger\"\n                   *ngIf=\"loginInput.errors.maxlength\"\n                  >\n                    This field cannot be longer than 50 characters.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\">First Name</label>\n            <input type=\"text\" class=\"form-control\" name=\"firstName\" #firstNameInput=\"ngModel\"\n                   [(ngModel)]=\"user.firstName\" maxlength=\"50\">\n\n            <div *ngIf=\"firstNameInput.dirty && firstNameInput.invalid\">\n                <small class=\"form-text text-danger\"\n                   *ngIf=\"firstNameInput.errors.maxlength\"\n                  >\n                    This field cannot be longer than 50 characters.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label>Last Name</label>\n            <input type=\"text\" class=\"form-control\" name=\"lastName\" #lastNameInput=\"ngModel\"\n                   [(ngModel)]=\"user.lastName\" maxlength=\"50\">\n\n            <div *ngIf=\"lastNameInput.dirty && lastNameInput.invalid\">\n                <small class=\"form-text text-danger\"\n                   *ngIf=\"lastNameInput.errors.maxlength\"\n                  >\n                    This field cannot be longer than 50 characters.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\">Email</label>\n            <input type=\"email\" class=\"form-control\" name=\"email\" #emailInput=\"ngModel\"\n                   [(ngModel)]=\"user.email\" required maxlength=\"100\">\n\n            <div *ngIf=\"emailInput.dirty && emailInput.invalid\">\n                <small class=\"form-text text-danger\"\n                   *ngIf=\"emailInput.errors.required\">\n                    This field is required.\n                </small>\n\n                <small class=\"form-text text-danger\"\n                   *ngIf=\"emailInput.errors.maxlength\"\n                  >\n                    This field cannot be longer than 100 characters.\n                </small>\n\t\t<small class=\"form-text text-danger\"\n                   *ngIf=\"emailInput.errors.email\">\n                    Your e-mail is invalid.\n                 </small>\n            </div>\n        </div>\n        <div class=\"form-check\">\n            <label class=\"form-check-label\" for=\"activated\">\n                <input class=\"form-check-input\" [disabled]=\"user.id === null\" type=\"checkbox\" id=\"activated\" name=\"activated\" [(ngModel)]=\"user.activated\">\n                <span>Activated</span>\n            </label>\n        </div>\n\n        <div class=\"form-group\">\n            <label>Profiles</label>\n            <select class=\"form-control\" multiple name=\"authority\" [(ngModel)]=\"user.authorities\">\n                <option *ngFor=\"let authority of authorities\" [value]=\"authority\">{{authority}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span\n           >Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-floppy-o\"></span>&nbsp;<span>Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-management-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var user_modal_service_1 = __webpack_require__("./src/main/webapp/app/admin/user-management/user-modal.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var UserMgmtDialogComponent = (function () {
    function UserMgmtDialogComponent(activeModal, userService, eventManager) {
        this.activeModal = activeModal;
        this.userService = userService;
        this.eventManager = eventManager;
    }
    UserMgmtDialogComponent.prototype.ngOnInit = function () {
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
    };
    UserMgmtDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    UserMgmtDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.user.id !== null) {
            this.userService.update(this.user).subscribe(function (response) { return _this.onSaveSuccess(response); }, function () { return _this.onSaveError(); });
        }
        else {
            this.user.langKey = 'en';
            this.userService.create(this.user).subscribe(function (response) { return _this.onSaveSuccess(response); }, function () { return _this.onSaveError(); });
        }
    };
    UserMgmtDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'userListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    UserMgmtDialogComponent.prototype.onSaveError = function () {
        this.isSaving = false;
    };
    return UserMgmtDialogComponent;
}());
UserMgmtDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-user-mgmt-dialog',
        template: __webpack_require__("./src/main/webapp/app/admin/user-management/user-management-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        shared_1.UserService,
        ng_jhipster_1.EventManager])
], UserMgmtDialogComponent);
exports.UserMgmtDialogComponent = UserMgmtDialogComponent;
var UserDialogComponent = (function () {
    function UserDialogComponent(route, userModalService) {
        this.route = route;
        this.userModalService = userModalService;
    }
    UserDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['login']) {
                _this.modalRef = _this.userModalService.open(UserMgmtDialogComponent, params['login']);
            }
            else {
                _this.modalRef = _this.userModalService.open(UserMgmtDialogComponent);
            }
        });
    };
    UserDialogComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return UserDialogComponent;
}());
UserDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-user-dialog',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        user_modal_service_1.UserModalService])
], UserDialogComponent);
exports.UserDialogComponent = UserDialogComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-management.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2>\n        <span>Users</span>\n        <button class=\"btn btn-primary float-right\" [routerLink]=\"['/', { outlets: { popup: ['user-management-new'] } }]\">\n            <span class=\"fa fa-plus\"></span> <span>Create a new User</span>\n        </button>\n    </h2>\n    <jhi-alert></jhi-alert>\n    <div class=\"table-responsive\" *ngIf=\"users\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span>ID</span><span class=\"fa fa-sort\"></span></th>\n                <th jhiSortBy=\"login\"><span>Login</span> <span class=\"fa fa-sort\"></span></th>\n                <th jhiSortBy=\"email\"><span>Email</span> <span class=\"fa fa-sort\"></span></th>\n                <th></th>\n                <th><span>Profiles</span></th>\n                <th jhiSortBy=\"createdDate\"><span>Created Date</span> <span class=\"fa fa-sort\"></span></th>\n                <th jhiSortBy=\"lastModifiedBy\"><span>Last Modified By</span> <span class=\"fa fa-sort\"></span></th>\n                <th jhiSortBy=\"lastModifiedDate\"><span>Last Modified Date</span> <span class=\"fa fa-sort\"></span></th>\n                <th></th>\n            </tr>\n            </thead>\n            <tbody *ngIf =\"users\">\n            <tr *ngFor=\"let user of users; trackBy: trackIdentity\">\n                <td><a [routerLink]=\"['../user-management', user.login]\">{{user.id}}</a></td>\n                <td>{{user.login}}</td>\n                <td>{{user.email}}</td>\n                <td>\n                    <span class=\"badge badge-danger hand\" (click)=\"setActive(user, true)\" *ngIf=\"!user.activated\"\n                         >Deactivated</span>\n                    <span class=\"badge badge-success hand\" (click)=\"setActive(user, false)\" *ngIf=\"user.activated\"\n                         >Activated</span>\n                </td>\n                \n                <td>\n                    <div *ngFor=\"let authority of user.authorities\">\n                        <span class=\"tag tag-info\">{{ authority }}</span>\n                    </div>\n                </td>\n                <td>{{user.createdDate | date:'dd/MM/yy HH:mm'}}</td>\n                <td>{{user.lastModifiedBy}}</td>\n                <td>{{user.lastModifiedDate | date:'dd/MM/yy HH:mm'}}</td>\n                <td class=\"text-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../user-management', user.login]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'user-management/'+ user.login + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'user-management/'+ user.login + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\" [disabled]=\"currentAccount.login==user.login\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n    <div *ngIf=\"users\">\n        <div class=\"row justify-content-center\">\n            <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n        </div>\n        <div class=\"row justify-content-center\">\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\" (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-management.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var UserMgmtComponent = (function () {
    function UserMgmtComponent(userService, parseLinks, alertService, principal, eventManager, paginationUtil, paginationConfig, activatedRoute, router) {
        var _this = this;
        this.userService = userService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
    }
    UserMgmtComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
            _this.loadAll();
            _this.registerChangeInUsers();
        });
    };
    UserMgmtComponent.prototype.ngOnDestroy = function () {
        this.routeData.unsubscribe();
    };
    UserMgmtComponent.prototype.registerChangeInUsers = function () {
        var _this = this;
        this.eventManager.subscribe('userListModification', function (response) { return _this.loadAll(); });
    };
    UserMgmtComponent.prototype.setActive = function (user, isActivated) {
        var _this = this;
        user.activated = isActivated;
        this.userService.update(user).subscribe(function (response) {
            if (response.status === 200) {
                _this.error = null;
                _this.success = 'OK';
                _this.loadAll();
            }
            else {
                _this.success = null;
                _this.error = 'ERROR';
            }
        });
    };
    UserMgmtComponent.prototype.loadAll = function () {
        var _this = this;
        this.userService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    UserMgmtComponent.prototype.trackIdentity = function (index, item) {
        return item.id;
    };
    UserMgmtComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    UserMgmtComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    UserMgmtComponent.prototype.transition = function () {
        this.router.navigate(['/user-management'], { queryParams: {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    UserMgmtComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        this.users = data;
    };
    UserMgmtComponent.prototype.onError = function (error) {
        this.alertService.error(error.error, error.message, null);
    };
    return UserMgmtComponent;
}());
UserMgmtComponent = __decorate([
    core_1.Component({
        selector: 'jhi-user-mgmt',
        template: __webpack_require__("./src/main/webapp/app/admin/user-management/user-management.component.html")
    }),
    __metadata("design:paramtypes", [shared_1.UserService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        ng_jhipster_1.EventManager, ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig,
        router_1.ActivatedRoute,
        router_1.Router])
], UserMgmtComponent);
exports.UserMgmtComponent = UserMgmtComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-management.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var user_management_component_1 = __webpack_require__("./src/main/webapp/app/admin/user-management/user-management.component.ts");
var user_management_detail_component_1 = __webpack_require__("./src/main/webapp/app/admin/user-management/user-management-detail.component.ts");
var user_management_dialog_component_1 = __webpack_require__("./src/main/webapp/app/admin/user-management/user-management-dialog.component.ts");
var user_management_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/admin/user-management/user-management-delete-dialog.component.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var UserResolve = (function () {
    function UserResolve(principal) {
        this.principal = principal;
    }
    UserResolve.prototype.canActivate = function () {
        var _this = this;
        return this.principal.identity().then(function (account) { return _this.principal.hasAnyAuthority(['ROLE_ADMIN']); });
    };
    return UserResolve;
}());
UserResolve = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [shared_1.Principal])
], UserResolve);
exports.UserResolve = UserResolve;
var UserResolvePagingParams = (function () {
    function UserResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    UserResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return UserResolvePagingParams;
}());
UserResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], UserResolvePagingParams);
exports.UserResolvePagingParams = UserResolvePagingParams;
exports.userMgmtRoute = [
    {
        path: 'user-management',
        component: user_management_component_1.UserMgmtComponent,
        resolve: {
            'pagingParams': UserResolvePagingParams
        },
        data: {
            pageTitle: 'Users'
        }
    },
    {
        path: 'user-management/:login',
        component: user_management_detail_component_1.UserMgmtDetailComponent,
        data: {
            pageTitle: 'Users'
        }
    }
];
exports.userDialogRoute = [
    {
        path: 'user-management-new',
        component: user_management_dialog_component_1.UserDialogComponent,
        outlet: 'popup'
    },
    {
        path: 'user-management/:login/edit',
        component: user_management_dialog_component_1.UserDialogComponent,
        outlet: 'popup'
    },
    {
        path: 'user-management/:login/delete',
        component: user_management_delete_dialog_component_1.UserDeleteDialogComponent,
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-modal.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var UserModalService = (function () {
    function UserModalService(modalService, router, userService) {
        this.modalService = modalService;
        this.router = router;
        this.userService = userService;
        this.isOpen = false;
    }
    UserModalService.prototype.open = function (component, login) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (login) {
            this.userService.find(login).subscribe(function (user) { return _this.userModalRef(component, user); });
        }
        else {
            return this.userModalRef(component, new shared_1.User());
        }
    };
    UserModalService.prototype.userModalRef = function (component, user) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.user = user;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return UserModalService;
}());
UserModalService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        shared_1.UserService])
], UserModalService);
exports.UserModalService = UserModalService;


/***/ }),

/***/ "./src/main/webapp/app/app.constants.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// DO NOT EDIT THIS FILE, EDIT THE WEBPACK COMMON CONFIG INSTEAD, WHICH WILL MODIFY THIS FILE
var _VERSION = '0.0.0'; // This value will be overwritten by webpack
var _DEBUG_INFO_ENABLED = true; // This value will be overwritten by webpack
_VERSION = "0.0.0";
_DEBUG_INFO_ENABLED = true;
exports.VERSION = _VERSION;
exports.DEBUG_INFO_ENABLED = _DEBUG_INFO_ENABLED;


/***/ }),

/***/ "./src/main/webapp/app/app.main.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var platform_browser_dynamic_1 = __webpack_require__(12);
var prod_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/prod.config.ts");
var app_module_1 = __webpack_require__("./src/main/webapp/app/app.module.ts");
prod_config_1.ProdConfig();
if (false) {
    module['hot'].accept();
}
platform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.App1AppModule);


/***/ }),

/***/ "./src/main/webapp/app/app.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
__webpack_require__(18);
var core_1 = __webpack_require__(0);
var platform_browser_1 = __webpack_require__(10);
var ng2_webstorage_1 = __webpack_require__(8);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var home_module_1 = __webpack_require__("./src/main/webapp/app/home/home.module.ts");
var admin_module_1 = __webpack_require__("./src/main/webapp/app/admin/admin.module.ts");
var account_module_1 = __webpack_require__("./src/main/webapp/app/account/account.module.ts");
var entity_module_1 = __webpack_require__("./src/main/webapp/app/entities/entity.module.ts");
var layouts_1 = __webpack_require__("./src/main/webapp/app/layouts/index.ts");
var http_provider_1 = __webpack_require__("./src/main/webapp/app/blocks/interceptor/http.provider.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var layouts_2 = __webpack_require__("./src/main/webapp/app/layouts/index.ts");
var App1AppModule = (function () {
    function App1AppModule() {
    }
    return App1AppModule;
}());
App1AppModule = __decorate([
    core_1.NgModule({
        imports: [
            platform_browser_1.BrowserModule,
            layouts_1.LayoutRoutingModule,
            ng2_webstorage_1.Ng2Webstorage.forRoot({ prefix: 'jhi', separator: '-' }),
            shared_1.App1SharedModule,
            home_module_1.App1HomeModule,
            admin_module_1.App1AdminModule,
            account_module_1.App1AccountModule,
            entity_module_1.App1EntityModule
        ],
        declarations: [
            layouts_2.JhiMainComponent,
            layouts_2.NavbarComponent,
            layouts_2.ErrorComponent,
            layouts_2.PageRibbonComponent,
            layouts_2.FooterComponent
        ],
        providers: [
            layouts_2.ProfileService,
            { provide: Window, useValue: window },
            { provide: Document, useValue: document },
            http_provider_1.customHttpProvider(),
            uib_pagination_config_1.PaginationConfig,
            shared_1.UserRouteAccessService
        ],
        bootstrap: [layouts_2.JhiMainComponent]
    })
], App1AppModule);
exports.App1AppModule = App1AppModule;


/***/ }),

/***/ "./src/main/webapp/app/app.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var layouts_1 = __webpack_require__("./src/main/webapp/app/layouts/index.ts");
exports.navbarRoute = {
    path: '',
    component: layouts_1.NavbarComponent,
    outlet: 'navbar'
};


/***/ }),

/***/ "./src/main/webapp/app/blocks/config/prod.config.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__("./src/main/webapp/app/app.constants.ts");
function ProdConfig() {
    // disable debug data on prod profile to improve performance
    if (!app_constants_1.DEBUG_INFO_ENABLED) {
        core_1.enableProdMode();
    }
}
exports.ProdConfig = ProdConfig;


/***/ }),

/***/ "./src/main/webapp/app/blocks/config/uib-pagination.config.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var core_1 = __webpack_require__(0);
var ng_bootstrap_1 = __webpack_require__(3);
var PaginationConfig = (function () {
    function PaginationConfig(config) {
        this.config = config;
        config.boundaryLinks = true;
        config.maxSize = 5;
        config.pageSize = shared_1.ITEMS_PER_PAGE;
        config.size = 'sm';
    }
    return PaginationConfig;
}());
PaginationConfig = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbPaginationConfig])
], PaginationConfig);
exports.PaginationConfig = PaginationConfig;


/***/ }),

/***/ "./src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ng_jhipster_1 = __webpack_require__(2);
var Observable_1 = __webpack_require__(9);
var auth_service_1 = __webpack_require__("./src/main/webapp/app/shared/auth/auth.service.ts");
var principal_service_1 = __webpack_require__("./src/main/webapp/app/shared/auth/principal.service.ts");
var AuthExpiredInterceptor = (function (_super) {
    __extends(AuthExpiredInterceptor, _super);
    function AuthExpiredInterceptor(injector) {
        var _this = _super.call(this) || this;
        _this.injector = injector;
        return _this;
    }
    AuthExpiredInterceptor.prototype.requestIntercept = function (options) {
        return options;
    };
    AuthExpiredInterceptor.prototype.responseIntercept = function (observable) {
        var self = this;
        return observable.catch(function (error, source) {
            if (error.status === 401) {
                var principal = self.injector.get(principal_service_1.Principal);
                if (principal.isAuthenticated()) {
                    var auth = self.injector.get(auth_service_1.AuthService);
                    auth.authorize(true);
                }
            }
            return Observable_1.Observable.throw(error);
        });
    };
    return AuthExpiredInterceptor;
}(ng_jhipster_1.HttpInterceptor));
exports.AuthExpiredInterceptor = AuthExpiredInterceptor;


/***/ }),

/***/ "./src/main/webapp/app/blocks/interceptor/auth.interceptor.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ng_jhipster_1 = __webpack_require__(2);
var AuthInterceptor = (function (_super) {
    __extends(AuthInterceptor, _super);
    function AuthInterceptor(localStorage, sessionStorage) {
        var _this = _super.call(this) || this;
        _this.localStorage = localStorage;
        _this.sessionStorage = sessionStorage;
        return _this;
    }
    AuthInterceptor.prototype.requestIntercept = function (options) {
        var token = this.localStorage.retrieve('authenticationToken') || this.sessionStorage.retrieve('authenticationToken');
        if (!!token) {
            options.headers.append('Authorization', 'Bearer ' + token);
        }
        return options;
    };
    AuthInterceptor.prototype.responseIntercept = function (observable) {
        return observable; // by pass
    };
    return AuthInterceptor;
}(ng_jhipster_1.HttpInterceptor));
exports.AuthInterceptor = AuthInterceptor;


/***/ }),

/***/ "./src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ng_jhipster_1 = __webpack_require__(2);
var Observable_1 = __webpack_require__(9);
var ErrorHandlerInterceptor = (function (_super) {
    __extends(ErrorHandlerInterceptor, _super);
    function ErrorHandlerInterceptor(eventManager) {
        var _this = _super.call(this) || this;
        _this.eventManager = eventManager;
        return _this;
    }
    ErrorHandlerInterceptor.prototype.requestIntercept = function (options) {
        return options;
    };
    ErrorHandlerInterceptor.prototype.responseIntercept = function (observable) {
        var _this = this;
        return observable.catch(function (error) {
            if (!(error.status === 401 && (error.text() === '' ||
                (error.json().path && error.json().path.indexOf('/api/account') === 0)))) {
                _this.eventManager.broadcast({ name: 'app1App.httpError', content: error });
            }
            return Observable_1.Observable.throw(error);
        });
    };
    return ErrorHandlerInterceptor;
}(ng_jhipster_1.HttpInterceptor));
exports.ErrorHandlerInterceptor = ErrorHandlerInterceptor;


/***/ }),

/***/ "./src/main/webapp/app/blocks/interceptor/http.provider.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var ng_jhipster_1 = __webpack_require__(2);
var auth_interceptor_1 = __webpack_require__("./src/main/webapp/app/blocks/interceptor/auth.interceptor.ts");
var ng2_webstorage_1 = __webpack_require__(8);
var auth_expired_interceptor_1 = __webpack_require__("./src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts");
var errorhandler_interceptor_1 = __webpack_require__("./src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts");
var notification_interceptor_1 = __webpack_require__("./src/main/webapp/app/blocks/interceptor/notification.interceptor.ts");
function interceptableFactory(backend, defaultOptions, localStorage, sessionStorage, injector, eventManager) {
    return new ng_jhipster_1.InterceptableHttp(backend, defaultOptions, [
        new auth_interceptor_1.AuthInterceptor(localStorage, sessionStorage),
        new auth_expired_interceptor_1.AuthExpiredInterceptor(injector),
        // Other interceptors can be added here
        new errorhandler_interceptor_1.ErrorHandlerInterceptor(eventManager),
        new notification_interceptor_1.NotificationInterceptor()
    ]);
}
exports.interceptableFactory = interceptableFactory;
;
function customHttpProvider() {
    return {
        provide: http_1.Http,
        useFactory: interceptableFactory,
        deps: [
            http_1.XHRBackend,
            http_1.RequestOptions,
            ng2_webstorage_1.LocalStorageService,
            ng2_webstorage_1.SessionStorageService,
            core_1.Injector,
            ng_jhipster_1.EventManager
        ]
    };
}
exports.customHttpProvider = customHttpProvider;
;


/***/ }),

/***/ "./src/main/webapp/app/blocks/interceptor/notification.interceptor.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ng_jhipster_1 = __webpack_require__(2);
var Observable_1 = __webpack_require__(9);
var NotificationInterceptor = (function (_super) {
    __extends(NotificationInterceptor, _super);
    function NotificationInterceptor() {
        return _super.call(this) || this;
    }
    NotificationInterceptor.prototype.requestIntercept = function (options) {
        return options;
    };
    NotificationInterceptor.prototype.responseIntercept = function (observable) {
        return observable.catch(function (error) {
            var arr = Array.from(error.headers._headers);
            var headers = [];
            var i;
            for (i = 0; i < arr.length; i++) {
                if (arr[i][0].endsWith('app-alert') || arr[i][0].endsWith('app-params')) {
                    headers.push(arr[i][0]);
                }
            }
            headers.sort();
            var alertKey = headers.length >= 1 ? error.headers.get(headers[0]) : null;
            if (typeof alertKey === 'string') {
            }
            return Observable_1.Observable.throw(error);
        });
    };
    return NotificationInterceptor;
}(ng_jhipster_1.HttpInterceptor));
exports.NotificationInterceptor = NotificationInterceptor;


/***/ }),

/***/ "./src/main/webapp/app/entities/country/country-my-suffix-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(country.id)\">\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Confirm delete operation</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p>Are you sure you want to delete this Country?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span>Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span>Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/country/country-my-suffix-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var country_my_suffix_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix-popup.service.ts");
var country_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix.service.ts");
var CountryMySuffixDeleteDialogComponent = (function () {
    function CountryMySuffixDeleteDialogComponent(countryService, activeModal, eventManager) {
        this.countryService = countryService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
    }
    CountryMySuffixDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    CountryMySuffixDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.countryService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'countryListModification',
                content: 'Deleted an country'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return CountryMySuffixDeleteDialogComponent;
}());
CountryMySuffixDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-country-my-suffix-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [country_my_suffix_service_1.CountryMySuffixService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], CountryMySuffixDeleteDialogComponent);
exports.CountryMySuffixDeleteDialogComponent = CountryMySuffixDeleteDialogComponent;
var CountryMySuffixDeletePopupComponent = (function () {
    function CountryMySuffixDeletePopupComponent(route, countryPopupService) {
        this.route = route;
        this.countryPopupService = countryPopupService;
    }
    CountryMySuffixDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.countryPopupService
                .open(CountryMySuffixDeleteDialogComponent, params['id']);
        });
    };
    CountryMySuffixDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return CountryMySuffixDeletePopupComponent;
}());
CountryMySuffixDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-country-my-suffix-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        country_my_suffix_popup_service_1.CountryMySuffixPopupService])
], CountryMySuffixDeletePopupComponent);
exports.CountryMySuffixDeletePopupComponent = CountryMySuffixDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/country/country-my-suffix-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"country\">\n    <h2><span>Country</span> {{country.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row-md jh-entity-details\">\n        <dt><span>Country Name</span></dt>\n        <dd>\n            <span>{{country.countryName}}</span>\n        </dd>\n        <dt><span>Region</span></dt>\n        <dd>\n            <div *ngIf=\"country.regionId\">\n                <a [routerLink]=\"['/region-my-suffix', country.regionId]\">{{country.regionId}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'country-my-suffix/'+ country.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/country/country-my-suffix-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var country_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix.service.ts");
var CountryMySuffixDetailComponent = (function () {
    function CountryMySuffixDetailComponent(countryService, route) {
        this.countryService = countryService;
        this.route = route;
    }
    CountryMySuffixDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    CountryMySuffixDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.countryService.find(id).subscribe(function (country) {
            _this.country = country;
        });
    };
    CountryMySuffixDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    CountryMySuffixDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return CountryMySuffixDetailComponent;
}());
CountryMySuffixDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-country-my-suffix-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix-detail.component.html")
    }),
    __metadata("design:paramtypes", [country_my_suffix_service_1.CountryMySuffixService,
        router_1.ActivatedRoute])
], CountryMySuffixDetailComponent);
exports.CountryMySuffixDetailComponent = CountryMySuffixDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/country/country-my-suffix-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"myCountryLabel\">Create or edit a Country</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!country.id\">\n            <label for=\"id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"country.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_countryName\">Country Name</label>\n            <input type=\"text\" class=\"form-control\" name=\"countryName\" id=\"field_countryName\"\n                [(ngModel)]=\"country.countryName\"\n             />\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"field_region\">Region</label>\n            <select class=\"form-control\" id=\"field_region\" name=\"region\" [(ngModel)]=\"country.regionId\">\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"regionOption.id\" *ngFor=\"let regionOption of regions; trackBy: trackRegionById\">{{regionOption.id}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span>Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span>Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/country/country-my-suffix-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var country_my_suffix_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix-popup.service.ts");
var country_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix.service.ts");
var region_1 = __webpack_require__("./src/main/webapp/app/entities/region/index.ts");
var CountryMySuffixDialogComponent = (function () {
    function CountryMySuffixDialogComponent(activeModal, alertService, countryService, regionService, eventManager) {
        this.activeModal = activeModal;
        this.alertService = alertService;
        this.countryService = countryService;
        this.regionService = regionService;
        this.eventManager = eventManager;
    }
    CountryMySuffixDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.regionService.query({ filter: 'country-is-null' }).subscribe(function (res) {
            if (!_this.country.regionId) {
                _this.regions = res.json();
            }
            else {
                _this.regionService.find(_this.country.regionId).subscribe(function (subRes) {
                    _this.regions = [subRes].concat(res.json());
                }, function (subRes) { return _this.onError(subRes.json()); });
            }
        }, function (res) { return _this.onError(res.json()); });
    };
    CountryMySuffixDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    CountryMySuffixDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.country.id !== undefined) {
            this.countryService.update(this.country)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.countryService.create(this.country)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    CountryMySuffixDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'countryListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    CountryMySuffixDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    CountryMySuffixDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    CountryMySuffixDialogComponent.prototype.trackRegionById = function (index, item) {
        return item.id;
    };
    return CountryMySuffixDialogComponent;
}());
CountryMySuffixDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-country-my-suffix-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.AlertService,
        country_my_suffix_service_1.CountryMySuffixService,
        region_1.RegionMySuffixService,
        ng_jhipster_1.EventManager])
], CountryMySuffixDialogComponent);
exports.CountryMySuffixDialogComponent = CountryMySuffixDialogComponent;
var CountryMySuffixPopupComponent = (function () {
    function CountryMySuffixPopupComponent(route, countryPopupService) {
        this.route = route;
        this.countryPopupService = countryPopupService;
    }
    CountryMySuffixPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.countryPopupService
                    .open(CountryMySuffixDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.countryPopupService
                    .open(CountryMySuffixDialogComponent);
            }
        });
    };
    CountryMySuffixPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return CountryMySuffixPopupComponent;
}());
CountryMySuffixPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-country-my-suffix-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        country_my_suffix_popup_service_1.CountryMySuffixPopupService])
], CountryMySuffixPopupComponent);
exports.CountryMySuffixPopupComponent = CountryMySuffixPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/country/country-my-suffix-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var country_my_suffix_model_1 = __webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix.model.ts");
var country_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix.service.ts");
var CountryMySuffixPopupService = (function () {
    function CountryMySuffixPopupService(modalService, router, countryService) {
        this.modalService = modalService;
        this.router = router;
        this.countryService = countryService;
        this.isOpen = false;
    }
    CountryMySuffixPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.countryService.find(id).subscribe(function (country) {
                _this.countryModalRef(component, country);
            });
        }
        else {
            return this.countryModalRef(component, new country_my_suffix_model_1.CountryMySuffix());
        }
    };
    CountryMySuffixPopupService.prototype.countryModalRef = function (component, country) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.country = country;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return CountryMySuffixPopupService;
}());
CountryMySuffixPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        country_my_suffix_service_1.CountryMySuffixService])
], CountryMySuffixPopupService);
exports.CountryMySuffixPopupService = CountryMySuffixPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/country/country-my-suffix.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2>\n        <span>Countries</span>\n        <button class=\"btn btn-primary float-right create-country-my-suffix\" [routerLink]=\"['/', { outlets: { popup: ['country-my-suffix-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span >\n            Create new Country\n            </span>\n        </button>\n    </h2>\n    <jhi-alert></jhi-alert>\n    <div class=\"row\">\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"countries\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr>\n            <th><span>ID</span></th>\n            <th><span>Country Name</span></th>\n            <th><span>Region</span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let country of countries ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../country-my-suffix', country.id ]\">{{country.id}}</a></td>\n                <td>{{country.countryName}}</td>\n                <td>\n                    <div *ngIf=\"country.regionId\">\n                        <a [routerLink]=\"['../region-my-suffix', country.regionId  ]\" >{{country.regionId}}</a>\n                    </div>\n                </td>\n                <td class=\"text-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../country-my-suffix', country.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'country-my-suffix/'+ country.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'country-my-suffix/'+ country.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/country/country-my-suffix.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var country_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var CountryMySuffixComponent = (function () {
    function CountryMySuffixComponent(countryService, alertService, eventManager, principal) {
        this.countryService = countryService;
        this.alertService = alertService;
        this.eventManager = eventManager;
        this.principal = principal;
    }
    CountryMySuffixComponent.prototype.loadAll = function () {
        var _this = this;
        this.countryService.query().subscribe(function (res) {
            _this.countries = res.json();
        }, function (res) { return _this.onError(res.json()); });
    };
    CountryMySuffixComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInCountries();
    };
    CountryMySuffixComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    CountryMySuffixComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    CountryMySuffixComponent.prototype.registerChangeInCountries = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('countryListModification', function (response) { return _this.loadAll(); });
    };
    CountryMySuffixComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return CountryMySuffixComponent;
}());
CountryMySuffixComponent = __decorate([
    core_1.Component({
        selector: 'jhi-country-my-suffix',
        template: __webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix.component.html")
    }),
    __metadata("design:paramtypes", [country_my_suffix_service_1.CountryMySuffixService,
        ng_jhipster_1.AlertService,
        ng_jhipster_1.EventManager,
        shared_1.Principal])
], CountryMySuffixComponent);
exports.CountryMySuffixComponent = CountryMySuffixComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/country/country-my-suffix.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var CountryMySuffix = (function () {
    function CountryMySuffix(id, countryName, regionId) {
        this.id = id;
        this.countryName = countryName;
        this.regionId = regionId;
    }
    return CountryMySuffix;
}());
exports.CountryMySuffix = CountryMySuffix;


/***/ }),

/***/ "./src/main/webapp/app/entities/country/country-my-suffix.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/country/index.ts");
var ENTITY_STATES = _1.countryRoute.concat(_1.countryPopupRoute);
var App1CountryMySuffixModule = (function () {
    function App1CountryMySuffixModule() {
    }
    return App1CountryMySuffixModule;
}());
App1CountryMySuffixModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.App1SharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.CountryMySuffixComponent,
            _1.CountryMySuffixDetailComponent,
            _1.CountryMySuffixDialogComponent,
            _1.CountryMySuffixDeleteDialogComponent,
            _1.CountryMySuffixPopupComponent,
            _1.CountryMySuffixDeletePopupComponent,
        ],
        entryComponents: [
            _1.CountryMySuffixComponent,
            _1.CountryMySuffixDialogComponent,
            _1.CountryMySuffixPopupComponent,
            _1.CountryMySuffixDeleteDialogComponent,
            _1.CountryMySuffixDeletePopupComponent,
        ],
        providers: [
            _1.CountryMySuffixService,
            _1.CountryMySuffixPopupService,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], App1CountryMySuffixModule);
exports.App1CountryMySuffixModule = App1CountryMySuffixModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/country/country-my-suffix.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var country_my_suffix_component_1 = __webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix.component.ts");
var country_my_suffix_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix-detail.component.ts");
var country_my_suffix_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix-dialog.component.ts");
var country_my_suffix_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix-delete-dialog.component.ts");
exports.countryRoute = [
    {
        path: 'country-my-suffix',
        component: country_my_suffix_component_1.CountryMySuffixComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Countries'
        }
    }, {
        path: 'country-my-suffix/:id',
        component: country_my_suffix_detail_component_1.CountryMySuffixDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Countries'
        }
    }
];
exports.countryPopupRoute = [
    {
        path: 'country-my-suffix-new',
        component: country_my_suffix_dialog_component_1.CountryMySuffixPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Countries'
        },
        outlet: 'popup'
    },
    {
        path: 'country-my-suffix/:id/edit',
        component: country_my_suffix_dialog_component_1.CountryMySuffixPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Countries'
        },
        outlet: 'popup'
    },
    {
        path: 'country-my-suffix/:id/delete',
        component: country_my_suffix_delete_dialog_component_1.CountryMySuffixDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Countries'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/country/country-my-suffix.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var CountryMySuffixService = (function () {
    function CountryMySuffixService(http) {
        this.http = http;
        this.resourceUrl = 'api/countries';
    }
    CountryMySuffixService.prototype.create = function (country) {
        var copy = Object.assign({}, country);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    CountryMySuffixService.prototype.update = function (country) {
        var copy = Object.assign({}, country);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    CountryMySuffixService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    CountryMySuffixService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    CountryMySuffixService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    CountryMySuffixService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return CountryMySuffixService;
}());
CountryMySuffixService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], CountryMySuffixService);
exports.CountryMySuffixService = CountryMySuffixService;


/***/ }),

/***/ "./src/main/webapp/app/entities/country/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/department/department-my-suffix-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(department.id)\">\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Confirm delete operation</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p>Are you sure you want to delete this Department?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span>Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span>Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/department/department-my-suffix-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var department_my_suffix_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix-popup.service.ts");
var department_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix.service.ts");
var DepartmentMySuffixDeleteDialogComponent = (function () {
    function DepartmentMySuffixDeleteDialogComponent(departmentService, activeModal, eventManager) {
        this.departmentService = departmentService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
    }
    DepartmentMySuffixDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    DepartmentMySuffixDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.departmentService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'departmentListModification',
                content: 'Deleted an department'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return DepartmentMySuffixDeleteDialogComponent;
}());
DepartmentMySuffixDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-department-my-suffix-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [department_my_suffix_service_1.DepartmentMySuffixService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], DepartmentMySuffixDeleteDialogComponent);
exports.DepartmentMySuffixDeleteDialogComponent = DepartmentMySuffixDeleteDialogComponent;
var DepartmentMySuffixDeletePopupComponent = (function () {
    function DepartmentMySuffixDeletePopupComponent(route, departmentPopupService) {
        this.route = route;
        this.departmentPopupService = departmentPopupService;
    }
    DepartmentMySuffixDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.departmentPopupService
                .open(DepartmentMySuffixDeleteDialogComponent, params['id']);
        });
    };
    DepartmentMySuffixDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return DepartmentMySuffixDeletePopupComponent;
}());
DepartmentMySuffixDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-department-my-suffix-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        department_my_suffix_popup_service_1.DepartmentMySuffixPopupService])
], DepartmentMySuffixDeletePopupComponent);
exports.DepartmentMySuffixDeletePopupComponent = DepartmentMySuffixDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/department/department-my-suffix-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"department\">\n    <h2><span>Department</span> {{department.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row-md jh-entity-details\">\n        <dt><span>Department Name</span></dt>\n        <dd>\n            <span>{{department.departmentName}}</span>\n        </dd>\n        <dt><span>Location</span></dt>\n        <dd>\n            <div *ngIf=\"department.locationId\">\n                <a [routerLink]=\"['/location-my-suffix', department.locationId]\">{{department.locationId}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'department-my-suffix/'+ department.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/department/department-my-suffix-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var department_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix.service.ts");
var DepartmentMySuffixDetailComponent = (function () {
    function DepartmentMySuffixDetailComponent(departmentService, route) {
        this.departmentService = departmentService;
        this.route = route;
    }
    DepartmentMySuffixDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    DepartmentMySuffixDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.departmentService.find(id).subscribe(function (department) {
            _this.department = department;
        });
    };
    DepartmentMySuffixDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    DepartmentMySuffixDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return DepartmentMySuffixDetailComponent;
}());
DepartmentMySuffixDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-department-my-suffix-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix-detail.component.html")
    }),
    __metadata("design:paramtypes", [department_my_suffix_service_1.DepartmentMySuffixService,
        router_1.ActivatedRoute])
], DepartmentMySuffixDetailComponent);
exports.DepartmentMySuffixDetailComponent = DepartmentMySuffixDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/department/department-my-suffix-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"myDepartmentLabel\">Create or edit a Department</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!department.id\">\n            <label for=\"id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"department.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_departmentName\">Department Name</label>\n            <input type=\"text\" class=\"form-control\" name=\"departmentName\" id=\"field_departmentName\"\n                [(ngModel)]=\"department.departmentName\"\n            required />\n            <div [hidden]=\"!(editForm.controls.departmentName?.dirty && editForm.controls.departmentName?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.departmentName?.errors?.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"field_location\">Location</label>\n            <select class=\"form-control\" id=\"field_location\" name=\"location\" [(ngModel)]=\"department.locationId\">\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"locationOption.id\" *ngFor=\"let locationOption of locations; trackBy: trackLocationById\">{{locationOption.id}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span>Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span>Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/department/department-my-suffix-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var department_my_suffix_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix-popup.service.ts");
var department_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix.service.ts");
var location_1 = __webpack_require__("./src/main/webapp/app/entities/location/index.ts");
var employee_1 = __webpack_require__("./src/main/webapp/app/entities/employee/index.ts");
var DepartmentMySuffixDialogComponent = (function () {
    function DepartmentMySuffixDialogComponent(activeModal, alertService, departmentService, locationService, employeeService, eventManager) {
        this.activeModal = activeModal;
        this.alertService = alertService;
        this.departmentService = departmentService;
        this.locationService = locationService;
        this.employeeService = employeeService;
        this.eventManager = eventManager;
    }
    DepartmentMySuffixDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.locationService.query({ filter: 'department-is-null' }).subscribe(function (res) {
            if (!_this.department.locationId) {
                _this.locations = res.json();
            }
            else {
                _this.locationService.find(_this.department.locationId).subscribe(function (subRes) {
                    _this.locations = [subRes].concat(res.json());
                }, function (subRes) { return _this.onError(subRes.json()); });
            }
        }, function (res) { return _this.onError(res.json()); });
        this.employeeService.query().subscribe(function (res) { _this.employees = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    DepartmentMySuffixDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    DepartmentMySuffixDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.department.id !== undefined) {
            this.departmentService.update(this.department)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.departmentService.create(this.department)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    DepartmentMySuffixDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'departmentListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    DepartmentMySuffixDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    DepartmentMySuffixDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    DepartmentMySuffixDialogComponent.prototype.trackLocationById = function (index, item) {
        return item.id;
    };
    DepartmentMySuffixDialogComponent.prototype.trackEmployeeById = function (index, item) {
        return item.id;
    };
    return DepartmentMySuffixDialogComponent;
}());
DepartmentMySuffixDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-department-my-suffix-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.AlertService,
        department_my_suffix_service_1.DepartmentMySuffixService,
        location_1.LocationMySuffixService,
        employee_1.EmployeeMySuffixService,
        ng_jhipster_1.EventManager])
], DepartmentMySuffixDialogComponent);
exports.DepartmentMySuffixDialogComponent = DepartmentMySuffixDialogComponent;
var DepartmentMySuffixPopupComponent = (function () {
    function DepartmentMySuffixPopupComponent(route, departmentPopupService) {
        this.route = route;
        this.departmentPopupService = departmentPopupService;
    }
    DepartmentMySuffixPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.departmentPopupService
                    .open(DepartmentMySuffixDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.departmentPopupService
                    .open(DepartmentMySuffixDialogComponent);
            }
        });
    };
    DepartmentMySuffixPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return DepartmentMySuffixPopupComponent;
}());
DepartmentMySuffixPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-department-my-suffix-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        department_my_suffix_popup_service_1.DepartmentMySuffixPopupService])
], DepartmentMySuffixPopupComponent);
exports.DepartmentMySuffixPopupComponent = DepartmentMySuffixPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/department/department-my-suffix-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var department_my_suffix_model_1 = __webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix.model.ts");
var department_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix.service.ts");
var DepartmentMySuffixPopupService = (function () {
    function DepartmentMySuffixPopupService(modalService, router, departmentService) {
        this.modalService = modalService;
        this.router = router;
        this.departmentService = departmentService;
        this.isOpen = false;
    }
    DepartmentMySuffixPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.departmentService.find(id).subscribe(function (department) {
                _this.departmentModalRef(component, department);
            });
        }
        else {
            return this.departmentModalRef(component, new department_my_suffix_model_1.DepartmentMySuffix());
        }
    };
    DepartmentMySuffixPopupService.prototype.departmentModalRef = function (component, department) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.department = department;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return DepartmentMySuffixPopupService;
}());
DepartmentMySuffixPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        department_my_suffix_service_1.DepartmentMySuffixService])
], DepartmentMySuffixPopupService);
exports.DepartmentMySuffixPopupService = DepartmentMySuffixPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/department/department-my-suffix.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2>\n        <span>Departments</span>\n        <button class=\"btn btn-primary float-right create-department-my-suffix\" [routerLink]=\"['/', { outlets: { popup: ['department-my-suffix-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span >\n            Create new Department\n            </span>\n        </button>\n    </h2>\n    <jhi-alert></jhi-alert>\n    <div class=\"row\">\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"departments\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr>\n            <th><span>ID</span></th>\n            <th><span>Department Name</span></th>\n            <th><span>Location</span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let department of departments ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../department-my-suffix', department.id ]\">{{department.id}}</a></td>\n                <td>{{department.departmentName}}</td>\n                <td>\n                    <div *ngIf=\"department.locationId\">\n                        <a [routerLink]=\"['../location-my-suffix', department.locationId  ]\" >{{department.locationId}}</a>\n                    </div>\n                </td>\n                <td class=\"text-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../department-my-suffix', department.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'department-my-suffix/'+ department.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'department-my-suffix/'+ department.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/department/department-my-suffix.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var department_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var DepartmentMySuffixComponent = (function () {
    function DepartmentMySuffixComponent(departmentService, alertService, eventManager, principal) {
        this.departmentService = departmentService;
        this.alertService = alertService;
        this.eventManager = eventManager;
        this.principal = principal;
    }
    DepartmentMySuffixComponent.prototype.loadAll = function () {
        var _this = this;
        this.departmentService.query().subscribe(function (res) {
            _this.departments = res.json();
        }, function (res) { return _this.onError(res.json()); });
    };
    DepartmentMySuffixComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInDepartments();
    };
    DepartmentMySuffixComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    DepartmentMySuffixComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    DepartmentMySuffixComponent.prototype.registerChangeInDepartments = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('departmentListModification', function (response) { return _this.loadAll(); });
    };
    DepartmentMySuffixComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return DepartmentMySuffixComponent;
}());
DepartmentMySuffixComponent = __decorate([
    core_1.Component({
        selector: 'jhi-department-my-suffix',
        template: __webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix.component.html")
    }),
    __metadata("design:paramtypes", [department_my_suffix_service_1.DepartmentMySuffixService,
        ng_jhipster_1.AlertService,
        ng_jhipster_1.EventManager,
        shared_1.Principal])
], DepartmentMySuffixComponent);
exports.DepartmentMySuffixComponent = DepartmentMySuffixComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/department/department-my-suffix.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var DepartmentMySuffix = (function () {
    function DepartmentMySuffix(id, departmentName, locationId, employeeId) {
        this.id = id;
        this.departmentName = departmentName;
        this.locationId = locationId;
        this.employeeId = employeeId;
    }
    return DepartmentMySuffix;
}());
exports.DepartmentMySuffix = DepartmentMySuffix;


/***/ }),

/***/ "./src/main/webapp/app/entities/department/department-my-suffix.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/department/index.ts");
var ENTITY_STATES = _1.departmentRoute.concat(_1.departmentPopupRoute);
var App1DepartmentMySuffixModule = (function () {
    function App1DepartmentMySuffixModule() {
    }
    return App1DepartmentMySuffixModule;
}());
App1DepartmentMySuffixModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.App1SharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.DepartmentMySuffixComponent,
            _1.DepartmentMySuffixDetailComponent,
            _1.DepartmentMySuffixDialogComponent,
            _1.DepartmentMySuffixDeleteDialogComponent,
            _1.DepartmentMySuffixPopupComponent,
            _1.DepartmentMySuffixDeletePopupComponent,
        ],
        entryComponents: [
            _1.DepartmentMySuffixComponent,
            _1.DepartmentMySuffixDialogComponent,
            _1.DepartmentMySuffixPopupComponent,
            _1.DepartmentMySuffixDeleteDialogComponent,
            _1.DepartmentMySuffixDeletePopupComponent,
        ],
        providers: [
            _1.DepartmentMySuffixService,
            _1.DepartmentMySuffixPopupService,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], App1DepartmentMySuffixModule);
exports.App1DepartmentMySuffixModule = App1DepartmentMySuffixModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/department/department-my-suffix.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var department_my_suffix_component_1 = __webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix.component.ts");
var department_my_suffix_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix-detail.component.ts");
var department_my_suffix_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix-dialog.component.ts");
var department_my_suffix_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix-delete-dialog.component.ts");
exports.departmentRoute = [
    {
        path: 'department-my-suffix',
        component: department_my_suffix_component_1.DepartmentMySuffixComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Departments'
        }
    }, {
        path: 'department-my-suffix/:id',
        component: department_my_suffix_detail_component_1.DepartmentMySuffixDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Departments'
        }
    }
];
exports.departmentPopupRoute = [
    {
        path: 'department-my-suffix-new',
        component: department_my_suffix_dialog_component_1.DepartmentMySuffixPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Departments'
        },
        outlet: 'popup'
    },
    {
        path: 'department-my-suffix/:id/edit',
        component: department_my_suffix_dialog_component_1.DepartmentMySuffixPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Departments'
        },
        outlet: 'popup'
    },
    {
        path: 'department-my-suffix/:id/delete',
        component: department_my_suffix_delete_dialog_component_1.DepartmentMySuffixDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Departments'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/department/department-my-suffix.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var DepartmentMySuffixService = (function () {
    function DepartmentMySuffixService(http) {
        this.http = http;
        this.resourceUrl = 'api/departments';
    }
    DepartmentMySuffixService.prototype.create = function (department) {
        var copy = Object.assign({}, department);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    DepartmentMySuffixService.prototype.update = function (department) {
        var copy = Object.assign({}, department);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    DepartmentMySuffixService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    DepartmentMySuffixService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    DepartmentMySuffixService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    DepartmentMySuffixService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return DepartmentMySuffixService;
}());
DepartmentMySuffixService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], DepartmentMySuffixService);
exports.DepartmentMySuffixService = DepartmentMySuffixService;


/***/ }),

/***/ "./src/main/webapp/app/entities/department/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/employee/employee-my-suffix-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(employee.id)\">\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Confirm delete operation</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p>Are you sure you want to delete this Employee?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span>Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span>Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/employee/employee-my-suffix-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var employee_my_suffix_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix-popup.service.ts");
var employee_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix.service.ts");
var EmployeeMySuffixDeleteDialogComponent = (function () {
    function EmployeeMySuffixDeleteDialogComponent(employeeService, activeModal, eventManager) {
        this.employeeService = employeeService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
    }
    EmployeeMySuffixDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    EmployeeMySuffixDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.employeeService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'employeeListModification',
                content: 'Deleted an employee'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return EmployeeMySuffixDeleteDialogComponent;
}());
EmployeeMySuffixDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-employee-my-suffix-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [employee_my_suffix_service_1.EmployeeMySuffixService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], EmployeeMySuffixDeleteDialogComponent);
exports.EmployeeMySuffixDeleteDialogComponent = EmployeeMySuffixDeleteDialogComponent;
var EmployeeMySuffixDeletePopupComponent = (function () {
    function EmployeeMySuffixDeletePopupComponent(route, employeePopupService) {
        this.route = route;
        this.employeePopupService = employeePopupService;
    }
    EmployeeMySuffixDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.employeePopupService
                .open(EmployeeMySuffixDeleteDialogComponent, params['id']);
        });
    };
    EmployeeMySuffixDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return EmployeeMySuffixDeletePopupComponent;
}());
EmployeeMySuffixDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-employee-my-suffix-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        employee_my_suffix_popup_service_1.EmployeeMySuffixPopupService])
], EmployeeMySuffixDeletePopupComponent);
exports.EmployeeMySuffixDeletePopupComponent = EmployeeMySuffixDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/employee/employee-my-suffix-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"employee\">\n    <h2><span>Employee</span> {{employee.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row-md jh-entity-details\">\n        <dt><span>First Name</span></dt>\n        <dd>\n            <span>{{employee.firstName}}</span>\n        </dd>\n        <dt><span>Last Name</span></dt>\n        <dd>\n            <span>{{employee.lastName}}</span>\n        </dd>\n        <dt><span>Email</span></dt>\n        <dd>\n            <span>{{employee.email}}</span>\n        </dd>\n        <dt><span>Phone Number</span></dt>\n        <dd>\n            <span>{{employee.phoneNumber}}</span>\n        </dd>\n        <dt><span>Hire Date</span></dt>\n        <dd>\n            <span>{{employee.hireDate | date:'medium'}}</span>\n        </dd>\n        <dt><span>Salary</span></dt>\n        <dd>\n            <span>{{employee.salary}}</span>\n        </dd>\n        <dt><span>Commission Pct</span></dt>\n        <dd>\n            <span>{{employee.commissionPct}}</span>\n        </dd>\n        <dt><span>Department</span></dt>\n        <dd>\n            <div *ngIf=\"employee.departmentId\">\n                <a [routerLink]=\"['/department-my-suffix', employee.departmentId]\">{{employee.departmentId}}</a>\n            </div>\n        </dd>\n        <dt><span>Manager</span></dt>\n        <dd>\n            <div *ngIf=\"employee.managerId\">\n                <a [routerLink]=\"['/employee-my-suffix', employee.managerId]\">{{employee.managerId}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'employee-my-suffix/'+ employee.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/employee/employee-my-suffix-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var employee_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix.service.ts");
var EmployeeMySuffixDetailComponent = (function () {
    function EmployeeMySuffixDetailComponent(employeeService, route) {
        this.employeeService = employeeService;
        this.route = route;
    }
    EmployeeMySuffixDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    EmployeeMySuffixDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.employeeService.find(id).subscribe(function (employee) {
            _this.employee = employee;
        });
    };
    EmployeeMySuffixDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    EmployeeMySuffixDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return EmployeeMySuffixDetailComponent;
}());
EmployeeMySuffixDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-employee-my-suffix-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix-detail.component.html")
    }),
    __metadata("design:paramtypes", [employee_my_suffix_service_1.EmployeeMySuffixService,
        router_1.ActivatedRoute])
], EmployeeMySuffixDetailComponent);
exports.EmployeeMySuffixDetailComponent = EmployeeMySuffixDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/employee/employee-my-suffix-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"myEmployeeLabel\">Create or edit a Employee</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!employee.id\">\n            <label for=\"id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"employee.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_firstName\">First Name</label>\n            <input type=\"text\" class=\"form-control\" name=\"firstName\" id=\"field_firstName\"\n                [(ngModel)]=\"employee.firstName\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_lastName\">Last Name</label>\n            <input type=\"text\" class=\"form-control\" name=\"lastName\" id=\"field_lastName\"\n                [(ngModel)]=\"employee.lastName\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_email\">Email</label>\n            <input type=\"text\" class=\"form-control\" name=\"email\" id=\"field_email\"\n                [(ngModel)]=\"employee.email\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_phoneNumber\">Phone Number</label>\n            <input type=\"text\" class=\"form-control\" name=\"phoneNumber\" id=\"field_phoneNumber\"\n                [(ngModel)]=\"employee.phoneNumber\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_hireDate\">Hire Date</label>\n            <div class=\"d-flex\">\n                <input id=\"field_hireDate\" type=\"datetime-local\" class=\"form-control\" name=\"hireDate\" [(ngModel)]=\"employee.hireDate\"\n                  />\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_salary\">Salary</label>\n            <input type=\"number\" class=\"form-control\" name=\"salary\" id=\"field_salary\"\n                [(ngModel)]=\"employee.salary\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_commissionPct\">Commission Pct</label>\n            <input type=\"number\" class=\"form-control\" name=\"commissionPct\" id=\"field_commissionPct\"\n                [(ngModel)]=\"employee.commissionPct\"\n             />\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"field_department\">Department</label>\n            <select class=\"form-control\" id=\"field_department\" name=\"department\" [(ngModel)]=\"employee.departmentId\" >\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"departmentOption.id\" *ngFor=\"let departmentOption of departments; trackBy: trackDepartmentById\">{{departmentOption.id}}</option>\n            </select>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"field_manager\">Manager</label>\n            <select class=\"form-control\" id=\"field_manager\" name=\"manager\" [(ngModel)]=\"employee.managerId\" >\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"employeeOption.id\" *ngFor=\"let employeeOption of employees; trackBy: trackEmployeeById\">{{employeeOption.id}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span>Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span>Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/employee/employee-my-suffix-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var employee_my_suffix_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix-popup.service.ts");
var employee_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix.service.ts");
var department_1 = __webpack_require__("./src/main/webapp/app/entities/department/index.ts");
var job_1 = __webpack_require__("./src/main/webapp/app/entities/job/index.ts");
var EmployeeMySuffixDialogComponent = (function () {
    function EmployeeMySuffixDialogComponent(activeModal, alertService, employeeService, departmentService, jobService, eventManager) {
        this.activeModal = activeModal;
        this.alertService = alertService;
        this.employeeService = employeeService;
        this.departmentService = departmentService;
        this.jobService = jobService;
        this.eventManager = eventManager;
    }
    EmployeeMySuffixDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.departmentService.query().subscribe(function (res) { _this.departments = res.json(); }, function (res) { return _this.onError(res.json()); });
        this.jobService.query().subscribe(function (res) { _this.jobs = res.json(); }, function (res) { return _this.onError(res.json()); });
        this.employeeService.query().subscribe(function (res) { _this.employees = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    EmployeeMySuffixDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    EmployeeMySuffixDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.employee.id !== undefined) {
            this.employeeService.update(this.employee)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.employeeService.create(this.employee)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    EmployeeMySuffixDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'employeeListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    EmployeeMySuffixDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    EmployeeMySuffixDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    EmployeeMySuffixDialogComponent.prototype.trackDepartmentById = function (index, item) {
        return item.id;
    };
    EmployeeMySuffixDialogComponent.prototype.trackJobById = function (index, item) {
        return item.id;
    };
    EmployeeMySuffixDialogComponent.prototype.trackEmployeeById = function (index, item) {
        return item.id;
    };
    return EmployeeMySuffixDialogComponent;
}());
EmployeeMySuffixDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-employee-my-suffix-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.AlertService,
        employee_my_suffix_service_1.EmployeeMySuffixService,
        department_1.DepartmentMySuffixService,
        job_1.JobMySuffixService,
        ng_jhipster_1.EventManager])
], EmployeeMySuffixDialogComponent);
exports.EmployeeMySuffixDialogComponent = EmployeeMySuffixDialogComponent;
var EmployeeMySuffixPopupComponent = (function () {
    function EmployeeMySuffixPopupComponent(route, employeePopupService) {
        this.route = route;
        this.employeePopupService = employeePopupService;
    }
    EmployeeMySuffixPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.employeePopupService
                    .open(EmployeeMySuffixDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.employeePopupService
                    .open(EmployeeMySuffixDialogComponent);
            }
        });
    };
    EmployeeMySuffixPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return EmployeeMySuffixPopupComponent;
}());
EmployeeMySuffixPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-employee-my-suffix-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        employee_my_suffix_popup_service_1.EmployeeMySuffixPopupService])
], EmployeeMySuffixPopupComponent);
exports.EmployeeMySuffixPopupComponent = EmployeeMySuffixPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/employee/employee-my-suffix-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var common_1 = __webpack_require__(6);
var employee_my_suffix_model_1 = __webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix.model.ts");
var employee_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix.service.ts");
var EmployeeMySuffixPopupService = (function () {
    function EmployeeMySuffixPopupService(datePipe, modalService, router, employeeService) {
        this.datePipe = datePipe;
        this.modalService = modalService;
        this.router = router;
        this.employeeService = employeeService;
        this.isOpen = false;
    }
    EmployeeMySuffixPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.employeeService.find(id).subscribe(function (employee) {
                employee.hireDate = _this.datePipe.transform(employee.hireDate, 'yyyy-MM-ddThh:mm');
                _this.employeeModalRef(component, employee);
            });
        }
        else {
            return this.employeeModalRef(component, new employee_my_suffix_model_1.EmployeeMySuffix());
        }
    };
    EmployeeMySuffixPopupService.prototype.employeeModalRef = function (component, employee) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.employee = employee;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return EmployeeMySuffixPopupService;
}());
EmployeeMySuffixPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [common_1.DatePipe,
        ng_bootstrap_1.NgbModal,
        router_1.Router,
        employee_my_suffix_service_1.EmployeeMySuffixService])
], EmployeeMySuffixPopupService);
exports.EmployeeMySuffixPopupService = EmployeeMySuffixPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/employee/employee-my-suffix.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2>\n        <span>Employees</span>\n        <button class=\"btn btn-primary float-right create-employee-my-suffix\" [routerLink]=\"['/', { outlets: { popup: ['employee-my-suffix-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span >\n            Create new Employee\n            </span>\n        </button>\n    </h2>\n    <jhi-alert></jhi-alert>\n    <div class=\"row\">\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"employees\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"reset.bind(this)\">\n            <th jhiSortBy=\"id\"><span>ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"firstName\"><span>First Name</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"lastName\"><span>Last Name</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"email\"><span>Email</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"phoneNumber\"><span>Phone Number</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"hireDate\"><span>Hire Date</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"salary\"><span>Salary</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"commissionPct\"><span>Commission Pct</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"departmentId\"><span>Department</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"managerId\"><span>Manager</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody infinite-scroll (scrolled)=\"loadPage(page + 1)\" [infiniteScrollDisabled]=\"page >= links['last']\" [infiniteScrollDistance]=\"0\">\n            <tr *ngFor=\"let employee of employees ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../employee-my-suffix', employee.id ]\">{{employee.id}}</a></td>\n                <td>{{employee.firstName}}</td>\n                <td>{{employee.lastName}}</td>\n                <td>{{employee.email}}</td>\n                <td>{{employee.phoneNumber}}</td>\n                <td>{{employee.hireDate | date:'medium'}}</td>\n                <td>{{employee.salary}}</td>\n                <td>{{employee.commissionPct}}</td>\n                <td>\n                    <div *ngIf=\"employee.departmentId\">\n                        <a [routerLink]=\"['../department-my-suffix', employee.departmentId  ]\" >{{employee.departmentId}}</a>\n                    </div>\n                </td>\n                <td>\n                    <div *ngIf=\"employee.managerId\">\n                        <a [routerLink]=\"['../employee-my-suffix', employee.managerId  ]\" >{{employee.managerId}}</a>\n                    </div>\n                </td>\n                <td class=\"text-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../employee-my-suffix', employee.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'employee-my-suffix/'+ employee.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'employee-my-suffix/'+ employee.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/employee/employee-my-suffix.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var employee_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var EmployeeMySuffixComponent = (function () {
    function EmployeeMySuffixComponent(employeeService, alertService, eventManager, parseLinks, principal) {
        this.employeeService = employeeService;
        this.alertService = alertService;
        this.eventManager = eventManager;
        this.parseLinks = parseLinks;
        this.principal = principal;
        this.employees = [];
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.page = 0;
        this.links = {
            last: 0
        };
        this.predicate = 'id';
        this.reverse = true;
    }
    EmployeeMySuffixComponent.prototype.loadAll = function () {
        var _this = this;
        this.employeeService.query({
            page: this.page,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    EmployeeMySuffixComponent.prototype.reset = function () {
        this.page = 0;
        this.employees = [];
        this.loadAll();
    };
    EmployeeMySuffixComponent.prototype.loadPage = function (page) {
        this.page = page;
        this.loadAll();
    };
    EmployeeMySuffixComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInEmployees();
    };
    EmployeeMySuffixComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    EmployeeMySuffixComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    EmployeeMySuffixComponent.prototype.registerChangeInEmployees = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('employeeListModification', function (response) { return _this.reset(); });
    };
    EmployeeMySuffixComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    EmployeeMySuffixComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        for (var i = 0; i < data.length; i++) {
            this.employees.push(data[i]);
        }
    };
    EmployeeMySuffixComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return EmployeeMySuffixComponent;
}());
EmployeeMySuffixComponent = __decorate([
    core_1.Component({
        selector: 'jhi-employee-my-suffix',
        template: __webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix.component.html")
    }),
    __metadata("design:paramtypes", [employee_my_suffix_service_1.EmployeeMySuffixService,
        ng_jhipster_1.AlertService,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.ParseLinks,
        shared_1.Principal])
], EmployeeMySuffixComponent);
exports.EmployeeMySuffixComponent = EmployeeMySuffixComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/employee/employee-my-suffix.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var EmployeeMySuffix = (function () {
    function EmployeeMySuffix(id, firstName, lastName, email, phoneNumber, hireDate, salary, commissionPct, departmentId, jobId, managerId) {
        this.id = id;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.phoneNumber = phoneNumber;
        this.hireDate = hireDate;
        this.salary = salary;
        this.commissionPct = commissionPct;
        this.departmentId = departmentId;
        this.jobId = jobId;
        this.managerId = managerId;
    }
    return EmployeeMySuffix;
}());
exports.EmployeeMySuffix = EmployeeMySuffix;


/***/ }),

/***/ "./src/main/webapp/app/entities/employee/employee-my-suffix.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/employee/index.ts");
var ENTITY_STATES = _1.employeeRoute.concat(_1.employeePopupRoute);
var App1EmployeeMySuffixModule = (function () {
    function App1EmployeeMySuffixModule() {
    }
    return App1EmployeeMySuffixModule;
}());
App1EmployeeMySuffixModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.App1SharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.EmployeeMySuffixComponent,
            _1.EmployeeMySuffixDetailComponent,
            _1.EmployeeMySuffixDialogComponent,
            _1.EmployeeMySuffixDeleteDialogComponent,
            _1.EmployeeMySuffixPopupComponent,
            _1.EmployeeMySuffixDeletePopupComponent,
        ],
        entryComponents: [
            _1.EmployeeMySuffixComponent,
            _1.EmployeeMySuffixDialogComponent,
            _1.EmployeeMySuffixPopupComponent,
            _1.EmployeeMySuffixDeleteDialogComponent,
            _1.EmployeeMySuffixDeletePopupComponent,
        ],
        providers: [
            _1.EmployeeMySuffixService,
            _1.EmployeeMySuffixPopupService,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], App1EmployeeMySuffixModule);
exports.App1EmployeeMySuffixModule = App1EmployeeMySuffixModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/employee/employee-my-suffix.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var employee_my_suffix_component_1 = __webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix.component.ts");
var employee_my_suffix_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix-detail.component.ts");
var employee_my_suffix_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix-dialog.component.ts");
var employee_my_suffix_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix-delete-dialog.component.ts");
exports.employeeRoute = [
    {
        path: 'employee-my-suffix',
        component: employee_my_suffix_component_1.EmployeeMySuffixComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Employees'
        }
    }, {
        path: 'employee-my-suffix/:id',
        component: employee_my_suffix_detail_component_1.EmployeeMySuffixDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Employees'
        }
    }
];
exports.employeePopupRoute = [
    {
        path: 'employee-my-suffix-new',
        component: employee_my_suffix_dialog_component_1.EmployeeMySuffixPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Employees'
        },
        outlet: 'popup'
    },
    {
        path: 'employee-my-suffix/:id/edit',
        component: employee_my_suffix_dialog_component_1.EmployeeMySuffixPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Employees'
        },
        outlet: 'popup'
    },
    {
        path: 'employee-my-suffix/:id/delete',
        component: employee_my_suffix_delete_dialog_component_1.EmployeeMySuffixDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Employees'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/employee/employee-my-suffix.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var ng_jhipster_1 = __webpack_require__(2);
var EmployeeMySuffixService = (function () {
    function EmployeeMySuffixService(http, dateUtils) {
        this.http = http;
        this.dateUtils = dateUtils;
        this.resourceUrl = 'api/employees';
    }
    EmployeeMySuffixService.prototype.create = function (employee) {
        var copy = Object.assign({}, employee);
        copy.hireDate = this.dateUtils.toDate(employee.hireDate);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    EmployeeMySuffixService.prototype.update = function (employee) {
        var copy = Object.assign({}, employee);
        copy.hireDate = this.dateUtils.toDate(employee.hireDate);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    EmployeeMySuffixService.prototype.find = function (id) {
        var _this = this;
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            var jsonResponse = res.json();
            jsonResponse.hireDate = _this.dateUtils
                .convertDateTimeFromServer(jsonResponse.hireDate);
            return jsonResponse;
        });
    };
    EmployeeMySuffixService.prototype.query = function (req) {
        var _this = this;
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options)
            .map(function (res) { return _this.convertResponse(res); });
    };
    EmployeeMySuffixService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    EmployeeMySuffixService.prototype.convertResponse = function (res) {
        var jsonResponse = res.json();
        for (var i = 0; i < jsonResponse.length; i++) {
            jsonResponse[i].hireDate = this.dateUtils
                .convertDateTimeFromServer(jsonResponse[i].hireDate);
        }
        res._body = jsonResponse;
        return res;
    };
    EmployeeMySuffixService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return EmployeeMySuffixService;
}());
EmployeeMySuffixService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http, ng_jhipster_1.DateUtils])
], EmployeeMySuffixService);
exports.EmployeeMySuffixService = EmployeeMySuffixService;


/***/ }),

/***/ "./src/main/webapp/app/entities/employee/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/entity.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var country_my_suffix_module_1 = __webpack_require__("./src/main/webapp/app/entities/country/country-my-suffix.module.ts");
var department_my_suffix_module_1 = __webpack_require__("./src/main/webapp/app/entities/department/department-my-suffix.module.ts");
var employee_my_suffix_module_1 = __webpack_require__("./src/main/webapp/app/entities/employee/employee-my-suffix.module.ts");
var job_my_suffix_module_1 = __webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix.module.ts");
var job_history_my_suffix_module_1 = __webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix.module.ts");
var location_my_suffix_module_1 = __webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix.module.ts");
var region_my_suffix_module_1 = __webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix.module.ts");
var task_my_suffix_module_1 = __webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix.module.ts");
/* jhipster-needle-add-entity-module-import - JHipster will add entity modules imports here */
var App1EntityModule = (function () {
    function App1EntityModule() {
    }
    return App1EntityModule;
}());
App1EntityModule = __decorate([
    core_1.NgModule({
        imports: [
            country_my_suffix_module_1.App1CountryMySuffixModule,
            department_my_suffix_module_1.App1DepartmentMySuffixModule,
            employee_my_suffix_module_1.App1EmployeeMySuffixModule,
            job_my_suffix_module_1.App1JobMySuffixModule,
            job_history_my_suffix_module_1.App1JobHistoryMySuffixModule,
            location_my_suffix_module_1.App1LocationMySuffixModule,
            region_my_suffix_module_1.App1RegionMySuffixModule,
            task_my_suffix_module_1.App1TaskMySuffixModule,
        ],
        declarations: [],
        entryComponents: [],
        providers: [],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], App1EntityModule);
exports.App1EntityModule = App1EntityModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/job-history/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/job-history/job-history-my-suffix-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(jobHistory.id)\">\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Confirm delete operation</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p>Are you sure you want to delete this Job History?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span>Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span>Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/job-history/job-history-my-suffix-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var job_history_my_suffix_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix-popup.service.ts");
var job_history_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix.service.ts");
var JobHistoryMySuffixDeleteDialogComponent = (function () {
    function JobHistoryMySuffixDeleteDialogComponent(jobHistoryService, activeModal, eventManager) {
        this.jobHistoryService = jobHistoryService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
    }
    JobHistoryMySuffixDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    JobHistoryMySuffixDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.jobHistoryService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'jobHistoryListModification',
                content: 'Deleted an jobHistory'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return JobHistoryMySuffixDeleteDialogComponent;
}());
JobHistoryMySuffixDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-job-history-my-suffix-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [job_history_my_suffix_service_1.JobHistoryMySuffixService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], JobHistoryMySuffixDeleteDialogComponent);
exports.JobHistoryMySuffixDeleteDialogComponent = JobHistoryMySuffixDeleteDialogComponent;
var JobHistoryMySuffixDeletePopupComponent = (function () {
    function JobHistoryMySuffixDeletePopupComponent(route, jobHistoryPopupService) {
        this.route = route;
        this.jobHistoryPopupService = jobHistoryPopupService;
    }
    JobHistoryMySuffixDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.jobHistoryPopupService
                .open(JobHistoryMySuffixDeleteDialogComponent, params['id']);
        });
    };
    JobHistoryMySuffixDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return JobHistoryMySuffixDeletePopupComponent;
}());
JobHistoryMySuffixDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-job-history-my-suffix-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        job_history_my_suffix_popup_service_1.JobHistoryMySuffixPopupService])
], JobHistoryMySuffixDeletePopupComponent);
exports.JobHistoryMySuffixDeletePopupComponent = JobHistoryMySuffixDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/job-history/job-history-my-suffix-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"jobHistory\">\n    <h2><span>Job History</span> {{jobHistory.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row-md jh-entity-details\">\n        <dt><span>Start Date</span></dt>\n        <dd>\n            <span>{{jobHistory.startDate | date:'medium'}}</span>\n        </dd>\n        <dt><span>End Date</span></dt>\n        <dd>\n            <span>{{jobHistory.endDate | date:'medium'}}</span>\n        </dd>\n        <dt><span>Language</span></dt>\n        <dd>\n            <span>{{jobHistory.language}}</span>\n        </dd>\n        <dt><span>Job</span></dt>\n        <dd>\n            <div *ngIf=\"jobHistory.jobId\">\n                <a [routerLink]=\"['/job-my-suffix', jobHistory.jobId]\">{{jobHistory.jobId}}</a>\n            </div>\n        </dd>\n        <dt><span>Department</span></dt>\n        <dd>\n            <div *ngIf=\"jobHistory.departmentId\">\n                <a [routerLink]=\"['/department-my-suffix', jobHistory.departmentId]\">{{jobHistory.departmentId}}</a>\n            </div>\n        </dd>\n        <dt><span>Employee</span></dt>\n        <dd>\n            <div *ngIf=\"jobHistory.employeeId\">\n                <a [routerLink]=\"['/employee-my-suffix', jobHistory.employeeId]\">{{jobHistory.employeeId}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'job-history-my-suffix/'+ jobHistory.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/job-history/job-history-my-suffix-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var job_history_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix.service.ts");
var JobHistoryMySuffixDetailComponent = (function () {
    function JobHistoryMySuffixDetailComponent(jobHistoryService, route) {
        this.jobHistoryService = jobHistoryService;
        this.route = route;
    }
    JobHistoryMySuffixDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    JobHistoryMySuffixDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.jobHistoryService.find(id).subscribe(function (jobHistory) {
            _this.jobHistory = jobHistory;
        });
    };
    JobHistoryMySuffixDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    JobHistoryMySuffixDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return JobHistoryMySuffixDetailComponent;
}());
JobHistoryMySuffixDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-job-history-my-suffix-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix-detail.component.html")
    }),
    __metadata("design:paramtypes", [job_history_my_suffix_service_1.JobHistoryMySuffixService,
        router_1.ActivatedRoute])
], JobHistoryMySuffixDetailComponent);
exports.JobHistoryMySuffixDetailComponent = JobHistoryMySuffixDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/job-history/job-history-my-suffix-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"myJobHistoryLabel\">Create or edit a Job History</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!jobHistory.id\">\n            <label for=\"id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"jobHistory.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_startDate\">Start Date</label>\n            <div class=\"d-flex\">\n                <input id=\"field_startDate\" type=\"datetime-local\" class=\"form-control\" name=\"startDate\" [(ngModel)]=\"jobHistory.startDate\"\n                  />\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_endDate\">End Date</label>\n            <div class=\"d-flex\">\n                <input id=\"field_endDate\" type=\"datetime-local\" class=\"form-control\" name=\"endDate\" [(ngModel)]=\"jobHistory.endDate\"\n                  />\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_language\">Language</label>\n            <select class=\"form-control\" name=\"language\" [(ngModel)]=\"jobHistory.language\" id=\"field_language\" >\n                <option value=\"FRENCH\">FRENCH</option>\n                <option value=\"ENGLISH\">ENGLISH</option>\n                <option value=\"SPANISH\">SPANISH</option>\n            </select>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"field_job\">Job</label>\n            <select class=\"form-control\" id=\"field_job\" name=\"job\" [(ngModel)]=\"jobHistory.jobId\">\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"jobOption.id\" *ngFor=\"let jobOption of jobs; trackBy: trackJobById\">{{jobOption.id}}</option>\n            </select>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"field_department\">Department</label>\n            <select class=\"form-control\" id=\"field_department\" name=\"department\" [(ngModel)]=\"jobHistory.departmentId\">\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"departmentOption.id\" *ngFor=\"let departmentOption of departments; trackBy: trackDepartmentById\">{{departmentOption.id}}</option>\n            </select>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"field_employee\">Employee</label>\n            <select class=\"form-control\" id=\"field_employee\" name=\"employee\" [(ngModel)]=\"jobHistory.employeeId\">\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"employeeOption.id\" *ngFor=\"let employeeOption of employees; trackBy: trackEmployeeById\">{{employeeOption.id}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span>Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span>Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/job-history/job-history-my-suffix-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var job_history_my_suffix_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix-popup.service.ts");
var job_history_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix.service.ts");
var job_1 = __webpack_require__("./src/main/webapp/app/entities/job/index.ts");
var department_1 = __webpack_require__("./src/main/webapp/app/entities/department/index.ts");
var employee_1 = __webpack_require__("./src/main/webapp/app/entities/employee/index.ts");
var JobHistoryMySuffixDialogComponent = (function () {
    function JobHistoryMySuffixDialogComponent(activeModal, alertService, jobHistoryService, jobService, departmentService, employeeService, eventManager) {
        this.activeModal = activeModal;
        this.alertService = alertService;
        this.jobHistoryService = jobHistoryService;
        this.jobService = jobService;
        this.departmentService = departmentService;
        this.employeeService = employeeService;
        this.eventManager = eventManager;
    }
    JobHistoryMySuffixDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.jobService.query({ filter: 'jobhistory-is-null' }).subscribe(function (res) {
            if (!_this.jobHistory.jobId) {
                _this.jobs = res.json();
            }
            else {
                _this.jobService.find(_this.jobHistory.jobId).subscribe(function (subRes) {
                    _this.jobs = [subRes].concat(res.json());
                }, function (subRes) { return _this.onError(subRes.json()); });
            }
        }, function (res) { return _this.onError(res.json()); });
        this.departmentService.query({ filter: 'jobhistory-is-null' }).subscribe(function (res) {
            if (!_this.jobHistory.departmentId) {
                _this.departments = res.json();
            }
            else {
                _this.departmentService.find(_this.jobHistory.departmentId).subscribe(function (subRes) {
                    _this.departments = [subRes].concat(res.json());
                }, function (subRes) { return _this.onError(subRes.json()); });
            }
        }, function (res) { return _this.onError(res.json()); });
        this.employeeService.query({ filter: 'jobhistory-is-null' }).subscribe(function (res) {
            if (!_this.jobHistory.employeeId) {
                _this.employees = res.json();
            }
            else {
                _this.employeeService.find(_this.jobHistory.employeeId).subscribe(function (subRes) {
                    _this.employees = [subRes].concat(res.json());
                }, function (subRes) { return _this.onError(subRes.json()); });
            }
        }, function (res) { return _this.onError(res.json()); });
    };
    JobHistoryMySuffixDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    JobHistoryMySuffixDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.jobHistory.id !== undefined) {
            this.jobHistoryService.update(this.jobHistory)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.jobHistoryService.create(this.jobHistory)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    JobHistoryMySuffixDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'jobHistoryListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    JobHistoryMySuffixDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    JobHistoryMySuffixDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    JobHistoryMySuffixDialogComponent.prototype.trackJobById = function (index, item) {
        return item.id;
    };
    JobHistoryMySuffixDialogComponent.prototype.trackDepartmentById = function (index, item) {
        return item.id;
    };
    JobHistoryMySuffixDialogComponent.prototype.trackEmployeeById = function (index, item) {
        return item.id;
    };
    return JobHistoryMySuffixDialogComponent;
}());
JobHistoryMySuffixDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-job-history-my-suffix-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.AlertService,
        job_history_my_suffix_service_1.JobHistoryMySuffixService,
        job_1.JobMySuffixService,
        department_1.DepartmentMySuffixService,
        employee_1.EmployeeMySuffixService,
        ng_jhipster_1.EventManager])
], JobHistoryMySuffixDialogComponent);
exports.JobHistoryMySuffixDialogComponent = JobHistoryMySuffixDialogComponent;
var JobHistoryMySuffixPopupComponent = (function () {
    function JobHistoryMySuffixPopupComponent(route, jobHistoryPopupService) {
        this.route = route;
        this.jobHistoryPopupService = jobHistoryPopupService;
    }
    JobHistoryMySuffixPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.jobHistoryPopupService
                    .open(JobHistoryMySuffixDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.jobHistoryPopupService
                    .open(JobHistoryMySuffixDialogComponent);
            }
        });
    };
    JobHistoryMySuffixPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return JobHistoryMySuffixPopupComponent;
}());
JobHistoryMySuffixPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-job-history-my-suffix-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        job_history_my_suffix_popup_service_1.JobHistoryMySuffixPopupService])
], JobHistoryMySuffixPopupComponent);
exports.JobHistoryMySuffixPopupComponent = JobHistoryMySuffixPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/job-history/job-history-my-suffix-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var common_1 = __webpack_require__(6);
var job_history_my_suffix_model_1 = __webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix.model.ts");
var job_history_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix.service.ts");
var JobHistoryMySuffixPopupService = (function () {
    function JobHistoryMySuffixPopupService(datePipe, modalService, router, jobHistoryService) {
        this.datePipe = datePipe;
        this.modalService = modalService;
        this.router = router;
        this.jobHistoryService = jobHistoryService;
        this.isOpen = false;
    }
    JobHistoryMySuffixPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.jobHistoryService.find(id).subscribe(function (jobHistory) {
                jobHistory.startDate = _this.datePipe.transform(jobHistory.startDate, 'yyyy-MM-ddThh:mm');
                jobHistory.endDate = _this.datePipe.transform(jobHistory.endDate, 'yyyy-MM-ddThh:mm');
                _this.jobHistoryModalRef(component, jobHistory);
            });
        }
        else {
            return this.jobHistoryModalRef(component, new job_history_my_suffix_model_1.JobHistoryMySuffix());
        }
    };
    JobHistoryMySuffixPopupService.prototype.jobHistoryModalRef = function (component, jobHistory) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.jobHistory = jobHistory;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return JobHistoryMySuffixPopupService;
}());
JobHistoryMySuffixPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [common_1.DatePipe,
        ng_bootstrap_1.NgbModal,
        router_1.Router,
        job_history_my_suffix_service_1.JobHistoryMySuffixService])
], JobHistoryMySuffixPopupService);
exports.JobHistoryMySuffixPopupService = JobHistoryMySuffixPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/job-history/job-history-my-suffix.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2>\n        <span>Job Histories</span>\n        <button class=\"btn btn-primary float-right create-job-history-my-suffix\" [routerLink]=\"['/', { outlets: { popup: ['job-history-my-suffix-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span >\n            Create new Job History\n            </span>\n        </button>\n    </h2>\n    <jhi-alert></jhi-alert>\n    <div class=\"row\">\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"jobHistories\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"reset.bind(this)\">\n            <th jhiSortBy=\"id\"><span>ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"startDate\"><span>Start Date</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"endDate\"><span>End Date</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"language\"><span>Language</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"jobId\"><span>Job</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"departmentId\"><span>Department</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"employeeId\"><span>Employee</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody infinite-scroll (scrolled)=\"loadPage(page + 1)\" [infiniteScrollDisabled]=\"page >= links['last']\" [infiniteScrollDistance]=\"0\">\n            <tr *ngFor=\"let jobHistory of jobHistories ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../job-history-my-suffix', jobHistory.id ]\">{{jobHistory.id}}</a></td>\n                <td>{{jobHistory.startDate | date:'medium'}}</td>\n                <td>{{jobHistory.endDate | date:'medium'}}</td>\n                <td>{{jobHistory.language}}</td>\n                <td>\n                    <div *ngIf=\"jobHistory.jobId\">\n                        <a [routerLink]=\"['../job-my-suffix', jobHistory.jobId  ]\" >{{jobHistory.jobId}}</a>\n                    </div>\n                </td>\n                <td>\n                    <div *ngIf=\"jobHistory.departmentId\">\n                        <a [routerLink]=\"['../department-my-suffix', jobHistory.departmentId  ]\" >{{jobHistory.departmentId}}</a>\n                    </div>\n                </td>\n                <td>\n                    <div *ngIf=\"jobHistory.employeeId\">\n                        <a [routerLink]=\"['../employee-my-suffix', jobHistory.employeeId  ]\" >{{jobHistory.employeeId}}</a>\n                    </div>\n                </td>\n                <td class=\"text-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../job-history-my-suffix', jobHistory.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'job-history-my-suffix/'+ jobHistory.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'job-history-my-suffix/'+ jobHistory.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/job-history/job-history-my-suffix.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var job_history_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var JobHistoryMySuffixComponent = (function () {
    function JobHistoryMySuffixComponent(jobHistoryService, alertService, eventManager, parseLinks, principal) {
        this.jobHistoryService = jobHistoryService;
        this.alertService = alertService;
        this.eventManager = eventManager;
        this.parseLinks = parseLinks;
        this.principal = principal;
        this.jobHistories = [];
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.page = 0;
        this.links = {
            last: 0
        };
        this.predicate = 'id';
        this.reverse = true;
    }
    JobHistoryMySuffixComponent.prototype.loadAll = function () {
        var _this = this;
        this.jobHistoryService.query({
            page: this.page,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    JobHistoryMySuffixComponent.prototype.reset = function () {
        this.page = 0;
        this.jobHistories = [];
        this.loadAll();
    };
    JobHistoryMySuffixComponent.prototype.loadPage = function (page) {
        this.page = page;
        this.loadAll();
    };
    JobHistoryMySuffixComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInJobHistories();
    };
    JobHistoryMySuffixComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    JobHistoryMySuffixComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    JobHistoryMySuffixComponent.prototype.registerChangeInJobHistories = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('jobHistoryListModification', function (response) { return _this.reset(); });
    };
    JobHistoryMySuffixComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    JobHistoryMySuffixComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        for (var i = 0; i < data.length; i++) {
            this.jobHistories.push(data[i]);
        }
    };
    JobHistoryMySuffixComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return JobHistoryMySuffixComponent;
}());
JobHistoryMySuffixComponent = __decorate([
    core_1.Component({
        selector: 'jhi-job-history-my-suffix',
        template: __webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix.component.html")
    }),
    __metadata("design:paramtypes", [job_history_my_suffix_service_1.JobHistoryMySuffixService,
        ng_jhipster_1.AlertService,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.ParseLinks,
        shared_1.Principal])
], JobHistoryMySuffixComponent);
exports.JobHistoryMySuffixComponent = JobHistoryMySuffixComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/job-history/job-history-my-suffix.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

;
var JobHistoryMySuffix = (function () {
    function JobHistoryMySuffix(id, startDate, endDate, language, jobId, departmentId, employeeId) {
        this.id = id;
        this.startDate = startDate;
        this.endDate = endDate;
        this.language = language;
        this.jobId = jobId;
        this.departmentId = departmentId;
        this.employeeId = employeeId;
    }
    return JobHistoryMySuffix;
}());
exports.JobHistoryMySuffix = JobHistoryMySuffix;


/***/ }),

/***/ "./src/main/webapp/app/entities/job-history/job-history-my-suffix.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/job-history/index.ts");
var ENTITY_STATES = _1.jobHistoryRoute.concat(_1.jobHistoryPopupRoute);
var App1JobHistoryMySuffixModule = (function () {
    function App1JobHistoryMySuffixModule() {
    }
    return App1JobHistoryMySuffixModule;
}());
App1JobHistoryMySuffixModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.App1SharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.JobHistoryMySuffixComponent,
            _1.JobHistoryMySuffixDetailComponent,
            _1.JobHistoryMySuffixDialogComponent,
            _1.JobHistoryMySuffixDeleteDialogComponent,
            _1.JobHistoryMySuffixPopupComponent,
            _1.JobHistoryMySuffixDeletePopupComponent,
        ],
        entryComponents: [
            _1.JobHistoryMySuffixComponent,
            _1.JobHistoryMySuffixDialogComponent,
            _1.JobHistoryMySuffixPopupComponent,
            _1.JobHistoryMySuffixDeleteDialogComponent,
            _1.JobHistoryMySuffixDeletePopupComponent,
        ],
        providers: [
            _1.JobHistoryMySuffixService,
            _1.JobHistoryMySuffixPopupService,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], App1JobHistoryMySuffixModule);
exports.App1JobHistoryMySuffixModule = App1JobHistoryMySuffixModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/job-history/job-history-my-suffix.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var job_history_my_suffix_component_1 = __webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix.component.ts");
var job_history_my_suffix_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix-detail.component.ts");
var job_history_my_suffix_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix-dialog.component.ts");
var job_history_my_suffix_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/job-history/job-history-my-suffix-delete-dialog.component.ts");
exports.jobHistoryRoute = [
    {
        path: 'job-history-my-suffix',
        component: job_history_my_suffix_component_1.JobHistoryMySuffixComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'JobHistories'
        }
    }, {
        path: 'job-history-my-suffix/:id',
        component: job_history_my_suffix_detail_component_1.JobHistoryMySuffixDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'JobHistories'
        }
    }
];
exports.jobHistoryPopupRoute = [
    {
        path: 'job-history-my-suffix-new',
        component: job_history_my_suffix_dialog_component_1.JobHistoryMySuffixPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'JobHistories'
        },
        outlet: 'popup'
    },
    {
        path: 'job-history-my-suffix/:id/edit',
        component: job_history_my_suffix_dialog_component_1.JobHistoryMySuffixPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'JobHistories'
        },
        outlet: 'popup'
    },
    {
        path: 'job-history-my-suffix/:id/delete',
        component: job_history_my_suffix_delete_dialog_component_1.JobHistoryMySuffixDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'JobHistories'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/job-history/job-history-my-suffix.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var ng_jhipster_1 = __webpack_require__(2);
var JobHistoryMySuffixService = (function () {
    function JobHistoryMySuffixService(http, dateUtils) {
        this.http = http;
        this.dateUtils = dateUtils;
        this.resourceUrl = 'api/job-histories';
    }
    JobHistoryMySuffixService.prototype.create = function (jobHistory) {
        var copy = Object.assign({}, jobHistory);
        copy.startDate = this.dateUtils.toDate(jobHistory.startDate);
        copy.endDate = this.dateUtils.toDate(jobHistory.endDate);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    JobHistoryMySuffixService.prototype.update = function (jobHistory) {
        var copy = Object.assign({}, jobHistory);
        copy.startDate = this.dateUtils.toDate(jobHistory.startDate);
        copy.endDate = this.dateUtils.toDate(jobHistory.endDate);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    JobHistoryMySuffixService.prototype.find = function (id) {
        var _this = this;
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            var jsonResponse = res.json();
            jsonResponse.startDate = _this.dateUtils
                .convertDateTimeFromServer(jsonResponse.startDate);
            jsonResponse.endDate = _this.dateUtils
                .convertDateTimeFromServer(jsonResponse.endDate);
            return jsonResponse;
        });
    };
    JobHistoryMySuffixService.prototype.query = function (req) {
        var _this = this;
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options)
            .map(function (res) { return _this.convertResponse(res); });
    };
    JobHistoryMySuffixService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    JobHistoryMySuffixService.prototype.convertResponse = function (res) {
        var jsonResponse = res.json();
        for (var i = 0; i < jsonResponse.length; i++) {
            jsonResponse[i].startDate = this.dateUtils
                .convertDateTimeFromServer(jsonResponse[i].startDate);
            jsonResponse[i].endDate = this.dateUtils
                .convertDateTimeFromServer(jsonResponse[i].endDate);
        }
        res._body = jsonResponse;
        return res;
    };
    JobHistoryMySuffixService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return JobHistoryMySuffixService;
}());
JobHistoryMySuffixService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http, ng_jhipster_1.DateUtils])
], JobHistoryMySuffixService);
exports.JobHistoryMySuffixService = JobHistoryMySuffixService;


/***/ }),

/***/ "./src/main/webapp/app/entities/job/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/job/job-my-suffix-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(job.id)\">\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Confirm delete operation</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p>Are you sure you want to delete this Job?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span>Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span>Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/job/job-my-suffix-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var job_my_suffix_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix-popup.service.ts");
var job_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix.service.ts");
var JobMySuffixDeleteDialogComponent = (function () {
    function JobMySuffixDeleteDialogComponent(jobService, activeModal, eventManager) {
        this.jobService = jobService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
    }
    JobMySuffixDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    JobMySuffixDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.jobService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'jobListModification',
                content: 'Deleted an job'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return JobMySuffixDeleteDialogComponent;
}());
JobMySuffixDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-job-my-suffix-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [job_my_suffix_service_1.JobMySuffixService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], JobMySuffixDeleteDialogComponent);
exports.JobMySuffixDeleteDialogComponent = JobMySuffixDeleteDialogComponent;
var JobMySuffixDeletePopupComponent = (function () {
    function JobMySuffixDeletePopupComponent(route, jobPopupService) {
        this.route = route;
        this.jobPopupService = jobPopupService;
    }
    JobMySuffixDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.jobPopupService
                .open(JobMySuffixDeleteDialogComponent, params['id']);
        });
    };
    JobMySuffixDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return JobMySuffixDeletePopupComponent;
}());
JobMySuffixDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-job-my-suffix-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        job_my_suffix_popup_service_1.JobMySuffixPopupService])
], JobMySuffixDeletePopupComponent);
exports.JobMySuffixDeletePopupComponent = JobMySuffixDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/job/job-my-suffix-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"job\">\n    <h2><span>Job</span> {{job.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row-md jh-entity-details\">\n        <dt><span>Job Title</span></dt>\n        <dd>\n            <span>{{job.jobTitle}}</span>\n        </dd>\n        <dt><span>Min Salary</span></dt>\n        <dd>\n            <span>{{job.minSalary}}</span>\n        </dd>\n        <dt><span>Max Salary</span></dt>\n        <dd>\n            <span>{{job.maxSalary}}</span>\n        </dd>\n        <dt><span>Employee</span></dt>\n        <dd>\n            <div *ngIf=\"job.employeeId\">\n                <a [routerLink]=\"['/employee-my-suffix', job.employeeId]\">{{job.employeeId}}</a>\n            </div>\n        </dd>\n        <dt><span>Task</span></dt>\n        <dd>\n            <span *ngFor=\"let task of job.tasks; let last = last\">\n                <a [routerLink]=\"['/task-my-suffix', task?.id ]\">{{task.title}}</a>{{last ? '' : ', '}}\n            </span>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'job-my-suffix/'+ job.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/job/job-my-suffix-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var job_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix.service.ts");
var JobMySuffixDetailComponent = (function () {
    function JobMySuffixDetailComponent(jobService, route) {
        this.jobService = jobService;
        this.route = route;
    }
    JobMySuffixDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    JobMySuffixDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.jobService.find(id).subscribe(function (job) {
            _this.job = job;
        });
    };
    JobMySuffixDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    JobMySuffixDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return JobMySuffixDetailComponent;
}());
JobMySuffixDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-job-my-suffix-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix-detail.component.html")
    }),
    __metadata("design:paramtypes", [job_my_suffix_service_1.JobMySuffixService,
        router_1.ActivatedRoute])
], JobMySuffixDetailComponent);
exports.JobMySuffixDetailComponent = JobMySuffixDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/job/job-my-suffix-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"myJobLabel\">Create or edit a Job</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!job.id\">\n            <label for=\"id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"job.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_jobTitle\">Job Title</label>\n            <input type=\"text\" class=\"form-control\" name=\"jobTitle\" id=\"field_jobTitle\"\n                [(ngModel)]=\"job.jobTitle\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_minSalary\">Min Salary</label>\n            <input type=\"number\" class=\"form-control\" name=\"minSalary\" id=\"field_minSalary\"\n                [(ngModel)]=\"job.minSalary\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_maxSalary\">Max Salary</label>\n            <input type=\"number\" class=\"form-control\" name=\"maxSalary\" id=\"field_maxSalary\"\n                [(ngModel)]=\"job.maxSalary\"\n             />\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"field_employee\">Employee</label>\n            <select class=\"form-control\" id=\"field_employee\" name=\"employee\" [(ngModel)]=\"job.employeeId\" >\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"employeeOption.id\" *ngFor=\"let employeeOption of employees; trackBy: trackEmployeeById\">{{employeeOption.id}}</option>\n            </select>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"field_task\">Task</label>\n            <select class=\"form-control\" id=\"field_task\" multiple name=\"task\" [(ngModel)]=\"job.tasks\">\n                <option [ngValue]=\"getSelected(job.tasks, taskOption)\" *ngFor=\"let taskOption of tasks; trackBy: trackTaskById\">{{taskOption.title}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span>Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span>Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/job/job-my-suffix-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var job_my_suffix_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix-popup.service.ts");
var job_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix.service.ts");
var employee_1 = __webpack_require__("./src/main/webapp/app/entities/employee/index.ts");
var task_1 = __webpack_require__("./src/main/webapp/app/entities/task/index.ts");
var JobMySuffixDialogComponent = (function () {
    function JobMySuffixDialogComponent(activeModal, alertService, jobService, employeeService, taskService, eventManager) {
        this.activeModal = activeModal;
        this.alertService = alertService;
        this.jobService = jobService;
        this.employeeService = employeeService;
        this.taskService = taskService;
        this.eventManager = eventManager;
    }
    JobMySuffixDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.employeeService.query().subscribe(function (res) { _this.employees = res.json(); }, function (res) { return _this.onError(res.json()); });
        this.taskService.query().subscribe(function (res) { _this.tasks = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    JobMySuffixDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    JobMySuffixDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.job.id !== undefined) {
            this.jobService.update(this.job)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.jobService.create(this.job)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    JobMySuffixDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'jobListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    JobMySuffixDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    JobMySuffixDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    JobMySuffixDialogComponent.prototype.trackEmployeeById = function (index, item) {
        return item.id;
    };
    JobMySuffixDialogComponent.prototype.trackTaskById = function (index, item) {
        return item.id;
    };
    JobMySuffixDialogComponent.prototype.getSelected = function (selectedVals, option) {
        if (selectedVals) {
            for (var i = 0; i < selectedVals.length; i++) {
                if (option.id === selectedVals[i].id) {
                    return selectedVals[i];
                }
            }
        }
        return option;
    };
    return JobMySuffixDialogComponent;
}());
JobMySuffixDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-job-my-suffix-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.AlertService,
        job_my_suffix_service_1.JobMySuffixService,
        employee_1.EmployeeMySuffixService,
        task_1.TaskMySuffixService,
        ng_jhipster_1.EventManager])
], JobMySuffixDialogComponent);
exports.JobMySuffixDialogComponent = JobMySuffixDialogComponent;
var JobMySuffixPopupComponent = (function () {
    function JobMySuffixPopupComponent(route, jobPopupService) {
        this.route = route;
        this.jobPopupService = jobPopupService;
    }
    JobMySuffixPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.jobPopupService
                    .open(JobMySuffixDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.jobPopupService
                    .open(JobMySuffixDialogComponent);
            }
        });
    };
    JobMySuffixPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return JobMySuffixPopupComponent;
}());
JobMySuffixPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-job-my-suffix-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        job_my_suffix_popup_service_1.JobMySuffixPopupService])
], JobMySuffixPopupComponent);
exports.JobMySuffixPopupComponent = JobMySuffixPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/job/job-my-suffix-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var job_my_suffix_model_1 = __webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix.model.ts");
var job_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix.service.ts");
var JobMySuffixPopupService = (function () {
    function JobMySuffixPopupService(modalService, router, jobService) {
        this.modalService = modalService;
        this.router = router;
        this.jobService = jobService;
        this.isOpen = false;
    }
    JobMySuffixPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.jobService.find(id).subscribe(function (job) {
                _this.jobModalRef(component, job);
            });
        }
        else {
            return this.jobModalRef(component, new job_my_suffix_model_1.JobMySuffix());
        }
    };
    JobMySuffixPopupService.prototype.jobModalRef = function (component, job) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.job = job;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return JobMySuffixPopupService;
}());
JobMySuffixPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        job_my_suffix_service_1.JobMySuffixService])
], JobMySuffixPopupService);
exports.JobMySuffixPopupService = JobMySuffixPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/job/job-my-suffix.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2>\n        <span>Jobs</span>\n        <button class=\"btn btn-primary float-right create-job-my-suffix\" [routerLink]=\"['/', { outlets: { popup: ['job-my-suffix-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span >\n            Create new Job\n            </span>\n        </button>\n    </h2>\n    <jhi-alert></jhi-alert>\n    <div class=\"row\">\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"jobs\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span>ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"jobTitle\"><span>Job Title</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"minSalary\"><span>Min Salary</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"maxSalary\"><span>Max Salary</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"employeeId\"><span>Employee</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let job of jobs ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../job-my-suffix', job.id ]\">{{job.id}}</a></td>\n                <td>{{job.jobTitle}}</td>\n                <td>{{job.minSalary}}</td>\n                <td>{{job.maxSalary}}</td>\n                <td>\n                    <div *ngIf=\"job.employeeId\">\n                        <a [routerLink]=\"['../employee-my-suffix', job.employeeId  ]\" >{{job.employeeId}}</a>\n                    </div>\n                </td>\n                <td class=\"text-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../job-my-suffix', job.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'job-my-suffix/'+ job.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'job-my-suffix/'+ job.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n        <div *ngIf=\"jobs && jobs.length\">\n            <div class=\"row justify-content-center\">\n                <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            </div>\n            <div class=\"row justify-content-center\">\n                <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\" (pageChange)=\"loadPage(page)\"></ngb-pagination>\n            </div>\n        </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/job/job-my-suffix.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var job_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var JobMySuffixComponent = (function () {
    function JobMySuffixComponent(jobService, parseLinks, alertService, principal, activatedRoute, router, eventManager, paginationUtil, paginationConfig) {
        var _this = this;
        this.jobService = jobService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
    }
    JobMySuffixComponent.prototype.loadAll = function () {
        var _this = this;
        this.jobService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    JobMySuffixComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    JobMySuffixComponent.prototype.transition = function () {
        this.router.navigate(['/job-my-suffix'], { queryParams: {
                page: this.page,
                size: this.itemsPerPage,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    JobMySuffixComponent.prototype.clear = function () {
        this.page = 0;
        this.router.navigate(['/job-my-suffix', {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    JobMySuffixComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInJobs();
    };
    JobMySuffixComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    JobMySuffixComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    JobMySuffixComponent.prototype.registerChangeInJobs = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('jobListModification', function (response) { return _this.loadAll(); });
    };
    JobMySuffixComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    JobMySuffixComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        // this.page = pagingParams.page;
        this.jobs = data;
    };
    JobMySuffixComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return JobMySuffixComponent;
}());
JobMySuffixComponent = __decorate([
    core_1.Component({
        selector: 'jhi-job-my-suffix',
        template: __webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix.component.html")
    }),
    __metadata("design:paramtypes", [job_my_suffix_service_1.JobMySuffixService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        router_1.ActivatedRoute,
        router_1.Router,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig])
], JobMySuffixComponent);
exports.JobMySuffixComponent = JobMySuffixComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/job/job-my-suffix.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var JobMySuffix = (function () {
    function JobMySuffix(id, jobTitle, minSalary, maxSalary, employeeId, taskId) {
        this.id = id;
        this.jobTitle = jobTitle;
        this.minSalary = minSalary;
        this.maxSalary = maxSalary;
        this.employeeId = employeeId;
        this.taskId = taskId;
    }
    return JobMySuffix;
}());
exports.JobMySuffix = JobMySuffix;


/***/ }),

/***/ "./src/main/webapp/app/entities/job/job-my-suffix.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/job/index.ts");
var ENTITY_STATES = _1.jobRoute.concat(_1.jobPopupRoute);
var App1JobMySuffixModule = (function () {
    function App1JobMySuffixModule() {
    }
    return App1JobMySuffixModule;
}());
App1JobMySuffixModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.App1SharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.JobMySuffixComponent,
            _1.JobMySuffixDetailComponent,
            _1.JobMySuffixDialogComponent,
            _1.JobMySuffixDeleteDialogComponent,
            _1.JobMySuffixPopupComponent,
            _1.JobMySuffixDeletePopupComponent,
        ],
        entryComponents: [
            _1.JobMySuffixComponent,
            _1.JobMySuffixDialogComponent,
            _1.JobMySuffixPopupComponent,
            _1.JobMySuffixDeleteDialogComponent,
            _1.JobMySuffixDeletePopupComponent,
        ],
        providers: [
            _1.JobMySuffixService,
            _1.JobMySuffixPopupService,
            _1.JobMySuffixResolvePagingParams,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], App1JobMySuffixModule);
exports.App1JobMySuffixModule = App1JobMySuffixModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/job/job-my-suffix.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var job_my_suffix_component_1 = __webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix.component.ts");
var job_my_suffix_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix-detail.component.ts");
var job_my_suffix_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix-dialog.component.ts");
var job_my_suffix_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/job/job-my-suffix-delete-dialog.component.ts");
var JobMySuffixResolvePagingParams = (function () {
    function JobMySuffixResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    JobMySuffixResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return JobMySuffixResolvePagingParams;
}());
JobMySuffixResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], JobMySuffixResolvePagingParams);
exports.JobMySuffixResolvePagingParams = JobMySuffixResolvePagingParams;
exports.jobRoute = [
    {
        path: 'job-my-suffix',
        component: job_my_suffix_component_1.JobMySuffixComponent,
        resolve: {
            'pagingParams': JobMySuffixResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Jobs'
        }
    }, {
        path: 'job-my-suffix/:id',
        component: job_my_suffix_detail_component_1.JobMySuffixDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Jobs'
        }
    }
];
exports.jobPopupRoute = [
    {
        path: 'job-my-suffix-new',
        component: job_my_suffix_dialog_component_1.JobMySuffixPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Jobs'
        },
        outlet: 'popup'
    },
    {
        path: 'job-my-suffix/:id/edit',
        component: job_my_suffix_dialog_component_1.JobMySuffixPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Jobs'
        },
        outlet: 'popup'
    },
    {
        path: 'job-my-suffix/:id/delete',
        component: job_my_suffix_delete_dialog_component_1.JobMySuffixDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Jobs'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/job/job-my-suffix.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var JobMySuffixService = (function () {
    function JobMySuffixService(http) {
        this.http = http;
        this.resourceUrl = 'api/jobs';
    }
    JobMySuffixService.prototype.create = function (job) {
        var copy = Object.assign({}, job);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    JobMySuffixService.prototype.update = function (job) {
        var copy = Object.assign({}, job);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    JobMySuffixService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    JobMySuffixService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    JobMySuffixService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    JobMySuffixService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return JobMySuffixService;
}());
JobMySuffixService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], JobMySuffixService);
exports.JobMySuffixService = JobMySuffixService;


/***/ }),

/***/ "./src/main/webapp/app/entities/location/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/location/location-my-suffix-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(location.id)\">\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Confirm delete operation</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p>Are you sure you want to delete this Location?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span>Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span>Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/location/location-my-suffix-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var location_my_suffix_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix-popup.service.ts");
var location_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix.service.ts");
var LocationMySuffixDeleteDialogComponent = (function () {
    function LocationMySuffixDeleteDialogComponent(locationService, activeModal, eventManager) {
        this.locationService = locationService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
    }
    LocationMySuffixDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    LocationMySuffixDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.locationService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'locationListModification',
                content: 'Deleted an location'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return LocationMySuffixDeleteDialogComponent;
}());
LocationMySuffixDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-location-my-suffix-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [location_my_suffix_service_1.LocationMySuffixService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], LocationMySuffixDeleteDialogComponent);
exports.LocationMySuffixDeleteDialogComponent = LocationMySuffixDeleteDialogComponent;
var LocationMySuffixDeletePopupComponent = (function () {
    function LocationMySuffixDeletePopupComponent(route, locationPopupService) {
        this.route = route;
        this.locationPopupService = locationPopupService;
    }
    LocationMySuffixDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.locationPopupService
                .open(LocationMySuffixDeleteDialogComponent, params['id']);
        });
    };
    LocationMySuffixDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return LocationMySuffixDeletePopupComponent;
}());
LocationMySuffixDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-location-my-suffix-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        location_my_suffix_popup_service_1.LocationMySuffixPopupService])
], LocationMySuffixDeletePopupComponent);
exports.LocationMySuffixDeletePopupComponent = LocationMySuffixDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/location/location-my-suffix-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"location\">\n    <h2><span>Location</span> {{location.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row-md jh-entity-details\">\n        <dt><span>Street Address</span></dt>\n        <dd>\n            <span>{{location.streetAddress}}</span>\n        </dd>\n        <dt><span>Postal Code</span></dt>\n        <dd>\n            <span>{{location.postalCode}}</span>\n        </dd>\n        <dt><span>City</span></dt>\n        <dd>\n            <span>{{location.city}}</span>\n        </dd>\n        <dt><span>State Province</span></dt>\n        <dd>\n            <span>{{location.stateProvince}}</span>\n        </dd>\n        <dt><span>Country</span></dt>\n        <dd>\n            <div *ngIf=\"location.countryId\">\n                <a [routerLink]=\"['/country-my-suffix', location.countryId]\">{{location.countryId}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'location-my-suffix/'+ location.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/location/location-my-suffix-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var location_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix.service.ts");
var LocationMySuffixDetailComponent = (function () {
    function LocationMySuffixDetailComponent(locationService, route) {
        this.locationService = locationService;
        this.route = route;
    }
    LocationMySuffixDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    LocationMySuffixDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.locationService.find(id).subscribe(function (location) {
            _this.location = location;
        });
    };
    LocationMySuffixDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    LocationMySuffixDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return LocationMySuffixDetailComponent;
}());
LocationMySuffixDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-location-my-suffix-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix-detail.component.html")
    }),
    __metadata("design:paramtypes", [location_my_suffix_service_1.LocationMySuffixService,
        router_1.ActivatedRoute])
], LocationMySuffixDetailComponent);
exports.LocationMySuffixDetailComponent = LocationMySuffixDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/location/location-my-suffix-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"myLocationLabel\">Create or edit a Location</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!location.id\">\n            <label for=\"id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"location.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_streetAddress\">Street Address</label>\n            <input type=\"text\" class=\"form-control\" name=\"streetAddress\" id=\"field_streetAddress\"\n                [(ngModel)]=\"location.streetAddress\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_postalCode\">Postal Code</label>\n            <input type=\"text\" class=\"form-control\" name=\"postalCode\" id=\"field_postalCode\"\n                [(ngModel)]=\"location.postalCode\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_city\">City</label>\n            <input type=\"text\" class=\"form-control\" name=\"city\" id=\"field_city\"\n                [(ngModel)]=\"location.city\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_stateProvince\">State Province</label>\n            <input type=\"text\" class=\"form-control\" name=\"stateProvince\" id=\"field_stateProvince\"\n                [(ngModel)]=\"location.stateProvince\"\n             />\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"field_country\">Country</label>\n            <select class=\"form-control\" id=\"field_country\" name=\"country\" [(ngModel)]=\"location.countryId\">\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"countryOption.id\" *ngFor=\"let countryOption of countries; trackBy: trackCountryById\">{{countryOption.id}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span>Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span>Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/location/location-my-suffix-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var location_my_suffix_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix-popup.service.ts");
var location_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix.service.ts");
var country_1 = __webpack_require__("./src/main/webapp/app/entities/country/index.ts");
var LocationMySuffixDialogComponent = (function () {
    function LocationMySuffixDialogComponent(activeModal, alertService, locationService, countryService, eventManager) {
        this.activeModal = activeModal;
        this.alertService = alertService;
        this.locationService = locationService;
        this.countryService = countryService;
        this.eventManager = eventManager;
    }
    LocationMySuffixDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.countryService.query({ filter: 'location-is-null' }).subscribe(function (res) {
            if (!_this.location.countryId) {
                _this.countries = res.json();
            }
            else {
                _this.countryService.find(_this.location.countryId).subscribe(function (subRes) {
                    _this.countries = [subRes].concat(res.json());
                }, function (subRes) { return _this.onError(subRes.json()); });
            }
        }, function (res) { return _this.onError(res.json()); });
    };
    LocationMySuffixDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    LocationMySuffixDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.location.id !== undefined) {
            this.locationService.update(this.location)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.locationService.create(this.location)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    LocationMySuffixDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'locationListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    LocationMySuffixDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    LocationMySuffixDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    LocationMySuffixDialogComponent.prototype.trackCountryById = function (index, item) {
        return item.id;
    };
    return LocationMySuffixDialogComponent;
}());
LocationMySuffixDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-location-my-suffix-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.AlertService,
        location_my_suffix_service_1.LocationMySuffixService,
        country_1.CountryMySuffixService,
        ng_jhipster_1.EventManager])
], LocationMySuffixDialogComponent);
exports.LocationMySuffixDialogComponent = LocationMySuffixDialogComponent;
var LocationMySuffixPopupComponent = (function () {
    function LocationMySuffixPopupComponent(route, locationPopupService) {
        this.route = route;
        this.locationPopupService = locationPopupService;
    }
    LocationMySuffixPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.locationPopupService
                    .open(LocationMySuffixDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.locationPopupService
                    .open(LocationMySuffixDialogComponent);
            }
        });
    };
    LocationMySuffixPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return LocationMySuffixPopupComponent;
}());
LocationMySuffixPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-location-my-suffix-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        location_my_suffix_popup_service_1.LocationMySuffixPopupService])
], LocationMySuffixPopupComponent);
exports.LocationMySuffixPopupComponent = LocationMySuffixPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/location/location-my-suffix-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var location_my_suffix_model_1 = __webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix.model.ts");
var location_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix.service.ts");
var LocationMySuffixPopupService = (function () {
    function LocationMySuffixPopupService(modalService, router, locationService) {
        this.modalService = modalService;
        this.router = router;
        this.locationService = locationService;
        this.isOpen = false;
    }
    LocationMySuffixPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.locationService.find(id).subscribe(function (location) {
                _this.locationModalRef(component, location);
            });
        }
        else {
            return this.locationModalRef(component, new location_my_suffix_model_1.LocationMySuffix());
        }
    };
    LocationMySuffixPopupService.prototype.locationModalRef = function (component, location) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.location = location;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return LocationMySuffixPopupService;
}());
LocationMySuffixPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        location_my_suffix_service_1.LocationMySuffixService])
], LocationMySuffixPopupService);
exports.LocationMySuffixPopupService = LocationMySuffixPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/location/location-my-suffix.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2>\n        <span>Locations</span>\n        <button class=\"btn btn-primary float-right create-location-my-suffix\" [routerLink]=\"['/', { outlets: { popup: ['location-my-suffix-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span >\n            Create new Location\n            </span>\n        </button>\n    </h2>\n    <jhi-alert></jhi-alert>\n    <div class=\"row\">\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"locations\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr>\n            <th><span>ID</span></th>\n            <th><span>Street Address</span></th>\n            <th><span>Postal Code</span></th>\n            <th><span>City</span></th>\n            <th><span>State Province</span></th>\n            <th><span>Country</span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let location of locations ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../location-my-suffix', location.id ]\">{{location.id}}</a></td>\n                <td>{{location.streetAddress}}</td>\n                <td>{{location.postalCode}}</td>\n                <td>{{location.city}}</td>\n                <td>{{location.stateProvince}}</td>\n                <td>\n                    <div *ngIf=\"location.countryId\">\n                        <a [routerLink]=\"['../country-my-suffix', location.countryId  ]\" >{{location.countryId}}</a>\n                    </div>\n                </td>\n                <td class=\"text-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../location-my-suffix', location.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'location-my-suffix/'+ location.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'location-my-suffix/'+ location.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/location/location-my-suffix.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var location_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var LocationMySuffixComponent = (function () {
    function LocationMySuffixComponent(locationService, alertService, eventManager, principal) {
        this.locationService = locationService;
        this.alertService = alertService;
        this.eventManager = eventManager;
        this.principal = principal;
    }
    LocationMySuffixComponent.prototype.loadAll = function () {
        var _this = this;
        this.locationService.query().subscribe(function (res) {
            _this.locations = res.json();
        }, function (res) { return _this.onError(res.json()); });
    };
    LocationMySuffixComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInLocations();
    };
    LocationMySuffixComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    LocationMySuffixComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    LocationMySuffixComponent.prototype.registerChangeInLocations = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('locationListModification', function (response) { return _this.loadAll(); });
    };
    LocationMySuffixComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return LocationMySuffixComponent;
}());
LocationMySuffixComponent = __decorate([
    core_1.Component({
        selector: 'jhi-location-my-suffix',
        template: __webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix.component.html")
    }),
    __metadata("design:paramtypes", [location_my_suffix_service_1.LocationMySuffixService,
        ng_jhipster_1.AlertService,
        ng_jhipster_1.EventManager,
        shared_1.Principal])
], LocationMySuffixComponent);
exports.LocationMySuffixComponent = LocationMySuffixComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/location/location-my-suffix.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LocationMySuffix = (function () {
    function LocationMySuffix(id, streetAddress, postalCode, city, stateProvince, countryId) {
        this.id = id;
        this.streetAddress = streetAddress;
        this.postalCode = postalCode;
        this.city = city;
        this.stateProvince = stateProvince;
        this.countryId = countryId;
    }
    return LocationMySuffix;
}());
exports.LocationMySuffix = LocationMySuffix;


/***/ }),

/***/ "./src/main/webapp/app/entities/location/location-my-suffix.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/location/index.ts");
var ENTITY_STATES = _1.locationRoute.concat(_1.locationPopupRoute);
var App1LocationMySuffixModule = (function () {
    function App1LocationMySuffixModule() {
    }
    return App1LocationMySuffixModule;
}());
App1LocationMySuffixModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.App1SharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.LocationMySuffixComponent,
            _1.LocationMySuffixDetailComponent,
            _1.LocationMySuffixDialogComponent,
            _1.LocationMySuffixDeleteDialogComponent,
            _1.LocationMySuffixPopupComponent,
            _1.LocationMySuffixDeletePopupComponent,
        ],
        entryComponents: [
            _1.LocationMySuffixComponent,
            _1.LocationMySuffixDialogComponent,
            _1.LocationMySuffixPopupComponent,
            _1.LocationMySuffixDeleteDialogComponent,
            _1.LocationMySuffixDeletePopupComponent,
        ],
        providers: [
            _1.LocationMySuffixService,
            _1.LocationMySuffixPopupService,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], App1LocationMySuffixModule);
exports.App1LocationMySuffixModule = App1LocationMySuffixModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/location/location-my-suffix.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var location_my_suffix_component_1 = __webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix.component.ts");
var location_my_suffix_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix-detail.component.ts");
var location_my_suffix_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix-dialog.component.ts");
var location_my_suffix_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/location/location-my-suffix-delete-dialog.component.ts");
exports.locationRoute = [
    {
        path: 'location-my-suffix',
        component: location_my_suffix_component_1.LocationMySuffixComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Locations'
        }
    }, {
        path: 'location-my-suffix/:id',
        component: location_my_suffix_detail_component_1.LocationMySuffixDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Locations'
        }
    }
];
exports.locationPopupRoute = [
    {
        path: 'location-my-suffix-new',
        component: location_my_suffix_dialog_component_1.LocationMySuffixPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Locations'
        },
        outlet: 'popup'
    },
    {
        path: 'location-my-suffix/:id/edit',
        component: location_my_suffix_dialog_component_1.LocationMySuffixPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Locations'
        },
        outlet: 'popup'
    },
    {
        path: 'location-my-suffix/:id/delete',
        component: location_my_suffix_delete_dialog_component_1.LocationMySuffixDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Locations'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/location/location-my-suffix.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var LocationMySuffixService = (function () {
    function LocationMySuffixService(http) {
        this.http = http;
        this.resourceUrl = 'api/locations';
    }
    LocationMySuffixService.prototype.create = function (location) {
        var copy = Object.assign({}, location);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    LocationMySuffixService.prototype.update = function (location) {
        var copy = Object.assign({}, location);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    LocationMySuffixService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    LocationMySuffixService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    LocationMySuffixService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    LocationMySuffixService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return LocationMySuffixService;
}());
LocationMySuffixService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], LocationMySuffixService);
exports.LocationMySuffixService = LocationMySuffixService;


/***/ }),

/***/ "./src/main/webapp/app/entities/region/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/region/region-my-suffix-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(region.id)\">\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Confirm delete operation</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p>Are you sure you want to delete this Region?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span>Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span>Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/region/region-my-suffix-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var region_my_suffix_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix-popup.service.ts");
var region_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix.service.ts");
var RegionMySuffixDeleteDialogComponent = (function () {
    function RegionMySuffixDeleteDialogComponent(regionService, activeModal, eventManager) {
        this.regionService = regionService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
    }
    RegionMySuffixDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    RegionMySuffixDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.regionService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'regionListModification',
                content: 'Deleted an region'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return RegionMySuffixDeleteDialogComponent;
}());
RegionMySuffixDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-region-my-suffix-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [region_my_suffix_service_1.RegionMySuffixService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], RegionMySuffixDeleteDialogComponent);
exports.RegionMySuffixDeleteDialogComponent = RegionMySuffixDeleteDialogComponent;
var RegionMySuffixDeletePopupComponent = (function () {
    function RegionMySuffixDeletePopupComponent(route, regionPopupService) {
        this.route = route;
        this.regionPopupService = regionPopupService;
    }
    RegionMySuffixDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.regionPopupService
                .open(RegionMySuffixDeleteDialogComponent, params['id']);
        });
    };
    RegionMySuffixDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return RegionMySuffixDeletePopupComponent;
}());
RegionMySuffixDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-region-my-suffix-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        region_my_suffix_popup_service_1.RegionMySuffixPopupService])
], RegionMySuffixDeletePopupComponent);
exports.RegionMySuffixDeletePopupComponent = RegionMySuffixDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/region/region-my-suffix-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"region\">\n    <h2><span>Region</span> {{region.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row-md jh-entity-details\">\n        <dt><span>Region Name</span></dt>\n        <dd>\n            <span>{{region.regionName}}</span>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'region-my-suffix/'+ region.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/region/region-my-suffix-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var region_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix.service.ts");
var RegionMySuffixDetailComponent = (function () {
    function RegionMySuffixDetailComponent(regionService, route) {
        this.regionService = regionService;
        this.route = route;
    }
    RegionMySuffixDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    RegionMySuffixDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.regionService.find(id).subscribe(function (region) {
            _this.region = region;
        });
    };
    RegionMySuffixDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    RegionMySuffixDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return RegionMySuffixDetailComponent;
}());
RegionMySuffixDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-region-my-suffix-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix-detail.component.html")
    }),
    __metadata("design:paramtypes", [region_my_suffix_service_1.RegionMySuffixService,
        router_1.ActivatedRoute])
], RegionMySuffixDetailComponent);
exports.RegionMySuffixDetailComponent = RegionMySuffixDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/region/region-my-suffix-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"myRegionLabel\">Create or edit a Region</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!region.id\">\n            <label for=\"id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"region.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_regionName\">Region Name</label>\n            <input type=\"text\" class=\"form-control\" name=\"regionName\" id=\"field_regionName\"\n                [(ngModel)]=\"region.regionName\"\n             />\n        </div>\n\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span>Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span>Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/region/region-my-suffix-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var region_my_suffix_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix-popup.service.ts");
var region_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix.service.ts");
var RegionMySuffixDialogComponent = (function () {
    function RegionMySuffixDialogComponent(activeModal, alertService, regionService, eventManager) {
        this.activeModal = activeModal;
        this.alertService = alertService;
        this.regionService = regionService;
        this.eventManager = eventManager;
    }
    RegionMySuffixDialogComponent.prototype.ngOnInit = function () {
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
    };
    RegionMySuffixDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    RegionMySuffixDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.region.id !== undefined) {
            this.regionService.update(this.region)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.regionService.create(this.region)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    RegionMySuffixDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'regionListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    RegionMySuffixDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    RegionMySuffixDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return RegionMySuffixDialogComponent;
}());
RegionMySuffixDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-region-my-suffix-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.AlertService,
        region_my_suffix_service_1.RegionMySuffixService,
        ng_jhipster_1.EventManager])
], RegionMySuffixDialogComponent);
exports.RegionMySuffixDialogComponent = RegionMySuffixDialogComponent;
var RegionMySuffixPopupComponent = (function () {
    function RegionMySuffixPopupComponent(route, regionPopupService) {
        this.route = route;
        this.regionPopupService = regionPopupService;
    }
    RegionMySuffixPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.regionPopupService
                    .open(RegionMySuffixDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.regionPopupService
                    .open(RegionMySuffixDialogComponent);
            }
        });
    };
    RegionMySuffixPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return RegionMySuffixPopupComponent;
}());
RegionMySuffixPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-region-my-suffix-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        region_my_suffix_popup_service_1.RegionMySuffixPopupService])
], RegionMySuffixPopupComponent);
exports.RegionMySuffixPopupComponent = RegionMySuffixPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/region/region-my-suffix-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var region_my_suffix_model_1 = __webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix.model.ts");
var region_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix.service.ts");
var RegionMySuffixPopupService = (function () {
    function RegionMySuffixPopupService(modalService, router, regionService) {
        this.modalService = modalService;
        this.router = router;
        this.regionService = regionService;
        this.isOpen = false;
    }
    RegionMySuffixPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.regionService.find(id).subscribe(function (region) {
                _this.regionModalRef(component, region);
            });
        }
        else {
            return this.regionModalRef(component, new region_my_suffix_model_1.RegionMySuffix());
        }
    };
    RegionMySuffixPopupService.prototype.regionModalRef = function (component, region) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.region = region;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return RegionMySuffixPopupService;
}());
RegionMySuffixPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        region_my_suffix_service_1.RegionMySuffixService])
], RegionMySuffixPopupService);
exports.RegionMySuffixPopupService = RegionMySuffixPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/region/region-my-suffix.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2>\n        <span>Regions</span>\n        <button class=\"btn btn-primary float-right create-region-my-suffix\" [routerLink]=\"['/', { outlets: { popup: ['region-my-suffix-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span >\n            Create new Region\n            </span>\n        </button>\n    </h2>\n    <jhi-alert></jhi-alert>\n    <div class=\"row\">\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"regions\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr>\n            <th><span>ID</span></th>\n            <th><span>Region Name</span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let region of regions ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../region-my-suffix', region.id ]\">{{region.id}}</a></td>\n                <td>{{region.regionName}}</td>\n                <td class=\"text-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../region-my-suffix', region.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'region-my-suffix/'+ region.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'region-my-suffix/'+ region.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/region/region-my-suffix.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var region_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var RegionMySuffixComponent = (function () {
    function RegionMySuffixComponent(regionService, alertService, eventManager, principal) {
        this.regionService = regionService;
        this.alertService = alertService;
        this.eventManager = eventManager;
        this.principal = principal;
    }
    RegionMySuffixComponent.prototype.loadAll = function () {
        var _this = this;
        this.regionService.query().subscribe(function (res) {
            _this.regions = res.json();
        }, function (res) { return _this.onError(res.json()); });
    };
    RegionMySuffixComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInRegions();
    };
    RegionMySuffixComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    RegionMySuffixComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    RegionMySuffixComponent.prototype.registerChangeInRegions = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('regionListModification', function (response) { return _this.loadAll(); });
    };
    RegionMySuffixComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return RegionMySuffixComponent;
}());
RegionMySuffixComponent = __decorate([
    core_1.Component({
        selector: 'jhi-region-my-suffix',
        template: __webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix.component.html")
    }),
    __metadata("design:paramtypes", [region_my_suffix_service_1.RegionMySuffixService,
        ng_jhipster_1.AlertService,
        ng_jhipster_1.EventManager,
        shared_1.Principal])
], RegionMySuffixComponent);
exports.RegionMySuffixComponent = RegionMySuffixComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/region/region-my-suffix.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var RegionMySuffix = (function () {
    function RegionMySuffix(id, regionName) {
        this.id = id;
        this.regionName = regionName;
    }
    return RegionMySuffix;
}());
exports.RegionMySuffix = RegionMySuffix;


/***/ }),

/***/ "./src/main/webapp/app/entities/region/region-my-suffix.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/region/index.ts");
var ENTITY_STATES = _1.regionRoute.concat(_1.regionPopupRoute);
var App1RegionMySuffixModule = (function () {
    function App1RegionMySuffixModule() {
    }
    return App1RegionMySuffixModule;
}());
App1RegionMySuffixModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.App1SharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.RegionMySuffixComponent,
            _1.RegionMySuffixDetailComponent,
            _1.RegionMySuffixDialogComponent,
            _1.RegionMySuffixDeleteDialogComponent,
            _1.RegionMySuffixPopupComponent,
            _1.RegionMySuffixDeletePopupComponent,
        ],
        entryComponents: [
            _1.RegionMySuffixComponent,
            _1.RegionMySuffixDialogComponent,
            _1.RegionMySuffixPopupComponent,
            _1.RegionMySuffixDeleteDialogComponent,
            _1.RegionMySuffixDeletePopupComponent,
        ],
        providers: [
            _1.RegionMySuffixService,
            _1.RegionMySuffixPopupService,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], App1RegionMySuffixModule);
exports.App1RegionMySuffixModule = App1RegionMySuffixModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/region/region-my-suffix.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var region_my_suffix_component_1 = __webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix.component.ts");
var region_my_suffix_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix-detail.component.ts");
var region_my_suffix_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix-dialog.component.ts");
var region_my_suffix_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/region/region-my-suffix-delete-dialog.component.ts");
exports.regionRoute = [
    {
        path: 'region-my-suffix',
        component: region_my_suffix_component_1.RegionMySuffixComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Regions'
        }
    }, {
        path: 'region-my-suffix/:id',
        component: region_my_suffix_detail_component_1.RegionMySuffixDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Regions'
        }
    }
];
exports.regionPopupRoute = [
    {
        path: 'region-my-suffix-new',
        component: region_my_suffix_dialog_component_1.RegionMySuffixPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Regions'
        },
        outlet: 'popup'
    },
    {
        path: 'region-my-suffix/:id/edit',
        component: region_my_suffix_dialog_component_1.RegionMySuffixPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Regions'
        },
        outlet: 'popup'
    },
    {
        path: 'region-my-suffix/:id/delete',
        component: region_my_suffix_delete_dialog_component_1.RegionMySuffixDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Regions'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/region/region-my-suffix.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var RegionMySuffixService = (function () {
    function RegionMySuffixService(http) {
        this.http = http;
        this.resourceUrl = 'api/regions';
    }
    RegionMySuffixService.prototype.create = function (region) {
        var copy = Object.assign({}, region);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    RegionMySuffixService.prototype.update = function (region) {
        var copy = Object.assign({}, region);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    RegionMySuffixService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    RegionMySuffixService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    RegionMySuffixService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    RegionMySuffixService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return RegionMySuffixService;
}());
RegionMySuffixService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], RegionMySuffixService);
exports.RegionMySuffixService = RegionMySuffixService;


/***/ }),

/***/ "./src/main/webapp/app/entities/task/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/task/task-my-suffix-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(task.id)\">\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Confirm delete operation</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p>Are you sure you want to delete this Task?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span>Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span>Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/task/task-my-suffix-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var task_my_suffix_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix-popup.service.ts");
var task_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix.service.ts");
var TaskMySuffixDeleteDialogComponent = (function () {
    function TaskMySuffixDeleteDialogComponent(taskService, activeModal, eventManager) {
        this.taskService = taskService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
    }
    TaskMySuffixDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    TaskMySuffixDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.taskService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'taskListModification',
                content: 'Deleted an task'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return TaskMySuffixDeleteDialogComponent;
}());
TaskMySuffixDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-task-my-suffix-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [task_my_suffix_service_1.TaskMySuffixService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], TaskMySuffixDeleteDialogComponent);
exports.TaskMySuffixDeleteDialogComponent = TaskMySuffixDeleteDialogComponent;
var TaskMySuffixDeletePopupComponent = (function () {
    function TaskMySuffixDeletePopupComponent(route, taskPopupService) {
        this.route = route;
        this.taskPopupService = taskPopupService;
    }
    TaskMySuffixDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.taskPopupService
                .open(TaskMySuffixDeleteDialogComponent, params['id']);
        });
    };
    TaskMySuffixDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return TaskMySuffixDeletePopupComponent;
}());
TaskMySuffixDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-task-my-suffix-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        task_my_suffix_popup_service_1.TaskMySuffixPopupService])
], TaskMySuffixDeletePopupComponent);
exports.TaskMySuffixDeletePopupComponent = TaskMySuffixDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/task/task-my-suffix-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"task\">\n    <h2><span>Task</span> {{task.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row-md jh-entity-details\">\n        <dt><span>Title</span></dt>\n        <dd>\n            <span>{{task.title}}</span>\n        </dd>\n        <dt><span>Description</span></dt>\n        <dd>\n            <span>{{task.description}}</span>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'task-my-suffix/'+ task.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/task/task-my-suffix-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var task_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix.service.ts");
var TaskMySuffixDetailComponent = (function () {
    function TaskMySuffixDetailComponent(taskService, route) {
        this.taskService = taskService;
        this.route = route;
    }
    TaskMySuffixDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    TaskMySuffixDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.taskService.find(id).subscribe(function (task) {
            _this.task = task;
        });
    };
    TaskMySuffixDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    TaskMySuffixDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return TaskMySuffixDetailComponent;
}());
TaskMySuffixDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-task-my-suffix-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix-detail.component.html")
    }),
    __metadata("design:paramtypes", [task_my_suffix_service_1.TaskMySuffixService,
        router_1.ActivatedRoute])
], TaskMySuffixDetailComponent);
exports.TaskMySuffixDetailComponent = TaskMySuffixDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/task/task-my-suffix-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"myTaskLabel\">Create or edit a Task</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!task.id\">\n            <label for=\"id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"task.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_title\">Title</label>\n            <input type=\"text\" class=\"form-control\" name=\"title\" id=\"field_title\"\n                [(ngModel)]=\"task.title\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" for=\"field_description\">Description</label>\n            <input type=\"text\" class=\"form-control\" name=\"description\" id=\"field_description\"\n                [(ngModel)]=\"task.description\"\n             />\n        </div>\n\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span>Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span>Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/task/task-my-suffix-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var task_my_suffix_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix-popup.service.ts");
var task_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix.service.ts");
var job_1 = __webpack_require__("./src/main/webapp/app/entities/job/index.ts");
var TaskMySuffixDialogComponent = (function () {
    function TaskMySuffixDialogComponent(activeModal, alertService, taskService, jobService, eventManager) {
        this.activeModal = activeModal;
        this.alertService = alertService;
        this.taskService = taskService;
        this.jobService = jobService;
        this.eventManager = eventManager;
    }
    TaskMySuffixDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.jobService.query().subscribe(function (res) { _this.jobs = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    TaskMySuffixDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    TaskMySuffixDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.task.id !== undefined) {
            this.taskService.update(this.task)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.taskService.create(this.task)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    TaskMySuffixDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'taskListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    TaskMySuffixDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    TaskMySuffixDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    TaskMySuffixDialogComponent.prototype.trackJobById = function (index, item) {
        return item.id;
    };
    TaskMySuffixDialogComponent.prototype.getSelected = function (selectedVals, option) {
        if (selectedVals) {
            for (var i = 0; i < selectedVals.length; i++) {
                if (option.id === selectedVals[i].id) {
                    return selectedVals[i];
                }
            }
        }
        return option;
    };
    return TaskMySuffixDialogComponent;
}());
TaskMySuffixDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-task-my-suffix-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.AlertService,
        task_my_suffix_service_1.TaskMySuffixService,
        job_1.JobMySuffixService,
        ng_jhipster_1.EventManager])
], TaskMySuffixDialogComponent);
exports.TaskMySuffixDialogComponent = TaskMySuffixDialogComponent;
var TaskMySuffixPopupComponent = (function () {
    function TaskMySuffixPopupComponent(route, taskPopupService) {
        this.route = route;
        this.taskPopupService = taskPopupService;
    }
    TaskMySuffixPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.taskPopupService
                    .open(TaskMySuffixDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.taskPopupService
                    .open(TaskMySuffixDialogComponent);
            }
        });
    };
    TaskMySuffixPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return TaskMySuffixPopupComponent;
}());
TaskMySuffixPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-task-my-suffix-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        task_my_suffix_popup_service_1.TaskMySuffixPopupService])
], TaskMySuffixPopupComponent);
exports.TaskMySuffixPopupComponent = TaskMySuffixPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/task/task-my-suffix-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var task_my_suffix_model_1 = __webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix.model.ts");
var task_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix.service.ts");
var TaskMySuffixPopupService = (function () {
    function TaskMySuffixPopupService(modalService, router, taskService) {
        this.modalService = modalService;
        this.router = router;
        this.taskService = taskService;
        this.isOpen = false;
    }
    TaskMySuffixPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.taskService.find(id).subscribe(function (task) {
                _this.taskModalRef(component, task);
            });
        }
        else {
            return this.taskModalRef(component, new task_my_suffix_model_1.TaskMySuffix());
        }
    };
    TaskMySuffixPopupService.prototype.taskModalRef = function (component, task) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.task = task;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return TaskMySuffixPopupService;
}());
TaskMySuffixPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        task_my_suffix_service_1.TaskMySuffixService])
], TaskMySuffixPopupService);
exports.TaskMySuffixPopupService = TaskMySuffixPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/task/task-my-suffix.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2>\n        <span>Tasks</span>\n        <button class=\"btn btn-primary float-right create-task-my-suffix\" [routerLink]=\"['/', { outlets: { popup: ['task-my-suffix-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span >\n            Create new Task\n            </span>\n        </button>\n    </h2>\n    <jhi-alert></jhi-alert>\n    <div class=\"row\">\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"tasks\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr>\n            <th><span>ID</span></th>\n            <th><span>Title</span></th>\n            <th><span>Description</span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let task of tasks ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../task-my-suffix', task.id ]\">{{task.id}}</a></td>\n                <td>{{task.title}}</td>\n                <td>{{task.description}}</td>\n                <td class=\"text-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../task-my-suffix', task.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'task-my-suffix/'+ task.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'task-my-suffix/'+ task.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/task/task-my-suffix.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var task_my_suffix_service_1 = __webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var TaskMySuffixComponent = (function () {
    function TaskMySuffixComponent(taskService, alertService, eventManager, principal) {
        this.taskService = taskService;
        this.alertService = alertService;
        this.eventManager = eventManager;
        this.principal = principal;
    }
    TaskMySuffixComponent.prototype.loadAll = function () {
        var _this = this;
        this.taskService.query().subscribe(function (res) {
            _this.tasks = res.json();
        }, function (res) { return _this.onError(res.json()); });
    };
    TaskMySuffixComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInTasks();
    };
    TaskMySuffixComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    TaskMySuffixComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    TaskMySuffixComponent.prototype.registerChangeInTasks = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('taskListModification', function (response) { return _this.loadAll(); });
    };
    TaskMySuffixComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return TaskMySuffixComponent;
}());
TaskMySuffixComponent = __decorate([
    core_1.Component({
        selector: 'jhi-task-my-suffix',
        template: __webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix.component.html")
    }),
    __metadata("design:paramtypes", [task_my_suffix_service_1.TaskMySuffixService,
        ng_jhipster_1.AlertService,
        ng_jhipster_1.EventManager,
        shared_1.Principal])
], TaskMySuffixComponent);
exports.TaskMySuffixComponent = TaskMySuffixComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/task/task-my-suffix.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var TaskMySuffix = (function () {
    function TaskMySuffix(id, title, description, jobId) {
        this.id = id;
        this.title = title;
        this.description = description;
        this.jobId = jobId;
    }
    return TaskMySuffix;
}());
exports.TaskMySuffix = TaskMySuffix;


/***/ }),

/***/ "./src/main/webapp/app/entities/task/task-my-suffix.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/task/index.ts");
var ENTITY_STATES = _1.taskRoute.concat(_1.taskPopupRoute);
var App1TaskMySuffixModule = (function () {
    function App1TaskMySuffixModule() {
    }
    return App1TaskMySuffixModule;
}());
App1TaskMySuffixModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.App1SharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.TaskMySuffixComponent,
            _1.TaskMySuffixDetailComponent,
            _1.TaskMySuffixDialogComponent,
            _1.TaskMySuffixDeleteDialogComponent,
            _1.TaskMySuffixPopupComponent,
            _1.TaskMySuffixDeletePopupComponent,
        ],
        entryComponents: [
            _1.TaskMySuffixComponent,
            _1.TaskMySuffixDialogComponent,
            _1.TaskMySuffixPopupComponent,
            _1.TaskMySuffixDeleteDialogComponent,
            _1.TaskMySuffixDeletePopupComponent,
        ],
        providers: [
            _1.TaskMySuffixService,
            _1.TaskMySuffixPopupService,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], App1TaskMySuffixModule);
exports.App1TaskMySuffixModule = App1TaskMySuffixModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/task/task-my-suffix.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var task_my_suffix_component_1 = __webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix.component.ts");
var task_my_suffix_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix-detail.component.ts");
var task_my_suffix_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix-dialog.component.ts");
var task_my_suffix_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/task/task-my-suffix-delete-dialog.component.ts");
exports.taskRoute = [
    {
        path: 'task-my-suffix',
        component: task_my_suffix_component_1.TaskMySuffixComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Tasks'
        }
    }, {
        path: 'task-my-suffix/:id',
        component: task_my_suffix_detail_component_1.TaskMySuffixDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Tasks'
        }
    }
];
exports.taskPopupRoute = [
    {
        path: 'task-my-suffix-new',
        component: task_my_suffix_dialog_component_1.TaskMySuffixPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Tasks'
        },
        outlet: 'popup'
    },
    {
        path: 'task-my-suffix/:id/edit',
        component: task_my_suffix_dialog_component_1.TaskMySuffixPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Tasks'
        },
        outlet: 'popup'
    },
    {
        path: 'task-my-suffix/:id/delete',
        component: task_my_suffix_delete_dialog_component_1.TaskMySuffixDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'Tasks'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/task/task-my-suffix.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var TaskMySuffixService = (function () {
    function TaskMySuffixService(http) {
        this.http = http;
        this.resourceUrl = 'api/tasks';
    }
    TaskMySuffixService.prototype.create = function (task) {
        var copy = Object.assign({}, task);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    TaskMySuffixService.prototype.update = function (task) {
        var copy = Object.assign({}, task);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    TaskMySuffixService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    TaskMySuffixService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    TaskMySuffixService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    TaskMySuffixService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return TaskMySuffixService;
}());
TaskMySuffixService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], TaskMySuffixService);
exports.TaskMySuffixService = TaskMySuffixService;


/***/ }),

/***/ "./src/main/webapp/app/home/home.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\n    <div class=\"col-md-3\">\n        <span class=\"hipster img-fluid img-rounded\"></span>\n    </div>\n    <div class=\"col-md-9\">\n        <h1 class=\"display-4\">Welcome, Java Hipster!</h1>\n        <p class=\"lead\">This is your homepage</p>\n\n        <div [ngSwitch]=\"isAuthenticated()\">\n            <div class=\"alert alert-success\" *ngSwitchCase=\"true\">\n                <span *ngIf=\"account\"\n                   > You are logged in as user \"{{account.login}}\". </span>\n            </div>\n\n            <div class=\"alert alert-warning\" *ngSwitchCase=\"false\">\n                <span>If you want to </span>\n                <a class=\"alert-link\" (click)=\"login()\">sign in</a><span>, you can try the default accounts:<br/>- Administrator (login=\"admin\" and password=\"admin\") <br/>- User (login=\"user\" and password=\"user\").</span>\n            </div>\n\n            <div class=\"alert alert-warning\" *ngSwitchCase=\"false\">\n                <span>You don't have an account yet?</span>\n                <a class=\"alert-link\" routerLink=\"register\">Register a new account</a>\n            </div>\n        </div>\n\n        <p>\n            If you have any question on JHipster:\n        </p>\n\n        <ul>\n            <li><a href=\"http://jhipster.github.io/\" target=\"_blank\">JHipster homepage</a></li>\n            <li><a href=\"http://stackoverflow.com/tags/jhipster/info\" target=\"_blank\">JHipster on Stack Overflow</a></li>\n            <li><a href=\"https://github.com/jhipster/generator-jhipster/issues?state=open\" target=\"_blank\">JHipster bug tracker</a></li>\n            <li><a href=\"https://gitter.im/jhipster/generator-jhipster\" target=\"_blank\">JHipster public chat room</a></li>\n            <li><a href=\"https://twitter.com/java_hipster\" target=\"_blank\" >follow @java_hipster on Twitter</a></li>\n        </ul>\n\n        <p>\n            <span>If you like JHipster, don't forget to give us a star on</span> <a href=\"https://github.com/jhipster/generator-jhipster\" target=\"_blank\">Github</a>!\n        </p>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/home/home.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var HomeComponent = (function () {
    function HomeComponent(principal, loginModalService, eventManager) {
        this.principal = principal;
        this.loginModalService = loginModalService;
        this.eventManager = eventManager;
    }
    HomeComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.principal.identity().then(function (account) {
            _this.account = account;
        });
        this.registerAuthenticationSuccess();
    };
    HomeComponent.prototype.registerAuthenticationSuccess = function () {
        var _this = this;
        this.eventManager.subscribe('authenticationSuccess', function (message) {
            _this.principal.identity().then(function (account) {
                _this.account = account;
            });
        });
    };
    HomeComponent.prototype.isAuthenticated = function () {
        return this.principal.isAuthenticated();
    };
    HomeComponent.prototype.login = function () {
        this.modalRef = this.loginModalService.open();
    };
    return HomeComponent;
}());
HomeComponent = __decorate([
    core_1.Component({
        selector: 'jhi-home',
        template: __webpack_require__("./src/main/webapp/app/home/home.component.html"),
        styles: [
            __webpack_require__("./src/main/webapp/app/home/home.css")
        ]
    }),
    __metadata("design:paramtypes", [shared_1.Principal,
        shared_1.LoginModalService,
        ng_jhipster_1.EventManager])
], HomeComponent);
exports.HomeComponent = HomeComponent;


/***/ }),

/***/ "./src/main/webapp/app/home/home.css":
/***/ (function(module, exports, __webpack_require__) {


        var result = __webpack_require__("./node_modules/css-loader/index.js!./src/main/webapp/app/home/home.css");

        if (typeof result === "string") {
            module.exports = result;
        } else {
            module.exports = result.toString();
        }
    

/***/ }),

/***/ "./src/main/webapp/app/home/home.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/home/index.ts");
var App1HomeModule = (function () {
    function App1HomeModule() {
    }
    return App1HomeModule;
}());
App1HomeModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.App1SharedModule,
            router_1.RouterModule.forRoot([_1.HOME_ROUTE], { useHash: true })
        ],
        declarations: [
            _1.HomeComponent,
        ],
        entryComponents: [],
        providers: [],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], App1HomeModule);
exports.App1HomeModule = App1HomeModule;


/***/ }),

/***/ "./src/main/webapp/app/home/home.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/home/index.ts");
exports.HOME_ROUTE = {
    path: '',
    component: _1.HomeComponent,
    data: {
        authorities: [],
        pageTitle: 'Welcome, Java Hipster!'
    },
    canActivate: [shared_1.UserRouteAccessService]
};


/***/ }),

/***/ "./src/main/webapp/app/home/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/home/home.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/home/home.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/home/home.module.ts"));


/***/ }),

/***/ "./src/main/webapp/app/layouts/error/error.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n            <span class=\"hipster img-fluid img-rounded\"></span>\n        </div>\n        <div class=\"col-md-8\">\n            <h1>Error Page!</h1>\n\n            <div [hidden]=\"!errorMessage\">\n                <div class=\"alert alert-danger\">{{errorMessage}}\n                </div>\n            </div>\n            <div [hidden]=\"!error403\" class=\"alert alert-danger\">You are not authorized to access the page.\n            </div>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/layouts/error/error.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ErrorComponent = (function () {
    function ErrorComponent() {
    }
    ErrorComponent.prototype.ngOnInit = function () {
    };
    return ErrorComponent;
}());
ErrorComponent = __decorate([
    core_1.Component({
        selector: 'jhi-error',
        template: __webpack_require__("./src/main/webapp/app/layouts/error/error.component.html")
    }),
    __metadata("design:paramtypes", [])
], ErrorComponent);
exports.ErrorComponent = ErrorComponent;


/***/ }),

/***/ "./src/main/webapp/app/layouts/error/error.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var error_component_1 = __webpack_require__("./src/main/webapp/app/layouts/error/error.component.ts");
exports.errorRoute = [
    {
        path: 'error',
        component: error_component_1.ErrorComponent,
        data: {
            authorities: [],
            pageTitle: 'Error page!'
        },
        canActivate: [shared_1.UserRouteAccessService]
    },
    {
        path: 'accessdenied',
        component: error_component_1.ErrorComponent,
        data: {
            authorities: [],
            pageTitle: 'Error page!'
        },
        canActivate: [shared_1.UserRouteAccessService]
    }
];


/***/ }),

/***/ "./src/main/webapp/app/layouts/footer/footer.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"footer\">\n    <p>This is your footer</p>\n</div>\n<template ngbModalContainer></template>\n"

/***/ }),

/***/ "./src/main/webapp/app/layouts/footer/footer.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var FooterComponent = (function () {
    function FooterComponent() {
    }
    return FooterComponent;
}());
FooterComponent = __decorate([
    core_1.Component({
        selector: 'jhi-footer',
        template: __webpack_require__("./src/main/webapp/app/layouts/footer/footer.component.html")
    })
], FooterComponent);
exports.FooterComponent = FooterComponent;


/***/ }),

/***/ "./src/main/webapp/app/layouts/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/layouts/error/error.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/layouts/error/error.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/layouts/main/main.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/layouts/footer/footer.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/layouts/navbar/navbar.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/layouts/profiles/page-ribbon.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/layouts/profiles/profile.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/layouts/profiles/profile-info.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/layouts/layout-routing.module.ts"));


/***/ }),

/***/ "./src/main/webapp/app/layouts/layout-routing.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var app_route_1 = __webpack_require__("./src/main/webapp/app/app.route.ts");
var _1 = __webpack_require__("./src/main/webapp/app/layouts/index.ts");
var LAYOUT_ROUTES = [
    app_route_1.navbarRoute
].concat(_1.errorRoute);
var LayoutRoutingModule = (function () {
    function LayoutRoutingModule() {
    }
    return LayoutRoutingModule;
}());
LayoutRoutingModule = __decorate([
    core_1.NgModule({
        imports: [
            router_1.RouterModule.forRoot(LAYOUT_ROUTES, { useHash: true })
        ],
        exports: [
            router_1.RouterModule
        ]
    })
], LayoutRoutingModule);
exports.LayoutRoutingModule = LayoutRoutingModule;


/***/ }),

/***/ "./src/main/webapp/app/layouts/main/main.component.html":
/***/ (function(module, exports) {

module.exports = "<jhi-page-ribbon></jhi-page-ribbon>\n<div>\n    <router-outlet name=\"navbar\"></router-outlet>\n</div>\n<div class=\"container-fluid\">\n    <div class=\"card jh-card\">\n        <router-outlet></router-outlet>\n        <router-outlet name=\"popup\"></router-outlet>\n    </div>\n    <jhi-footer></jhi-footer>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/layouts/main/main.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var platform_browser_1 = __webpack_require__(10);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var JhiMainComponent = (function () {
    function JhiMainComponent(titleService, router, $storageService) {
        this.titleService = titleService;
        this.router = router;
        this.$storageService = $storageService;
    }
    JhiMainComponent.prototype.getPageTitle = function (routeSnapshot) {
        var title = (routeSnapshot.data && routeSnapshot.data['pageTitle']) ? routeSnapshot.data['pageTitle'] : 'app1App';
        if (routeSnapshot.firstChild) {
            title = this.getPageTitle(routeSnapshot.firstChild) || title;
        }
        return title;
    };
    JhiMainComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.router.events.subscribe(function (event) {
            if (event instanceof router_1.NavigationEnd) {
                _this.titleService.setTitle(_this.getPageTitle(_this.router.routerState.snapshot.root));
            }
            if (event instanceof router_1.RoutesRecognized) {
                var params = {};
                var destinationData = {};
                var destinationName = '';
                var destinationEvent = event.state.root.firstChild.children[0];
                if (destinationEvent !== undefined) {
                    params = destinationEvent.params;
                    destinationData = destinationEvent.data;
                    destinationName = destinationEvent.url[0].path;
                }
                var from = { name: _this.router.url.slice(1) };
                var destination = { name: destinationName, data: destinationData };
                _this.$storageService.storeDestinationState(destination, params, from);
            }
        });
    };
    return JhiMainComponent;
}());
JhiMainComponent = __decorate([
    core_1.Component({
        selector: 'jhi-main',
        template: __webpack_require__("./src/main/webapp/app/layouts/main/main.component.html")
    }),
    __metadata("design:paramtypes", [platform_browser_1.Title,
        router_1.Router,
        shared_1.StateStorageService])
], JhiMainComponent);
exports.JhiMainComponent = JhiMainComponent;


/***/ }),

/***/ "./src/main/webapp/app/layouts/navbar/navbar.component.html":
/***/ (function(module, exports) {

module.exports = "<nav class=\"navbar navbar-inverse navbar-toggleable-md jh-navbar\">\n    <div class=\"jh-logo-container float-left\">\n        <a class=\"jh-navbar-toggler hidden-lg-up float-right\" href=\"javascript:void(0);\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" (click)=\"toggleNavbar()\">\n            <i class=\"fa fa-bars\"></i>\n        </a>\n        <a class=\"navbar-brand logo float-left\" routerLink=\"/\" (click)=\"collapseNavbar()\">\n            <span class=\"logo-img\"></span>\n            <span class=\"navbar-title\">App1</span> <span class=\"navbar-version\">{{version}}</span>\n        </a>\n    </div>\n    <div class=\"navbar-collapse collapse\" id=\"navbarResponsive\" [ngbCollapse]=\"isNavbarCollapsed\" [ngSwitch]=\"isAuthenticated()\">\n        <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n                <a class=\"nav-link\" routerLink=\"/\" (click)=\"collapseNavbar()\">\n                    <i class=\"fa fa-home\" aria-hidden=\"true\"></i>\n                    <span>Home</span>\n                </a>\n            </li>\n            <!-- jhipster-needle-add-element-to-menu - JHipster will add new menu items here -->\n            <li *ngSwitchCase=\"true\" ngbDropdown class=\"nav-item dropdown pointer\">\n                <a class=\"nav-link dropdown-toggle\" routerLinkActive=\"active\" ngbDropdownToggle href=\"javascript:void(0);\" id=\"entity-menu\">\n                    <span>\n                        <i class=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n                        <span>\n                            Entities\n                        </span>\n                        <b class=\"caret\"></b>\n                    </span>\n                </a>\n                <ul class=\"dropdown-menu\" ngbDropdownMenu>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"country-my-suffix\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span >Country My Suffix</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"department-my-suffix\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span >Department My Suffix</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"employee-my-suffix\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span >Employee My Suffix</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"job-my-suffix\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span >Job My Suffix</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"job-history-my-suffix\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span >Job History My Suffix</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"location-my-suffix\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span >Location My Suffix</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"region-my-suffix\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span >Region My Suffix</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"task-my-suffix\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span >Task My Suffix</span>\n                        </a>\n                    </li>\n                    <!-- jhipster-needle-add-entity-to-menu - JHipster will add entities to the menu here -->\n                </ul>\n            </li>\n            <li *jhiHasAnyAuthority=\"'ROLE_ADMIN'\" ngbDropdown class=\"nav-item dropdown pointer\">\n                <a class=\"nav-link dropdown-toggle\" ngbDropdownToggle href=\"javascript:void(0);\" id=\"admin-menu\">\n                    <span>\n                        <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\n                        <span>Administration</span>\n                        <b class=\"caret\"></b>\n                    </span>\n                </a>\n                <ul class=\"dropdown-menu\" ngbDropdownMenu>\n                    <li>\n                        <a class=\"dropdown-item\" routerLink=\"user-management\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-user\" aria-hidden=\"true\"></i>\n                            <span>User management</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" routerLink=\"jhi-metrics\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-tachometer\" aria-hidden=\"true\"></i>\n                            <span>Metrics</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" routerLink=\"jhi-health\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-heart\" aria-hidden=\"true\"></i>\n                            <span>Health</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" routerLink=\"jhi-configuration\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-list\" aria-hidden=\"true\"></i>\n                            <span>Configuration</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" routerLink=\"audits\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-bell\" aria-hidden=\"true\"></i>\n                            <span>Audits</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" routerLink=\"logs\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-tasks\" aria-hidden=\"true\"></i>\n                            <span>Logs</span>\n                        </a>\n                    </li>\n                    <li *ngIf=\"swaggerEnabled\">\n                        <a class=\"dropdown-item\" routerLink=\"docs\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i>\n                            <span>API</span>\n                        </a>\n                    </li>\n                    <!-- jhipster-needle-add-element-to-admin-menu - JHipster will add entities to the admin menu here -->\n                </ul>\n            </li>\n            <li ngbDropdown class=\"nav-item dropdown pointer\">\n                <a class=\"nav-link dropdown-toggle\" ngbDropdownToggle href=\"javascript:void(0);\" id=\"account-menu\">\n                  <span *ngIf=\"!getImageUrl()\">\n                    <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                    <span>\n                      Account\n                    </span>\n                    <b class=\"caret\"></b>\n                  </span>\n                  <span *ngIf=\"getImageUrl()\">\n                      <img [src]=\"getImageUrl()\" class=\"profile-image img-circle\" alt=\"Avatar\">\n                  </span>\n                </a>\n                <ul class=\"dropdown-menu dropdown-menu-right\" ngbDropdownMenu>\n                    <li *ngSwitchCase=\"true\">\n                        <a class=\"dropdown-item\" routerLink=\"settings\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-wrench\" aria-hidden=\"true\"></i>\n                            <span>Settings</span>\n                        </a>\n                    </li>\n                    <li *ngSwitchCase=\"true\">\n                        <a class=\"dropdown-item\" routerLink=\"password\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-clock-o\" aria-hidden=\"true\"></i>\n                            <span>Password</span>\n                        </a>\n                    </li>\n                    <li *ngSwitchCase=\"true\">\n                        <a class=\"dropdown-item\" (click)=\"logout()\" id=\"logout\">\n                            <i class=\"fa fa-fw fa-sign-out\" aria-hidden=\"true\"></i>\n                            <span>Sign out</span>\n                        </a>\n                    </li>\n                    <li *ngSwitchCase=\"false\">\n                        <a class=\"dropdown-item\" (click)=\"login()\" id=\"login\">\n                            <i class=\"fa fa-fw fa-sign-in\" aria-hidden=\"true\"></i>\n                            <span>Sign in</span>\n                        </a>\n                    </li>\n                    <li *ngSwitchCase=\"false\">\n                        <a class=\"dropdown-item\" routerLink=\"register\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-registered\" aria-hidden=\"true\"></i>\n                            <span>Register</span>\n                        </a>\n                    </li>\n                </ul>\n            </li>\n        </ul>\n    </div>\n</nav>\n"

/***/ }),

/***/ "./src/main/webapp/app/layouts/navbar/navbar.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var profile_service_1 = __webpack_require__("./src/main/webapp/app/layouts/profiles/profile.service.ts"); // FIXME barrel doesnt work here
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var app_constants_1 = __webpack_require__("./src/main/webapp/app/app.constants.ts");
var NavbarComponent = (function () {
    function NavbarComponent(loginService, principal, loginModalService, profileService, router) {
        this.loginService = loginService;
        this.principal = principal;
        this.loginModalService = loginModalService;
        this.profileService = profileService;
        this.router = router;
        this.version = app_constants_1.DEBUG_INFO_ENABLED ? 'v' + app_constants_1.VERSION : '';
        this.isNavbarCollapsed = true;
    }
    NavbarComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.profileService.getProfileInfo().subscribe(function (profileInfo) {
            _this.inProduction = profileInfo.inProduction;
            _this.swaggerEnabled = profileInfo.swaggerEnabled;
        });
    };
    NavbarComponent.prototype.collapseNavbar = function () {
        this.isNavbarCollapsed = true;
    };
    NavbarComponent.prototype.isAuthenticated = function () {
        return this.principal.isAuthenticated();
    };
    NavbarComponent.prototype.login = function () {
        this.modalRef = this.loginModalService.open();
    };
    NavbarComponent.prototype.logout = function () {
        this.collapseNavbar();
        this.loginService.logout();
        this.router.navigate(['']);
    };
    NavbarComponent.prototype.toggleNavbar = function () {
        this.isNavbarCollapsed = !this.isNavbarCollapsed;
    };
    NavbarComponent.prototype.getImageUrl = function () {
        return this.isAuthenticated() ? this.principal.getImageUrl() : null;
    };
    return NavbarComponent;
}());
NavbarComponent = __decorate([
    core_1.Component({
        selector: 'jhi-navbar',
        template: __webpack_require__("./src/main/webapp/app/layouts/navbar/navbar.component.html"),
        styles: [
            __webpack_require__("./src/main/webapp/app/layouts/navbar/navbar.css")
        ]
    }),
    __metadata("design:paramtypes", [shared_1.LoginService,
        shared_1.Principal,
        shared_1.LoginModalService,
        profile_service_1.ProfileService,
        router_1.Router])
], NavbarComponent);
exports.NavbarComponent = NavbarComponent;


/***/ }),

/***/ "./src/main/webapp/app/layouts/navbar/navbar.css":
/***/ (function(module, exports, __webpack_require__) {


        var result = __webpack_require__("./node_modules/css-loader/index.js!./src/main/webapp/app/layouts/navbar/navbar.css");

        if (typeof result === "string") {
            module.exports = result;
        } else {
            module.exports = result.toString();
        }
    

/***/ }),

/***/ "./src/main/webapp/app/layouts/profiles/page-ribbon.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var profile_service_1 = __webpack_require__("./src/main/webapp/app/layouts/profiles/profile.service.ts");
var PageRibbonComponent = (function () {
    function PageRibbonComponent(profileService) {
        this.profileService = profileService;
    }
    PageRibbonComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.profileService.getProfileInfo().subscribe(function (profileInfo) {
            _this.profileInfo = profileInfo;
            _this.ribbonEnv = profileInfo.ribbonEnv;
        });
    };
    return PageRibbonComponent;
}());
PageRibbonComponent = __decorate([
    core_1.Component({
        selector: 'jhi-page-ribbon',
        template: "<div class=\"ribbon\" *ngIf=\"ribbonEnv\"><a href=\"\">{{ribbonEnv}}</a></div>",
        styles: [
            __webpack_require__("./src/main/webapp/app/layouts/profiles/page-ribbon.css")
        ]
    }),
    __metadata("design:paramtypes", [profile_service_1.ProfileService])
], PageRibbonComponent);
exports.PageRibbonComponent = PageRibbonComponent;


/***/ }),

/***/ "./src/main/webapp/app/layouts/profiles/page-ribbon.css":
/***/ (function(module, exports, __webpack_require__) {


        var result = __webpack_require__("./node_modules/css-loader/index.js!./src/main/webapp/app/layouts/profiles/page-ribbon.css");

        if (typeof result === "string") {
            module.exports = result;
        } else {
            module.exports = result.toString();
        }
    

/***/ }),

/***/ "./src/main/webapp/app/layouts/profiles/profile-info.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ProfileInfo = (function () {
    function ProfileInfo() {
    }
    return ProfileInfo;
}());
exports.ProfileInfo = ProfileInfo;


/***/ }),

/***/ "./src/main/webapp/app/layouts/profiles/profile.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var profile_info_model_1 = __webpack_require__("./src/main/webapp/app/layouts/profiles/profile-info.model.ts");
var ProfileService = (function () {
    function ProfileService(http) {
        this.http = http;
        this.profileInfoUrl = 'api/profile-info';
    }
    ProfileService.prototype.getProfileInfo = function () {
        return this.http.get(this.profileInfoUrl)
            .map(function (res) {
            var data = res.json();
            var pi = new profile_info_model_1.ProfileInfo();
            pi.activeProfiles = data.activeProfiles;
            pi.ribbonEnv = data.ribbonEnv;
            pi.inProduction = data.activeProfiles.indexOf('prod') !== -1;
            pi.swaggerEnabled = data.activeProfiles.indexOf('swagger') !== -1;
            return pi;
        });
    };
    return ProfileService;
}());
ProfileService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], ProfileService);
exports.ProfileService = ProfileService;


/***/ }),

/***/ "./src/main/webapp/app/shared/alert/alert-error.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var JhiAlertErrorComponent = (function () {
    function JhiAlertErrorComponent(alertService, eventManager) {
        var _this = this;
        this.alertService = alertService;
        this.eventManager = eventManager;
        this.alerts = [];
        this.cleanHttpErrorListener = eventManager.subscribe('app1App.httpError', function (response) {
            var i;
            var httpResponse = response.content;
            switch (httpResponse.status) {
                // connection refused, server not reachable
                case 0:
                    _this.addErrorAlert('Server not reachable', 'error.server.not.reachable');
                    break;
                case 400:
                    var arr = Array.from(httpResponse.headers._headers);
                    var headers = [];
                    for (i = 0; i < arr.length; i++) {
                        if (arr[i][0].endsWith('app-error') || arr[i][0].endsWith('app-params')) {
                            headers.push(arr[i][0]);
                        }
                    }
                    headers.sort();
                    var errorHeader = httpResponse.headers.get(headers[0]);
                    var entityKey = httpResponse.headers.get(headers[1]);
                    if (errorHeader) {
                        var entityName = entityKey;
                        _this.addErrorAlert(errorHeader, errorHeader, { entityName: entityName });
                    }
                    else if (httpResponse.text() !== '' && httpResponse.json() && httpResponse.json().fieldErrors) {
                        var fieldErrors = httpResponse.json().fieldErrors;
                        for (i = 0; i < fieldErrors.length; i++) {
                            var fieldError = fieldErrors[i];
                            // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it
                            var convertedField = fieldError.field.replace(/\[\d*\]/g, '[]');
                            var fieldName = convertedField.charAt(0).toUpperCase() +
                                convertedField.slice(1);
                            _this.addErrorAlert('Field ' + fieldName + ' cannot be empty', 'error.' + fieldError.message, { fieldName: fieldName });
                        }
                    }
                    else if (httpResponse.text() !== '' && httpResponse.json() && httpResponse.json().message) {
                        _this.addErrorAlert(httpResponse.json().message, httpResponse.json().message, httpResponse.json());
                    }
                    else {
                        _this.addErrorAlert(httpResponse.text());
                    }
                    break;
                case 404:
                    _this.addErrorAlert('Not found', 'error.url.not.found');
                    break;
                default:
                    if (httpResponse.text() !== '' && httpResponse.json() && httpResponse.json().message) {
                        _this.addErrorAlert(httpResponse.json().message);
                    }
                    else {
                        _this.addErrorAlert(JSON.stringify(httpResponse)); // Fixme find a way to parse httpResponse
                    }
            }
        });
    }
    JhiAlertErrorComponent.prototype.ngOnDestroy = function () {
        if (this.cleanHttpErrorListener !== undefined && this.cleanHttpErrorListener !== null) {
            this.eventManager.destroy(this.cleanHttpErrorListener);
            this.alerts = [];
        }
    };
    JhiAlertErrorComponent.prototype.addErrorAlert = function (message, key, data) {
        this.alerts.push(this.alertService.addAlert({
            type: 'danger',
            msg: message,
            timeout: 5000,
            toast: this.alertService.isToast(),
            scoped: true
        }, this.alerts));
    };
    return JhiAlertErrorComponent;
}());
JhiAlertErrorComponent = __decorate([
    core_1.Component({
        selector: 'jhi-alert-error',
        template: "\n        <div class=\"alerts\" role=\"alert\">\n            <div *ngFor=\"let alert of alerts\"  [ngClass]=\"{'alert.position': true, 'toast': alert.toast}\">\n                <ngb-alert type=\"{{alert.type}}\" close=\"alert.close(alerts)\"><pre>{{ alert.msg }}</pre></ngb-alert>\n            </div>\n        </div>"
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.AlertService, ng_jhipster_1.EventManager])
], JhiAlertErrorComponent);
exports.JhiAlertErrorComponent = JhiAlertErrorComponent;


/***/ }),

/***/ "./src/main/webapp/app/shared/alert/alert.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var JhiAlertComponent = (function () {
    function JhiAlertComponent(alertService) {
        this.alertService = alertService;
    }
    JhiAlertComponent.prototype.ngOnInit = function () {
        this.alerts = this.alertService.get();
    };
    JhiAlertComponent.prototype.ngOnDestroy = function () {
        this.alerts = [];
    };
    return JhiAlertComponent;
}());
JhiAlertComponent = __decorate([
    core_1.Component({
        selector: 'jhi-alert',
        template: "\n        <div class=\"alerts\" role=\"alert\">\n            <div *ngFor=\"let alert of alerts\" [ngClass]=\"{'alert.position': true, 'toast': alert.toast}\">\n                <ngb-alert [type]=\"alert.type\" (close)=\"alert.close(alerts)\"><pre [innerHTML]=\"alert.msg\"></pre></ngb-alert>\n            </div>\n        </div>"
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.AlertService])
], JhiAlertComponent);
exports.JhiAlertComponent = JhiAlertComponent;


/***/ }),

/***/ "./src/main/webapp/app/shared/auth/account.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var AccountService = (function () {
    function AccountService(http) {
        this.http = http;
    }
    AccountService.prototype.get = function () {
        return this.http.get('api/account').map(function (res) { return res.json(); });
    };
    AccountService.prototype.save = function (account) {
        return this.http.post('api/account', account);
    };
    return AccountService;
}());
AccountService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], AccountService);
exports.AccountService = AccountService;


/***/ }),

/***/ "./src/main/webapp/app/shared/auth/auth-jwt.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Rx_1 = __webpack_require__(14);
var ng2_webstorage_1 = __webpack_require__(8);
var AuthServerProvider = (function () {
    function AuthServerProvider(http, $localStorage, $sessionStorage) {
        this.http = http;
        this.$localStorage = $localStorage;
        this.$sessionStorage = $sessionStorage;
    }
    AuthServerProvider.prototype.getToken = function () {
        return this.$localStorage.retrieve('authenticationToken') || this.$sessionStorage.retrieve('authenticationToken');
    };
    AuthServerProvider.prototype.login = function (credentials) {
        var data = {
            username: credentials.username,
            password: credentials.password,
            rememberMe: credentials.rememberMe
        };
        return this.http.post('api/authenticate', data).map(authenticateSuccess.bind(this));
        function authenticateSuccess(resp) {
            var bearerToken = resp.headers.get('Authorization');
            if (bearerToken && bearerToken.slice(0, 7) === 'Bearer ') {
                var jwt = bearerToken.slice(7, bearerToken.length);
                this.storeAuthenticationToken(jwt, credentials.rememberMe);
                return jwt;
            }
        }
    };
    AuthServerProvider.prototype.loginWithToken = function (jwt, rememberMe) {
        if (jwt) {
            this.storeAuthenticationToken(jwt, rememberMe);
            return Promise.resolve(jwt);
        }
        else {
            return Promise.reject('auth-jwt-service Promise reject'); // Put appropriate error message here
        }
    };
    AuthServerProvider.prototype.storeAuthenticationToken = function (jwt, rememberMe) {
        if (rememberMe) {
            this.$localStorage.store('authenticationToken', jwt);
        }
        else {
            this.$sessionStorage.store('authenticationToken', jwt);
        }
    };
    AuthServerProvider.prototype.logout = function () {
        var _this = this;
        return new Rx_1.Observable(function (observer) {
            _this.$localStorage.clear('authenticationToken');
            _this.$sessionStorage.clear('authenticationToken');
            observer.complete();
        });
    };
    return AuthServerProvider;
}());
AuthServerProvider = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http,
        ng2_webstorage_1.LocalStorageService,
        ng2_webstorage_1.SessionStorageService])
], AuthServerProvider);
exports.AuthServerProvider = AuthServerProvider;


/***/ }),

/***/ "./src/main/webapp/app/shared/auth/auth.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var login_modal_service_1 = __webpack_require__("./src/main/webapp/app/shared/login/login-modal.service.ts");
var principal_service_1 = __webpack_require__("./src/main/webapp/app/shared/auth/principal.service.ts");
var state_storage_service_1 = __webpack_require__("./src/main/webapp/app/shared/auth/state-storage.service.ts");
var AuthService = (function () {
    function AuthService(principal, stateStorageService, loginModalService, router) {
        this.principal = principal;
        this.stateStorageService = stateStorageService;
        this.loginModalService = loginModalService;
        this.router = router;
    }
    AuthService.prototype.authorize = function (force) {
        var authReturn = this.principal.identity(force).then(authThen.bind(this));
        return authReturn;
        function authThen() {
            var _this = this;
            var isAuthenticated = this.principal.isAuthenticated();
            var toStateInfo = this.stateStorageService.getDestinationState().destination;
            // an authenticated user can't access to login and register pages
            if (isAuthenticated && (toStateInfo.name === 'register' || toStateInfo.name === 'social-auth')) {
                this.router.navigate(['']);
                return false;
            }
            // recover and clear previousState after external login redirect (e.g. oauth2)
            var fromStateInfo = this.stateStorageService.getDestinationState().from;
            var previousState = this.stateStorageService.getPreviousState();
            if (isAuthenticated && !fromStateInfo.name && previousState) {
                this.stateStorageService.resetPreviousState();
                this.router.navigate([previousState.name], { queryParams: previousState.params });
                return false;
            }
            if (toStateInfo.data.authorities && toStateInfo.data.authorities.length > 0) {
                return this.principal.hasAnyAuthority(toStateInfo.data.authorities).then(function (hasAnyAuthority) {
                    if (!hasAnyAuthority) {
                        if (isAuthenticated) {
                            // user is signed in but not authorized for desired state
                            _this.router.navigate(['accessdenied']);
                        }
                        else {
                            // user is not authenticated. Show the state they wanted before you
                            // send them to the login service, so you can return them when you're done
                            var toStateParamsInfo = _this.stateStorageService.getDestinationState().params;
                            _this.stateStorageService.storePreviousState(toStateInfo.name, toStateParamsInfo);
                            // now, send them to the signin state so they can log in
                            _this.router.navigate(['accessdenied']).then(function () {
                                _this.loginModalService.open();
                            });
                        }
                    }
                    return hasAnyAuthority;
                });
            }
            return true;
        }
    };
    return AuthService;
}());
AuthService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [principal_service_1.Principal,
        state_storage_service_1.StateStorageService,
        login_modal_service_1.LoginModalService,
        router_1.Router])
], AuthService);
exports.AuthService = AuthService;


/***/ }),

/***/ "./src/main/webapp/app/shared/auth/csrf.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var core_2 = __webpack_require__(16);
var CSRFService = (function () {
    function CSRFService(cookieService) {
        this.cookieService = cookieService;
    }
    CSRFService.prototype.getCSRF = function (name) {
        name = "" + (name ? name : 'XSRF-TOKEN');
        return this.cookieService.get(name);
    };
    return CSRFService;
}());
CSRFService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [core_2.CookieService])
], CSRFService);
exports.CSRFService = CSRFService;


/***/ }),

/***/ "./src/main/webapp/app/shared/auth/has-any-authority.directive.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var principal_service_1 = __webpack_require__("./src/main/webapp/app/shared/auth/principal.service.ts");
/**
 * @whatItDoes Conditionally includes an HTML element if current user has any
 * of the authorities passed as the `expression`.
 *
 * @howToUse
 * ```
 *     <some-element *jhiHasAnyAuthority="'ROLE_ADMIN'">...</some-element>
 *
 *     <some-element *jhiHasAnyAuthority="['ROLE_ADMIN', 'ROLE_USER']">...</some-element>
 * ```
 */
var HasAnyAuthorityDirective = (function () {
    function HasAnyAuthorityDirective(principal, templateRef, viewContainerRef) {
        this.principal = principal;
        this.templateRef = templateRef;
        this.viewContainerRef = viewContainerRef;
    }
    Object.defineProperty(HasAnyAuthorityDirective.prototype, "jhiHasAnyAuthority", {
        set: function (value) {
            var _this = this;
            this.authorities = typeof value === 'string' ? [value] : value;
            this.updateView();
            // Get notified each time authentication state changes.
            this.principal.getAuthenticationState().subscribe(function (identity) { return _this.updateView(); });
        },
        enumerable: true,
        configurable: true
    });
    HasAnyAuthorityDirective.prototype.updateView = function () {
        var _this = this;
        this.principal.hasAnyAuthority(this.authorities).then(function (result) {
            if (result) {
                _this.viewContainerRef.createEmbeddedView(_this.templateRef);
            }
            else {
                _this.viewContainerRef.clear();
            }
        });
    };
    return HasAnyAuthorityDirective;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], HasAnyAuthorityDirective.prototype, "jhiHasAnyAuthority", null);
HasAnyAuthorityDirective = __decorate([
    core_1.Directive({
        selector: '[jhiHasAnyAuthority]'
    }),
    __metadata("design:paramtypes", [principal_service_1.Principal, core_1.TemplateRef, core_1.ViewContainerRef])
], HasAnyAuthorityDirective);
exports.HasAnyAuthorityDirective = HasAnyAuthorityDirective;


/***/ }),

/***/ "./src/main/webapp/app/shared/auth/principal.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var Subject_1 = __webpack_require__(21);
var account_service_1 = __webpack_require__("./src/main/webapp/app/shared/auth/account.service.ts");
var Principal = (function () {
    function Principal(account) {
        this.account = account;
        this.authenticated = false;
        this.authenticationState = new Subject_1.Subject();
    }
    Principal.prototype.authenticate = function (identity) {
        this.userIdentity = identity;
        this.authenticated = identity !== null;
        this.authenticationState.next(this.userIdentity);
    };
    Principal.prototype.hasAnyAuthority = function (authorities) {
        if (!this.authenticated || !this.userIdentity || !this.userIdentity.authorities) {
            return Promise.resolve(false);
        }
        for (var i = 0; i < authorities.length; i++) {
            if (this.userIdentity.authorities.indexOf(authorities[i]) !== -1) {
                return Promise.resolve(true);
            }
        }
        return Promise.resolve(false);
    };
    Principal.prototype.hasAuthority = function (authority) {
        if (!this.authenticated) {
            return Promise.resolve(false);
        }
        return this.identity().then(function (id) {
            return Promise.resolve(id.authorities && id.authorities.indexOf(authority) !== -1);
        }, function () {
            return Promise.resolve(false);
        });
    };
    Principal.prototype.identity = function (force) {
        var _this = this;
        if (force === true) {
            this.userIdentity = undefined;
        }
        // check and see if we have retrieved the userIdentity data from the server.
        // if we have, reuse it by immediately resolving
        if (this.userIdentity) {
            return Promise.resolve(this.userIdentity);
        }
        // retrieve the userIdentity data from the server, update the identity object, and then resolve.
        return this.account.get().toPromise().then(function (account) {
            if (account) {
                _this.userIdentity = account;
                _this.authenticated = true;
            }
            else {
                _this.userIdentity = null;
                _this.authenticated = false;
            }
            _this.authenticationState.next(_this.userIdentity);
            return _this.userIdentity;
        }).catch(function (err) {
            _this.userIdentity = null;
            _this.authenticated = false;
            _this.authenticationState.next(_this.userIdentity);
            return null;
        });
    };
    Principal.prototype.isAuthenticated = function () {
        return this.authenticated;
    };
    Principal.prototype.isIdentityResolved = function () {
        return this.userIdentity !== undefined;
    };
    Principal.prototype.getAuthenticationState = function () {
        return this.authenticationState.asObservable();
    };
    Principal.prototype.getImageUrl = function () {
        return this.isIdentityResolved() ? this.userIdentity.imageUrl : null;
    };
    return Principal;
}());
Principal = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [account_service_1.AccountService])
], Principal);
exports.Principal = Principal;


/***/ }),

/***/ "./src/main/webapp/app/shared/auth/state-storage.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng2_webstorage_1 = __webpack_require__(8);
var StateStorageService = (function () {
    function StateStorageService($sessionStorage) {
        this.$sessionStorage = $sessionStorage;
    }
    StateStorageService.prototype.getPreviousState = function () {
        return this.$sessionStorage.retrieve('previousState');
    };
    StateStorageService.prototype.resetPreviousState = function () {
        this.$sessionStorage.clear('previousState');
    };
    StateStorageService.prototype.storePreviousState = function (previousStateName, previousStateParams) {
        var previousState = { 'name': previousStateName, 'params': previousStateParams };
        this.$sessionStorage.store('previousState', previousState);
    };
    StateStorageService.prototype.getDestinationState = function () {
        return this.$sessionStorage.retrieve('destinationState');
    };
    StateStorageService.prototype.storeDestinationState = function (destinationState, destinationStateParams, fromState) {
        var destinationInfo = {
            'destination': {
                'name': destinationState.name,
                'data': destinationState.data,
            },
            'params': destinationStateParams,
            'from': {
                'name': fromState.name,
            }
        };
        this.$sessionStorage.store('destinationState', destinationInfo);
    };
    return StateStorageService;
}());
StateStorageService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng2_webstorage_1.SessionStorageService])
], StateStorageService);
exports.StateStorageService = StateStorageService;


/***/ }),

/***/ "./src/main/webapp/app/shared/auth/user-route-access-service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var _1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var UserRouteAccessService = (function () {
    function UserRouteAccessService(router, auth) {
        this.router = router;
        this.auth = auth;
    }
    UserRouteAccessService.prototype.canActivate = function (route) {
        return this.auth.authorize(false).then(function (canActivate) { return canActivate; });
    };
    return UserRouteAccessService;
}());
UserRouteAccessService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [router_1.Router, _1.AuthService])
], UserRouteAccessService);
exports.UserRouteAccessService = UserRouteAccessService;


/***/ }),

/***/ "./src/main/webapp/app/shared/constants/pagination.constants.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.ITEMS_PER_PAGE = 20;


/***/ }),

/***/ "./src/main/webapp/app/shared/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/shared/alert/alert.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/alert/alert-error.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/auth/csrf.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/auth/state-storage.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/auth/account.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/auth/auth-jwt.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/auth/auth.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/auth/principal.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/auth/has-any-authority.directive.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/login/login.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/login/login.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/login/login-modal.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/constants/pagination.constants.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/user/account.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/user/user.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/user/user.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/shared-libs.module.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/shared-common.module.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/shared.module.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/auth/user-route-access-service.ts"));


/***/ }),

/***/ "./src/main/webapp/app/shared/login/login-modal.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_bootstrap_1 = __webpack_require__(3);
var login_component_1 = __webpack_require__("./src/main/webapp/app/shared/login/login.component.ts");
var LoginModalService = (function () {
    function LoginModalService(modalService) {
        this.modalService = modalService;
        this.isOpen = false;
    }
    LoginModalService.prototype.open = function () {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        var modalRef = this.modalService.open(login_component_1.JhiLoginModalComponent);
        modalRef.result.then(function (result) {
            _this.isOpen = false;
        }, function (reason) {
            _this.isOpen = false;
        });
        return modalRef;
    };
    return LoginModalService;
}());
LoginModalService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal])
], LoginModalService);
exports.LoginModalService = LoginModalService;


/***/ }),

/***/ "./src/main/webapp/app/shared/login/login.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-header\">\n    <h4 class=\"modal-title\">Sign in</h4>\n    <button aria-label=\"Close\" data-dismiss=\"modal\" class=\"close\" type=\"button\" (click)=\"activeModal.dismiss('closed')\"><span aria-hidden=\"true\">x</span>\n    </button>\n</div>\n<div class=\"modal-body\">\n    <div class=\"row\">\n        <div class=\"col-md-4 offset-md-4\">\n            <h1>Sign in</h1>\n        </div>\n        <div class=\"col-md-8 offset-md-2\">\n            <div class=\"alert alert-danger\" *ngIf=\"authenticationError\">\n                <strong>Failed to sign in!</strong> Please check your credentials and try again.\n            </div>\n        </div>\n        <div class=\"col-md-8 offset-md-2\">\n            <form class=\"form\" role=\"form\" (ngSubmit)=\"login()\">\n                <div class=\"form-group\">\n                    <label for=\"username\">Login</label>\n                    <input type=\"text\" class=\"form-control\" name=\"username\" id=\"username\" placeholder=\"Your username\"\n                    [(ngModel)]=\"username\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Password</label>\n                    <input type=\"password\" class=\"form-control\" name=\"password\" id=\"password\" placeholder=\"Your password\"\n                           [(ngModel)]=\"password\">\n                </div>\n                <div class=\"form-check\">\n                    <label class=\"form-check-label\" for=\"rememberMe\">\n                        <input class=\"form-check-input\" type=\"checkbox\" name=\"rememberMe\" id=\"rememberMe\" [(ngModel)]=\"rememberMe\" checked>\n                        <span>Remember me</span>\n                    </label>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\">Sign in</button>\n            </form>\n            <p></p>\n            <div class=\"alert alert-warning\">\n                <a class=\"alert-link\" (click)=\"requestResetPassword()\">Did you forget your password?</a>\n            </div>\n            <div class=\"alert alert-warning\">\n            \t<span>You don't have an account yet?</span>\n                <a class=\"alert-link\" (click)=\"register()\">Register a new account</a>\n            </div>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/shared/login/login.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_bootstrap_1 = __webpack_require__(3);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var login_service_1 = __webpack_require__("./src/main/webapp/app/shared/login/login.service.ts");
var state_storage_service_1 = __webpack_require__("./src/main/webapp/app/shared/auth/state-storage.service.ts");
var JhiLoginModalComponent = (function () {
    function JhiLoginModalComponent(eventManager, loginService, stateStorageService, elementRef, renderer, router, activeModal) {
        this.eventManager = eventManager;
        this.loginService = loginService;
        this.stateStorageService = stateStorageService;
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.router = router;
        this.activeModal = activeModal;
        this.credentials = {};
    }
    JhiLoginModalComponent.prototype.ngOnInit = function () {
    };
    JhiLoginModalComponent.prototype.ngAfterViewInit = function () {
        this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#username'), 'focus', []);
    };
    JhiLoginModalComponent.prototype.cancel = function () {
        this.credentials = {
            username: null,
            password: null,
            rememberMe: true
        };
        this.authenticationError = false;
        this.activeModal.dismiss('cancel');
    };
    JhiLoginModalComponent.prototype.login = function () {
        var _this = this;
        this.loginService.login({
            username: this.username,
            password: this.password,
            rememberMe: this.rememberMe
        }).then(function () {
            _this.authenticationError = false;
            _this.activeModal.dismiss('login success');
            if (_this.router.url === '/register' || (/activate/.test(_this.router.url)) ||
                _this.router.url === '/finishReset' || _this.router.url === '/requestReset') {
                _this.router.navigate(['']);
            }
            _this.eventManager.broadcast({
                name: 'authenticationSuccess',
                content: 'Sending Authentication Success'
            });
            // // previousState was set in the authExpiredInterceptor before being redirected to login modal.
            // // since login is succesful, go to stored previousState and clear previousState
            var previousState = _this.stateStorageService.getPreviousState();
            if (previousState) {
                _this.stateStorageService.resetPreviousState();
                _this.router.navigate([previousState.name], { queryParams: previousState.params });
            }
        }).catch(function () {
            _this.authenticationError = true;
        });
    };
    JhiLoginModalComponent.prototype.register = function () {
        this.activeModal.dismiss('to state register');
        this.router.navigate(['/register']);
    };
    JhiLoginModalComponent.prototype.requestResetPassword = function () {
        this.activeModal.dismiss('to state requestReset');
        this.router.navigate(['/reset', 'request']);
    };
    return JhiLoginModalComponent;
}());
JhiLoginModalComponent = __decorate([
    core_1.Component({
        selector: 'jhi-login-modal',
        template: __webpack_require__("./src/main/webapp/app/shared/login/login.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.EventManager,
        login_service_1.LoginService,
        state_storage_service_1.StateStorageService,
        core_1.ElementRef,
        core_1.Renderer,
        router_1.Router,
        ng_bootstrap_1.NgbActiveModal])
], JhiLoginModalComponent);
exports.JhiLoginModalComponent = JhiLoginModalComponent;


/***/ }),

/***/ "./src/main/webapp/app/shared/login/login.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var principal_service_1 = __webpack_require__("./src/main/webapp/app/shared/auth/principal.service.ts");
var auth_jwt_service_1 = __webpack_require__("./src/main/webapp/app/shared/auth/auth-jwt.service.ts");
var LoginService = (function () {
    function LoginService(principal, authServerProvider) {
        this.principal = principal;
        this.authServerProvider = authServerProvider;
    }
    LoginService.prototype.login = function (credentials, callback) {
        var _this = this;
        var cb = callback || function () { };
        return new Promise(function (resolve, reject) {
            _this.authServerProvider.login(credentials).subscribe(function (data) {
                _this.principal.identity(true).then(function (account) {
                    resolve(data);
                });
                return cb();
            }, function (err) {
                _this.logout();
                reject(err);
                return cb(err);
            });
        });
    };
    LoginService.prototype.loginWithToken = function (jwt, rememberMe) {
        return this.authServerProvider.loginWithToken(jwt, rememberMe);
    };
    LoginService.prototype.logout = function () {
        this.authServerProvider.logout().subscribe();
        this.principal.authenticate(null);
    };
    return LoginService;
}());
LoginService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [principal_service_1.Principal,
        auth_jwt_service_1.AuthServerProvider])
], LoginService);
exports.LoginService = LoginService;


/***/ }),

/***/ "./src/main/webapp/app/shared/shared-common.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var platform_browser_1 = __webpack_require__(10);
var ng_jhipster_1 = __webpack_require__(2);
var _1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
function alertServiceProvider(sanitizer) {
    // set below to true to make alerts look like toast
    var isToast = false;
    return new ng_jhipster_1.AlertService(sanitizer, isToast);
}
exports.alertServiceProvider = alertServiceProvider;
var App1SharedCommonModule = (function () {
    function App1SharedCommonModule() {
    }
    return App1SharedCommonModule;
}());
App1SharedCommonModule = __decorate([
    core_1.NgModule({
        imports: [
            _1.App1SharedLibsModule
        ],
        declarations: [
            _1.JhiAlertComponent,
            _1.JhiAlertErrorComponent
        ],
        providers: [
            {
                provide: ng_jhipster_1.AlertService,
                useFactory: alertServiceProvider,
                deps: [core_1.Sanitizer]
            },
            platform_browser_1.Title
        ],
        exports: [
            _1.App1SharedLibsModule,
            _1.JhiAlertComponent,
            _1.JhiAlertErrorComponent
        ]
    })
], App1SharedCommonModule);
exports.App1SharedCommonModule = App1SharedCommonModule;


/***/ }),

/***/ "./src/main/webapp/app/shared/shared-libs.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(15);
var http_1 = __webpack_require__(4);
var common_1 = __webpack_require__(6);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var angular2_infinite_scroll_1 = __webpack_require__(17);
var App1SharedLibsModule = (function () {
    function App1SharedLibsModule() {
    }
    return App1SharedLibsModule;
}());
App1SharedLibsModule = __decorate([
    core_1.NgModule({
        imports: [
            ng_bootstrap_1.NgbModule.forRoot(),
            ng_jhipster_1.NgJhipsterModule.forRoot({}),
            angular2_infinite_scroll_1.InfiniteScrollModule
        ],
        exports: [
            forms_1.FormsModule,
            http_1.HttpModule,
            common_1.CommonModule,
            ng_bootstrap_1.NgbModule,
            ng_jhipster_1.NgJhipsterModule,
            angular2_infinite_scroll_1.InfiniteScrollModule
        ]
    })
], App1SharedLibsModule);
exports.App1SharedLibsModule = App1SharedLibsModule;


/***/ }),

/***/ "./src/main/webapp/app/shared/shared.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var common_1 = __webpack_require__(6);
var cookies_service_1 = __webpack_require__(19);
var _1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var App1SharedModule = (function () {
    function App1SharedModule() {
    }
    return App1SharedModule;
}());
App1SharedModule = __decorate([
    core_1.NgModule({
        imports: [
            _1.App1SharedLibsModule,
            _1.App1SharedCommonModule
        ],
        declarations: [
            _1.JhiLoginModalComponent,
            _1.HasAnyAuthorityDirective
        ],
        providers: [
            cookies_service_1.CookieService,
            _1.LoginService,
            _1.LoginModalService,
            _1.AccountService,
            _1.StateStorageService,
            _1.Principal,
            _1.CSRFService,
            _1.AuthServerProvider,
            _1.AuthService,
            _1.UserService,
            common_1.DatePipe
        ],
        entryComponents: [_1.JhiLoginModalComponent],
        exports: [
            _1.App1SharedCommonModule,
            _1.JhiLoginModalComponent,
            _1.HasAnyAuthorityDirective,
            common_1.DatePipe
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], App1SharedModule);
exports.App1SharedModule = App1SharedModule;


/***/ }),

/***/ "./src/main/webapp/app/shared/user/account.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Account = (function () {
    function Account(activated, authorities, email, firstName, langKey, lastName, login, imageUrl) {
        this.activated = activated;
        this.authorities = authorities;
        this.email = email;
        this.firstName = firstName;
        this.langKey = langKey;
        this.lastName = lastName;
        this.login = login;
        this.imageUrl = imageUrl;
    }
    return Account;
}());
exports.Account = Account;


/***/ }),

/***/ "./src/main/webapp/app/shared/user/user.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var User = (function () {
    function User(id, login, firstName, lastName, email, activated, langKey, authorities, createdBy, createdDate, lastModifiedBy, lastModifiedDate, password) {
        this.id = id ? id : null;
        this.login = login ? login : null;
        this.firstName = firstName ? firstName : null;
        this.lastName = lastName ? lastName : null;
        this.email = email ? email : null;
        this.activated = activated ? activated : false;
        this.langKey = langKey ? langKey : null;
        this.authorities = authorities ? authorities : null;
        this.createdBy = createdBy ? createdBy : null;
        this.createdDate = createdDate ? createdDate : null;
        this.lastModifiedBy = lastModifiedBy ? lastModifiedBy : null;
        this.lastModifiedDate = lastModifiedDate ? lastModifiedDate : null;
        this.password = password ? password : null;
    }
    return User;
}());
exports.User = User;


/***/ }),

/***/ "./src/main/webapp/app/shared/user/user.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var UserService = (function () {
    function UserService(http) {
        this.http = http;
        this.resourceUrl = 'api/users';
    }
    UserService.prototype.create = function (user) {
        return this.http.post(this.resourceUrl, user);
    };
    UserService.prototype.update = function (user) {
        return this.http.put(this.resourceUrl, user);
    };
    UserService.prototype.find = function (login) {
        return this.http.get(this.resourceUrl + "/" + login).map(function (res) { return res.json(); });
    };
    UserService.prototype.query = function (req) {
        var params = new http_1.URLSearchParams();
        if (req) {
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
        }
        var options = {
            search: params
        };
        return this.http.get(this.resourceUrl, options);
    };
    UserService.prototype.delete = function (login) {
        return this.http.delete(this.resourceUrl + "/" + login);
    };
    return UserService;
}());
UserService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], UserService);
exports.UserService = UserService;


/***/ }),

/***/ "./src/main/webapp/content/images/hipster.png":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "ca854e6d0785ba4b9d715049c0bdbcb3.png";

/***/ }),

/***/ "./src/main/webapp/content/images/hipster2x.png":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "1cd3a1d782e85ba37677c1a2099bc002.png";

/***/ }),

/***/ "./src/main/webapp/content/images/logo-jhipster.png":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "a30deb26b4eb1521433021e326cbcc2c.png";

/***/ }),

/***/ 0:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(0);

/***/ }),

/***/ 1:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(439);

/***/ }),

/***/ 10:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(103);

/***/ }),

/***/ 12:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(438);

/***/ }),

/***/ 14:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(156);

/***/ }),

/***/ 15:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(25);

/***/ }),

/***/ 16:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(441);

/***/ }),

/***/ 17:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(442);

/***/ }),

/***/ 18:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(446);

/***/ }),

/***/ 19:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(561);

/***/ }),

/***/ 2:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(444);

/***/ }),

/***/ 21:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(9);

/***/ }),

/***/ 3:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(440);

/***/ }),

/***/ 4:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(102);

/***/ }),

/***/ 6:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(13);

/***/ }),

/***/ 8:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(445);

/***/ }),

/***/ 9:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(1);

/***/ })

},["./src/main/webapp/app/app.main.ts"]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,